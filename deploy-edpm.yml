---
# Entry point for the CI Framework tool.
# Running by this playbook, and providing the needed information, you will
# be able to deploy various scenarios based on EDPM.
# Note that this playbook *must* be called from within
# openstack-k8s-operators/install_yaml repository in order to leverage its
# own methods.

- name: Remove status flag
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  tasks:
    - name: Delete success flag if exists
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/cifmw-success"
        state: absent

- name: Bootstrap step
  ansible.builtin.import_playbook: playbooks/01-bootstrap.yml

- name: Import infra entrypoint playbook
  ansible.builtin.import_playbook: playbooks/02-infra.yml
  tags:
    - infra

- name: Import package build playbook
  ansible.builtin.import_playbook: playbooks/03-build-packages.yml
  tags:
    - build-packages

- name: Import containers build playbook
  ansible.builtin.import_playbook: playbooks/04-build-containers.yml
  tags:
    - build-containers

- name: Import operators build playbook
  ansible.builtin.import_playbook: playbooks/05-build-operators.yml
  tags:
    - build-operators

- name: Import deploy edpm playbook
  when:
    - cifmw_architecture_scenario is undefined
  ansible.builtin.import_playbook: playbooks/06-deploy-edpm.yml
  tags:
    - edpm

- name: Import VA deployment playbook
  when:
    - cifmw_architecture_scenario is defined
  ansible.builtin.import_playbook: playbooks/06-deploy-architecture.yml
  tags:
    - edpm

- name: Import admin setup related playbook
  ansible.builtin.import_playbook: playbooks/07-admin-setup.yml
  tags:
    - admin-setup

- name: Import run test playbook
  ansible.builtin.import_playbook: playbooks/08-run-tests.yml
  vars:
    pre_tests: "{{ (lookup('vars', 'pre_tempest', default=[])) }}"
    post_tests: "{{ (lookup('vars', 'post_tempest', default=[])) }}"
  when:
    - cifmw_run_tests | default('false') | bool
  tags:
    - run-tests

- name: Inject status flag
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  tasks:
    - name: Inject success flag
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/cifmw-success"
        state: touch

- name: Run log related tasks
  ansible.builtin.import_playbook: playbooks/99-logs.yml
  when: not zuul_log_collection | default('false') | bool
  tags:
    - logs
