---
# This file groups common parameters for Architecture based deployment.
# It is *automatically* included in any run having cifmw_architecture_scenario
# parameter set.
# You can of course manually pass it, it won't make any difference.
#
# Any of those parameter might be overridden from your own parameter file!
#
# This file should NOT be used for the CRC based deployment (3-nodes.yml).


# Ensure some basic directories and parameter are set
cifmw_basedir: "{{ ansible_user_dir }}/ci-framework-data"
cifmw_path: "{{ ansible_user_dir }}/bin:{{ ansible_env.PATH }}"

# Ensure our vbmcd isn't conflicting with devscripts managed instance
cifmw_virtualbmc_daemon_port: 50881

# Ensure we pass libvirt backend
cifmw_use_libvirt: true

# Dependencies for devscripts
cifmw_reproducer_epel_pkgs:
  - python3-bcrypt
  - python3-passlib

# Public network
cifmw_libvirt_manager_pub_net: ocpbm

# Run tests
cifmw_run_tests: true
cifmw_run_tempest: true
cifmw_run_test_role: test_operator
cifmw_test_operator_timeout: 7200
cifmw_test_operator_tempest_include_list: |
  tempest.scenario.test_network_basic_ops.TestNetworkBasicOps

# Set VM partitions and boot mode
cifmw_use_uefi: true
cifmw_root_partition_id: 4
cifmw_libvirt_manager_compute_amount: 3
cifmw_libvirt_manager_compute_disksize: 20
cifmw_libvirt_manager_compute_memory: 4
cifmw_libvirt_manager_compute_cpus: 1

# devscript support for OCP deploy
cifmw_use_devscripts: true
# Required for egress traffic from pods to the osp_trunk network
cifmw_devscripts_enable_ocp_nodes_host_routing: true

# type and size of ssh keys injected into the OCP workers and compute nodes
cifmw_ssh_keytype: ecdsa
cifmw_ssh_keysize: 521
