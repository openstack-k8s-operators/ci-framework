---
- name: "Run ci/playbooks/content_provider/run.yml"
  hosts: "{{Â cifmw_zuul_target_host | default('all') }}"
  gather_facts: true
  tasks:
    - name: Filter out host if needed
      when:
        - cifmw_zuul_target_host is defined
        - cifmw_zuul_target_host != 'all'
        - inventory_hostname != cifmw_zuul_target_host
      ansible.builtin.meta: end_host

    - name: Deploy content provider
      environment:
        ANSIBLE_CONFIG: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/ci-framework/ansible.cfg"
      ansible.builtin.command:
        chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/ci-framework"
        cmd: >-
          ansible-playbook -i localhost,
          -c local ci/playbooks/content_provider/content_provider.yml
          -e @scenarios/centos-9/base.yml
          -e @scenarios/centos-9/content_provider.yml
          -e "@{{ ansible_user_dir }}/ci-framework-data/artifacts/parameters/zuul-params.yml"
          -e "cifmw_rp_registry_ip={{ cifmw_rp_registry_ip }}"

    - name: Include inner ansible vars file
      ansible.builtin.slurp:
        src: "{{ cifmw_artifacts_basedir }}/artifacts/ansible-vars.yml"
      register: inner_ansible

    - name: Get inner ansible vars
      ansible.builtin.set_fact:
        inner_ansible_vars: "{{ inner_ansible.content | b64decode | from_yaml }}"

    - name: Set content provider
      ansible.builtin.set_fact:
        content_provider_ip: "{{ cifmw_rp_registry_ip }} "

    - name: Return Zuul Data
      ansible.builtin.debug:
        msg: >-
          Running Content provider registry on
          {{ content_provider_ip | default('nowhere') }}

    - name: Set up content registry IP address
      zuul_return:
        data:
          zuul:
            pause: true
          content_provider_registry_ip: "{{ content_provider_ip | default('nowhere') | trim }}"
          cifmw_operator_build_output: "{{ inner_ansible_vars.cifmw_operator_build_output }}"
