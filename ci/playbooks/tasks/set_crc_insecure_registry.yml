---
# noqa: schema[playbook]
# Note: content_provider_insecure_registries contains a list of insecure_registries
# Like: content_provider_insecure_registries: 
#         - 1.2.3.4:5001
#         - 6.7.8.9:5001
- name: Patch the image.config.openshift.io resource to include insecure registry
  ansible.builtin.shell: >-
    oc patch --type=merge --patch='{
    "spec": {
      "registrySources": {
        "insecureRegistries": "{{ content_provider_insecure_registries | default([content_provider_registry_ip ~ ':5001']) }}"
      }
    }
    }' image.config.openshift.io/cluster

- name: Patch the image.config.openshift.io resource to allow registries
  vars:
    _default_registries:
      - "quay.io"
      - "gcr.io"
      - "registry.redhat.io"
      - "image-registry.openshift-image-registry.svc:5000"
    _insecure_registries: "{{ _default_registries + content_provider_insecure_registries | default([content_provider_registry_ip ~ ':5001']) }}"
  ansible.builtin.shell: |
    oc patch --type=merge --patch='{
    "spec": {
      "registrySources": {
        "allowedRegistries": "{{ insecure_registries }}"
      }
    }
    }' image.config.openshift.io/cluster

- name: Ensure registries.conf.d exists
  become: true
  ansible.builtin.file:
    path: /etc/containers/registries.conf.d
    state: directory

- name: Set Insecure registry for content provider
  become: true
  ansible.builtin.blockinfile:
    state: present
    insertafter: EOF
    dest: "/etc/containers/registries.conf.d/{{ item.split('.') | last }}-insecure-registry.conf"
    create: true
    content: |-
      [[registry]]
      location = "{{ content_provider_registry_ip }}:5001"
      insecure = true
      blocked = false
      mirror-by-digest-only = false
      prefix = ""
  loop: "{{ content_provider_insecure_registries | default([content_provider_registry_ip ~ ':5001']) }}"

- name: Restart crio
  become: true
  ansible.builtin.service:
    name: crio
    state: reloaded
    enabled: true
