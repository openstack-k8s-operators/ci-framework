---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Clean hacky service override
  become: true
  block:
    - name: Remove directory for service override
      ansible.builtin.file:
        path: "/etc/systemd/system/virtproxyd.service.d"
        state: absent

    - name: Reload systemctl and start/enable virtproxyd.service
      ansible.builtin.systemd_service:
        daemon_reload: true

- name: Ensure firewalld service is up
  become: true
  ansible.builtin.systemd_service:
    name: firewalld
    state: started
    enabled: true

- name: Ensure libvirt modular driver daemons are started.
  when:
    - ansible_facts['distribution'] in ['CentOS', 'RedHat']
    - ansible_facts['distribution_major_version'] >= '9'
  ansible.builtin.include_tasks:
    file: drivers.yml
  loop:
    - qemu
    - interface
    - network
    - nodedev
    - nwfilter
    - secret
    - storage
    - proxy
  loop_control:
    loop_var: driver_name

- name: Manage service for older releases
  become: true
  when:
    - ansible_facts['distribution'] in ['CentOS', 'RedHat']
    - ansible_facts['distribution_major_version'] < '9'
  ansible.builtin.service:
    name: "{{ cifmw_libvirt_manager_daemon }}"
    state: started
    enabled: true

- name: Get libvirt group users
  ansible.builtin.getent:
    database: group
    key: libvirt
  register: libvirt_group_users

- name: Add user if not exists in libvirt group
  when: "'cifmw_libvirt_manager_user' not in ansible_facts.getent_group['libvirt']"
  become: true
  ansible.builtin.user:
    name: "{{ cifmw_libvirt_manager_user }}"
    groups: libvirt
    append: true

- name: Allow QEMU on home directory for the storage access
  become: true
  ansible.posix.acl:
    path: "{{ ansible_user_dir }}"
    entity: "qemu"
    etype: "user"
    permissions: rx
    state: present

- name: Inject system connection parameters in bashrc
  ansible.builtin.blockinfile:
    dest: "{{ ansible_user_dir }}/.bashrc"
    block: |-
      export LIBVIRT_DEFAULT_URI="qemu:///system"

- name: Ensure we reload user env
  ansible.builtin.meta: reset_connection
