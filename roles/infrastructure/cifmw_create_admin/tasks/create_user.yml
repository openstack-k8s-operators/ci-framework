---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: "Create user {{ cifmw_admin_user }}"
  become: true
  ansible.builtin.user:
    name: '{{ cifmw_admin_user }}'
    generate_ssh_key: '{{ cifmw_admin_generate_key }}'

- name: "Grant admin rights to user {{ cifmw_admin_user }}"
  become: true
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ cifmw_admin_user }}"
    content: "{{ cifmw_admin_user }} ALL=(ALL) NOPASSWD:ALL"
    mode: "0440"
    owner: root
    group: root

# workaround for https://bugs.launchpad.net/tripleo/+bug/1917856
- name: "Ensure home dir has the right owner/group for user {{ cifmw_admin_user }}"
  become: true
  ansible.builtin.file:
    path: "/home/{{ cifmw_admin_user }}"
    state: directory
    owner: "{{ cifmw_admin_user }}"
    group: "{{ cifmw_admin_user }}"
    mode: "0700"

- name: "Ensure .ssh dir exists for user {{ cifmw_admin_user }}"
  become: true
  ansible.builtin.file:
    path: "/home/{{ cifmw_admin_user }}/.ssh"
    state: directory
    owner: "{{ cifmw_admin_user }}"
    group: "{{ cifmw_admin_user }}"
    mode: "0700"

- name: "Ensure authorized_keys file exists for user {{ cifmw_admin_user }}"
  become: true
  ansible.builtin.file:
    path: "/home/{{ cifmw_admin_user }}/.ssh/authorized_keys"
    state: touch
    owner: '{{ cifmw_admin_user }}'
    group: '{{ cifmw_admin_user }}'
    mode: "0600"

- name: "Get remote key for {{ cifmw_admin_user }}"
  become: true
  when:
    - cifmw_admin_generate_key | bool
  ansible.builtin.slurp:
    src: "/home/{{ cifmw_admin_user }}/.ssh/id_rsa.pub"
  register: key

- name: "Append pub key for {{ cifmw_admin_user }}"
  become: true
  when:
    - cifmw_admin_generate_key | bool
  ansible.builtin.lineinfile:
    path: "/home/{{ cifmw_admin_user }}/.ssh/authorized_keys"
    line: "{{ key['content'] | b64decode }}"
    state: present
    owner: "{{ cifmw_admin_user }}"
    group: "{{ cifmw_admin_user }}"
    mode: "0600"
