# Listen on all local IP interfaces
SUSHY_EMULATOR_LISTEN_IP = '{{ cifmw_sushy_emulator_listen_ip }}'

# Bind to TCP port 8000
SUSHY_EMULATOR_LISTEN_PORT = 8000

# Serve this SSL certificate to the clients
SUSHY_EMULATOR_SSL_CERT = None

# If SSL certificate is being served, this is its RSA private key
SUSHY_EMULATOR_SSL_KEY = None

# If authentication is desired, set this to an htpasswd file.
SUSHY_EMULATOR_AUTH_FILE = '/etc/sushy-emulator/.htpasswd'

# The OpenStack cloud ID to use. This option enables OpenStack driver.
SUSHY_EMULATOR_OS_CLOUD = {{ cifmw_sushy_emulator_driver_openstack_cloud }}

# The libvirt URI to use. This option enables libvirt driver.
{% if cifmw_sushy_emulator_driver == 'libvirt' %}
SUSHY_EMULATOR_LIBVIRT_URI = '{{ cifmw_sushy_emulator_libvirt_uri }}'
{% else %}
SUSHY_EMULATOR_LIBVIRT_URI = None
{% endif %}

# Instruct the libvirt driver to ignore any instructions to
# set the boot device. Allowing the UEFI firmware to instead
# rely on the EFI Boot Manager
# Note: This sets the legacy boot element to dev="fd"
# and relies on the floppy not existing, it likely wont work
# your VM has a floppy drive.
SUSHY_EMULATOR_IGNORE_BOOT_DEVICE = False

{% if _cifmw_sushy_emulator_instances is defined %}
# This list contains the identities of instances that the driver will filter by.
# It is useful in a tenant environment where only some instances represent
# virtual baremetal.
SUSHY_EMULATOR_ALLOWED_INSTANCES = {{ _cifmw_sushy_emulator_instances }}
{% endif %}
