---
# Copyright 2024 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Remove key and certificate files on target host
  no_log: true
  become: true
  ansible.builtin.file:
    state: absent
    dest: "{{ item }}"
  loop:
    - "{{ cifmw_external_dns_certificate }}"
    - "{{ cifmw_external_dns_key }}"
  when:
    - cifmw_external_dns_clean_cert | bool

- name: Get DNS Forward server_index matching cifmw_external_dns_name
  ansible.builtin.include_tasks: get_dns_forward_index.yml

- name: Remove DNS forwarding by patching dns.operator/default in openshift-dns
  delegate_to: localhost
  run_once: true
  when: (server_index | int) > -1
  kubernetes.core.k8s_json_patch:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    api_version: operator.openshift.io/v1
    namespace: openshift-dns
    kind: DNS
    name: default
    patch:
      - op: remove
        path: "/spec/servers/{{ server_index }}"
  retries: "{{ cifmw_external_dns_retries }}"
  delay: "{{ cifmw_external_dns_delay }}"
  register: result
  until: result.failed == false

- name: Ensure manifest files are absent
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    src: "{{ cifmw_external_dns_manifests_dir }}/{{ item }}.yml"
    state: absent
    wait: true
  failed_when: false
  when: item | length > 0
  loop:
    - "{{ cifmw_external_dns_name }}"
    - "{{ cifmw_external_dns_cert_name if cifmw_external_dns_clean_cert }}"

- name: Remove role needed directories
  delegate_to: localhost
  run_once: true
  ansible.builtin.file:
    path: "{{ cifmw_external_dns_manifests_dir }}"
    state: absent
