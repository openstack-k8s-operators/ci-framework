---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Check for certificate regeneration file.
  ansible.builtin.stat:
    path: "{{ cifmw_openshift_adm_cert_expire_date_file }}"
  register: _cert_file_stat

- name: Execute all tasks pertaining to standing up the cluster.
  when:
    - _cert_file_stat.stat.exists | default(false)
  block:
    - name: Read the certificate expiration date recorded.
      ansible.builtin.slurp:
        src: "{{ cifmw_openshift_adm_cert_expire_date_file }}"
      register: _cert_file

    - name: Find if cert expire date file is older than a day.
      ansible.builtin.find:
        age: 1d
        hidden: true
        path: >-
          {{
            cifmw_openshift_adm_cert_expire_date_file | ansible.builtin.dirname
          }}
        pattern: >-
          {{
            cifmw_openshift_adm_cert_expire_date_file |
            ansible.builtin.basename
          }}
      register: _cert_file_age

    - name: Set cert check if older than 1 day
      when:
        - _cert_file_age is defined
        - _cert_file_age.files | default([]) | length > 0
      ansible.builtin.set_fact:
        _openshift_adm_check_cert_approve: true

    - name: Cleanup when there is an expired certificate.
      vars:
        _expire_date: "{{ _cert_file.content | b64decode }}"
        _diff_hours: >-
          {{
            (
              (_expire_date | trim | ansible.builtin.to_datetime) -
              (
                now(utc=true, fmt="%Y-%m-%d %H:%M:%S") |
                ansible.builtin.to_datetime
              )
            ).total_seconds() / 3600 | int
          }}
      when:
        - _diff_hours | int < 2
      block:
        - name: Reset golden image exists flag
          ansible.builtin.set_fact:
            cifmw_devscripts_ocp_comply: false
            cifmw_devscripts_force_cleanup: true
            _openshift_adm_check_cert_approve: false

        - name: Cleanup the golden image if the certificate has expired.
          ansible.builtin.include_tasks:
            file: cleanup.yml
            apply:
              tags:
                - always
