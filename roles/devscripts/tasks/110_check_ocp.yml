---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Assign default values to OpenShift cluster check variables.
  ansible.builtin.set_fact:
    cifmw_devscripts_ocp_exists: false
    cifmw_devscripts_ocp_online: false

- name: Check for pre-existences of OpenShift cluster.
  ansible.builtin.find:
    file_type: "file"
    path: "{{ cifmw_devscripts_config.working_dir }}"
    patterns: "{{ cifmw_devscripts_config.cluster_name }}_*.xml"
  register: overlay_results

- name: Verify the node definition match with expected count.
  when: >-
    (
      cifmw_devscripts_config.num_masters | int +
      cifmw_devscripts_config.num_workers | int
    ) == overlay_results.matched
  ansible.builtin.set_fact:
    cifmw_devscripts_ocp_exists: true

- name: Gather dev-scripts deployed cluster auth information.
  ansible.builtin.stat:
    path: >-
      {{
        [
          cifmw_devscripts_repo_dir,
          'ocp',
          cifmw_devscripts_config['cluster_name'],
          'auth',
          'kubeadmin-password'
        ] | ansible.builtin.path_join
      }}
  register: _kubeconfig_result

- name: Verify the deployed cluster.
  when:
    - _kubeconfig_result.stat is defined
    - _kubeconfig_result.stat.exists
  block:
    - name: Gather the deployed cluster authentication information.
      ansible.builtin.import_tasks: set_cluster_fact.yml

    - name: Login to the deployed OpenShift cluster.
      kubernetes.core.k8s_auth:
        host: "{{ cifmw_openshift_api }}"
        password: "{{ cifmw_openshift_password }}"
        state: present
        username: "{{ cifmw_openshift_user }}"
        validate_certs: false
      register: _login_result
      failed_when: false

    - name: Authentication successful to existing cluster.
      when:
        - _login_result.k8s_auth.api_key is defined
      ansible.builtin.set_fact:
        cifmw_devscripts_ocp_online: true

    - name: Print the encountered error.
      when:
        - _login_result.failed
      ansible.builtin.debug:
        var: _login_result

    - name: Executing cleanup of stale OpenShift cluster.
      when:
        - _login_result.failed
        - "'No route to host' not in _login.result.msg"
      ansible.builtin.include_tasks: cleanup.yml
