---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Build configuration
  tags:
    - always
  ansible.builtin.include_tasks:
    file: build_config.yml
    apply:
      tags:
        - always

- name: Assign default values to OpenShift cluster check variables.
  ansible.builtin.set_fact:
    cifmw_devscripts_ocp_comply: false
    cifmw_devscripts_ocp_online: false
    _openshift_adm_check_cert_approve: false
    cifmw_openshift_adm_cert_expire_date_file: >-
      {{
        (
          cifmw_devscripts_config.working_dir, '.ocp_cert_not_after'
        ) | ansible.builtin.path_join
      }}

- name: Check for pre-existences of OpenShift cluster.
  register: _base_img_results
  ansible.builtin.find:
    file_type: "file"
    path: "{{ cifmw_devscripts_data_dir }}/images"
    patterns: "{{ cifmw_devscripts_config.cluster_name }}_*.qcow2"

- name: Ensure we have needed base images
  vars:
    _cluster_members: >-
      {{
        cifmw_devscripts_config.num_masters | int +
        cifmw_devscripts_config.num_workers | int
      }}
  ansible.builtin.set_fact:
    _needed_base_imgs: >-
      {{ _cluster_members|int == _base_img_results.matched|int }}

- name: Get cluster status
  register: _deployed_cluster
  ansible.builtin.stat:
    get_attributes: false
    get_checksum: false
    get_mime: false
    path: >-
      {{
        [cifmw_devscripts_repo_dir,
        'ocp',
         cifmw_devscripts_config.cluster_name] | path_join
      }}

- name: Get volumes
  register: _volumes
  ansible.builtin.find:
    file_type: "file"
    path: "{{ cifmw_devscripts_data_dir }}/ocp_volumes"
    patterns: "base-cifmw-ocp_master-0*"
    excludes: "*.xml"

- name: Ensure we have needed volumes
  vars:
    _needed_vols: >-
      {{
        _cifmw_libvirt_manager_layout.vms.ocp.extra_disks_num | default(0)
      }}
  ansible.builtin.set_fact:
    _needed_volumes: >-
      {{ _volumes.matched|int == _needed_vols|int }}

- name: Verify the node definition match with expected count.
  when:
    - _deployed_cluster.stat.exists | bool
    - _needed_base_imgs | bool
    - _needed_volumes | bool
  ansible.builtin.set_fact:
    cifmw_devscripts_ocp_comply: true

- name: Gather dev-scripts deployed cluster auth information.
  ansible.builtin.stat:
    path: >-
      {{
        [
          cifmw_devscripts_repo_dir,
          'ocp',
          cifmw_devscripts_config['cluster_name'],
          'auth',
          'kubeadmin-password'
        ] | ansible.builtin.path_join
      }}
  register: _kubeconfig_result

- name: Verify the deployed cluster.
  when:
    - _kubeconfig_result.stat is defined
    - _kubeconfig_result.stat.exists
  ansible.builtin.include_tasks: 111_verify_cluster.yml

- name: Verify the golden image.
  when:
    - cifmw_devscripts_ocp_comply
    - not cifmw_devscripts_ocp_online
  ansible.builtin.include_tasks: 112_verify_golden_image.yml

- name: Cleanup cluster if not complying with wanted layout
  when:
    - _deployed_cluster.stat.exists | bool
    - not cifmw_devscripts_ocp_comply | bool
  ansible.builtin.include_tasks:
    file: cleanup.yml
    apply:
      tags:
        - always
