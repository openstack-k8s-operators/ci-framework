---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Gather the configurations to be passed to dev-scripts.
  ansible.builtin.set_fact:
    cifmw_devscripts_config: >-
      {{
        cifmw_devscripts_config_defaults |
        combine(cifmw_devscripts_config_overrides, recursive=true)
      }}
    cacheable: true

- name: Gather the dev-scripts repo directory information.
  ansible.builtin.stat:
    path: "{{ cifmw_devscripts_repo_dir }}"
  register: devscript_repodir

- name: Gather the metal3-dev-env repo directory information.
  ansible.builtin.stat:
    path: "{{ cifmw_devscripts_config_defaults.working_dir }}/metal3-dev-env"
  register: metal3_dev_env_repodir

- name: Remove the deployed OpenShift platform.
  when:
    - not cifmw_devscripts_dry_run | bool
    - devscript_repodir.stat.exists
    - metal3_dev_env_repodir.stat.exists
  community.general.make:
    chdir: "{{ cifmw_devscripts_repo_dir }}"
    target: clean

- name: Remove the SSH key generated for accessing the platform
  ansible.builtin.file:
    path: "{{ cifmw_devscripts_artifacts_dir }}/{{ item }}"
    state: absent
  loop:
    - "cifmw_ocp_access_key"
    - "cifmw_ocp_access_key.pub"

- name: Cleanup the devscripts repo directory.
  become: true
  ansible.builtin.file:
    path: "{{ cifmw_devscripts_repo_dir }}"
    state: absent
    force: true

- name: Cleanup the devscripts working directory.
  become: true
  ansible.builtin.file:
    path: "{{ cifmw_devscripts_config.working_dir }}"
    state: absent
    force: true

- name: Cleanup DNS resolution artifacts.
  when: cifmw_network_local_dns is defined
  ansible.builtin.include_role:
    name: ci_network
    tasks_from: cleanup-dns.yml

- name: Ensure forwarding and post routing rules are cleaned.
  when:
    - cifmw_devscripts_osp_compute_nodes is defined
    - cifmw_devscripts_osp_compute_nodes | length > 0
  block:
    - name: Ensuring post routing rules are cleaned.
      become: true
      vars:
        ext_interface: >-
          {{
            ansible_default_ipv4.interface
            if cifmw_devscripts_config.ip_stack == 'v4'
            else
            ansible_default_ipv6.interface
          }}
      ansible.builtin.iptables:
        action: "insert"
        chain: "POSTROUTING"
        out_interface: "{{ ext_interface }}"
        state: absent
        table: "nat"
        jump: "MASQUERADE"

    - name: Ensuring forwarding rules are cleaned.
      become: true
      ansible.builtin.iptables:
        action: "insert"
        chain: "FORWARD"
        in_interface: "{{ item.name }}"
        jump: "ACCEPT"
        state: absent
      loop: "{{ cifmw_devscripts_extra_networks }}"

- name: Clear firewall settings for all extra networks
  become: true
  when: cifmw_devscripts_extra_networks is defined
  ansible.posix.firewalld:
    zone: libvirt
    interface: "{{ item.name }}"
    state: "disabled"
    permanent: true
    immediate: true
  loop: "{{ cifmw_devscripts_extra_networks }}"

- name: Remove all the virtual networks created by this role.
  when: cifmw_devscripts_extra_networks is defined
  community.libvirt.virt_net:
    name: "{{ item }}"
    state: absent
    uri: "qemu:///system"
  loop: "{{ cifmw_devscripts_extra_networks }}"
