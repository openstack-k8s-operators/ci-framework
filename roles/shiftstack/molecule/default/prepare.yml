---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Prepare
  hosts: all
  vars:
    ansible_user_dir: "{{ lookup('env', 'HOME') }}"
    cifmw_path: "{{ ansible_user_dir }}/.crc/bin:{{ ansible_user_dir }}/.crc/bin/oc:{{ ansible_user_dir }}/bin:{{ ansible_env.PATH }}"
    cifmw_openshift_kubeconfig: "{{ ansible_user_dir  }}/.crc/machines/crc/kubeconfig"
    openstack_namespace_name: openstack
    openstack_config_name: openstack-config
    openstack_config_secret_name: openstack-config-secret
    openstack_root_ca_secret_name: rootca-public
  roles:
    - role: test_deps
    - role: ci_setup
  tasks:
    - name: Ensure CRC is started
      ansible.builtin.command:
        cmd: crc start

    - name: Create the openstack namespace
      kubernetes.core.k8s:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ openstack_namespace_name }}"

    - name: Create a dummy configmap
      kubernetes.core.k8s:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "{{ openstack_config_name }}"
            namespace: "{{ openstack_namespace_name }}"
          data:
            key1: dummy1
            key2: dummy2

    - name: Create a dummy openstack config secret
      kubernetes.core.k8s:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ openstack_config_secret_name }}"
            namespace: "{{ openstack_namespace_name }}"
          type: Opaque
          data:
            secure.yaml: ZHVtbXkK # Base64 encoded value of "dummy"

    - name: Create dummy openstack root ca secret
      kubernetes.core.k8s:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ openstack_root_ca_secret_name }}"
            namespace: "{{ openstack_namespace_name }}"
          type: Opaque
          data:
            ca.crt: ZHVtbXkK # Base64 encoded value of "dummy"
            tls.crt: ZHVtbXkK # Base64 encoded value of "dummy"
            tls.key: ZHVtbXkK # Base64 encoded value of "dummy"
