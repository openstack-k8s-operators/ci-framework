---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Prepare
  hosts: all
  vars:
    cifmw_path: "{{ ansible_user_dir }}/.crc/bin:{{ ansible_user_dir }}/.crc/bin/oc:{{ ansible_user_dir }}/bin:{{ ansible_env.PATH }}"
    cifmw_openshift_kubeconfig: "{{ ansible_user_dir }}/.crc/machines/crc/kubeconfig"
  pre_tasks:
    - name: Ensure CRC is started
      async: 1800
      poll: 0
      register: _crc_start
      ansible.builtin.command:
        cmd: crc start
  roles:
    - role: test_deps
    - role: ci_setup
    - role: install_yamls
  tasks:
    - name: Check for CRC status
      ansible.builtin.async_status:
        jid: "{{ _crc_start.ansible_job_id }}"
      register: _crc_status
      until: _crc_status.finished
      retries: 100
      delay: 10
    - name: Install infra operator
      ansible.builtin.include_role:
        name: 'install_yamls_makes'
        tasks_from: "{{ item }}"
      loop:
        - 'make_namespace.yml'
        - 'make_infra.yml'
    - name: Wait for infra operator to be intalled
      environment:
        KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
        PATH: "{{ cifmw_path }}"
      ansible.builtin.command:
        cmd: >-
          oc get ClusterServiceVersion
          -n openstack-operators
          -o jsonpath='{.items[*].status.phase}'
      changed_when: false
      register: _infra_csv_out
      retries: 12
      delay: 10
      until:
        - _infra_csv_out is defined
        - _infra_csv_out.failed is false
        - _infra_csv_out.stdout_lines | length > 0
        - "(_infra_csv_out.stdout_lines[0] | lower) == 'succeeded'"
