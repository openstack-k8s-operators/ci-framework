---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Get ingresses domain
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.command:
    cmd: 'oc get ingresses.config/cluster -o jsonpath={.spec.domain}'
  register: _ingress_domain
  when: cifmw_sushy_emulator_install_type == 'ocp'

- name: Set sushy url for ocp installation
  ansible.builtin.set_fact:
    sushy_url: "http://sushy-emulator.{{ _ingress_domain.stdout }}"
  when: cifmw_sushy_emulator_install_type == 'ocp'

- name: Base64 encode ssh private key
  ansible.builtin.slurp:
    src: "{{ cifmw_sushy_emulator_sshkey_path }}"
  register: _cifmw_sushy_emulator_private_key_b64
  no_log: true

- name: Base64 encode ssh public key
  ansible.builtin.slurp:
    src: "{{ cifmw_sushy_emulator_sshkey_path }}.pub"
  register: _cifmw_sushy_emulator_public_key_b64
  no_log: true

- name: Run ssh-keyscan
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      ssh-keyscan -H {{ hostvars[cifmw_baremetal_hypervisor_target].ansible_host }} 2>/dev/null | base64 -w 0
  register: _cifmw_sushy_emulator_ssh_known_hosts_b64

- name: Write known hosts for later use
  ansible.builtin.copy:
    content: "{{ _cifmw_sushy_emulator_ssh_known_hosts_b64.stdout | b64decode }}"
    dest: "{{ cifmw_sushy_emulator_resource_directory }}/known_hosts"
    mode: '0644'

- name: Get details for Libvirt driver
  when: cifmw_sushy_emulator_driver == 'libvirt'
  block:
    - name: Set vars
      ansible.builtin.set_fact:
        _libvirt_uri: "qemu+ssh://{{ cifmw_sushy_emulator_libvirt_user }}@{{ hostvars[cifmw_baremetal_hypervisor_target].ansible_host }}/system"

    # todo(Lewis): Once changes are made to the libvirt_manager role, the baremetal-info.yml can be consumed to gather required info
    - name: Get Libvirt instance UUIDs
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          virsh --connect={{ _libvirt_uri }} list --all --uuid --name | grep {{ cifmw_sushy_emulator_instance_node_name_prefix }} | cut -d' ' -f1
      register: _virsh_list_uuid

    - name: Set instance_uuid variable
      ansible.builtin.set_fact:
        _cifmw_sushy_emulator_instances: "{{ _virsh_list_uuid.stdout_lines | regex_replace('\n(?!.*\n)', ', ')}}"

# todo(Lewis): The OpenStack driver is currently untested waiting for changes being implemented upstream by sbaker.
- name: Gather details for Openstack driver
  when:
    - cifmw_sushy_emulator_driver == 'openstack'
  block:
    - name: Get Openstack instance UUIDs
      ansible.builtin.command:
        cmd: "openstack --os-cloud={{ cifmw_sushy_emulator_driver_openstack_cloud }} server list --name {{ cifmw_sushy_emulator_instance_node_name_prefix }}.* -f json -c ID | jq -c [.[].ID])"
      register: _openstack_server_list_uuid

    - name: Set instance_uuid variable for openstack driver
      ansible.builtin.set_fact:
        _cifmw_sushy_emulator_instances: "{{ _openstack_server_list_uuid }}"
        _libvirt_uri: None

    - name: Base64 encode openstack clouds.yaml file
      ansible.builtin.slurp:
        src: "{{ cifmw_sushy_emulator_driver_openstack_client_config_file }}"
      register: _cifmw_sushy_emulator_driver_openstack_client_config_file_b64
