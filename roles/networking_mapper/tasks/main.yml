---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Load the Network Definition from file if not given
  when: "cifmw_networking_definition is not defined"
  block:
    - name: Check for Networking Definition file existence
      ansible.builtin.stat:
        path: "{{ cifmw_networking_mapper_networking_def_path }}"
      register: _net_def_stat

    - name: Load the Networking Definition from file
      when: "_net_def_stat.stat.exists"
      ansible.builtin.include_vars:
        file: "{{ cifmw_networking_mapper_networking_def_path }}"
        name: cifmw_networking_definition

- name: Load the interfaces info from file if not given
  when: "cifmw_networking_mapper_ifaces_info is not defined"
  block:
    - name: Check for interfaces info file existence
      ansible.builtin.stat:
        path: "{{ cifmw_networking_mapper_ifaces_info_path }}"
      register: _ifaces_info_stat

    - name: Load the interfaces info from file
      when: "_ifaces_info_stat.stat.exists"
      ansible.builtin.include_vars:
        file: "{{ cifmw_networking_mapper_ifaces_info_path }}"
        name: cifmw_networking_mapper_ifaces_info

- name: Ensure local fact is empty
  ansible.builtin.set_fact:
    _cifmw_networking_mapper_definition: {}

- name: Set the input Networking Definition and patch it if needed
  vars:
    _net_def_patches: >-
      {{
        hostvars[inventory_hostname] |
        dict2items |
        selectattr("key", "match",
                   "^cifmw_networking_mapper_definition_patch.*") |
        sort(attribute='key') |
        map(attribute='value') |
        list
      }}
  ansible.builtin.set_fact:
    _cifmw_networking_mapper_definition: >-
      {{
        _cifmw_networking_mapper_definition |
        combine(item, recursive=True)
      }}
  loop: "{{ [cifmw_networking_definition] + _net_def_patches }}"

- name: Gather facts if requested
  when:
    - cifmw_networking_mapper_gather_facts
  ansible.builtin.include_tasks: _gather_facts.yml

- name: Ensure CI infrastructure dir exists
  become: true
  ansible.builtin.file:
    path: "{{ cifmw_networking_mapper_infra_dir }}"
    state: directory
    mode: '0755'

- name: Write the Networking Definition to file
  become: true
  ansible.builtin.copy:
    backup: true
    dest: "{{ cifmw_networking_mapper_networking_def_path }}"
    content: "{{ _cifmw_networking_mapper_definition | to_nice_yaml }}"
    mode: '0644'

- name: Try/catch block
  block:
    - name: Call the networking mapper
      cifmw.general.ci_net_map:
        networking_definition: "{{ _cifmw_networking_mapper_definition }}"
        interfaces_info: >-
          {{
            cifmw_networking_mapper_ifaces_info |
            default(omit)
          }}
        search_domain_base: >-
          {{
            cifmw_networking_mapper_search_domain_base |
            default(omit)
          }}
        interfaces_info_translations: >-
          {{
            cifmw_networking_mapper_interfaces_info_translations |
            default(omit)
          }}
        full_map: "{{ cifmw_networking_mapper_full_map |  default(omit) }}"
      register: _networking_mapper_out

  rescue:
    - name: Debug interfaces_info
      ansible.builtin.debug:
        var: cifmw_networking_mapper_ifaces_info

    - name: Debug search_domain_base
      ansible.builtin.debug:
        var: search_domain_base

    - name: Debug interfaces_info_translations
      ansible.builtin.debug:
        var: interfaces_info_translations

    - name: Debug full_map
      ansible.builtin.debug:
        var: full_map

    - name: Fail for good
      ansible.builtin.fail:
        msg: >-
          Error detected while calling networking_mapper.
          Check above debug outputs to fix your env.

- name: Set networking mapper facts
  ansible.builtin.set_fact:
    # Set it as a fact in case it was not provided
    cifmw_networking_definition: "{{ _cifmw_networking_mapper_definition }}"
    cifmw_networking_env_definition: >-
      {{
        _networking_mapper_out.networking_env_definition
      }}

- name: Write mapping outputs to file
  become: true
  block:
    - name: Write the Networking Environment Definition to file
      when: not _networking_mapper_out.failed
      ansible.builtin.copy:
        backup: true
        dest: "{{ cifmw_networking_mapper_networking_env_def_path }}"
        content: >-
          {{ _networking_mapper_out.networking_env_definition | to_nice_yaml }}
        mode: '0644'
