---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


# We would wait till forbidden error is received. It indicates the endpoint
# is reachable.

- name: Wait until the OCP API endpoint is reachable.
  ansible.builtin.uri:
    url: "{{ cifmw_openshift_api }}"
    return_content: true
    validate_certs: false
    status_code: 403
  register: ocp_api_result
  until: ocp_api_result.status == 403
  retries: "{{ cifmw_openshift_adm_retry_count }}"
  delay: 5

- name: Get nodes list
  ansible.builtin.import_tasks: _get_nodes.yml

- name: Ensure the nodes are in ready state.
  when:
    - not cifmw_openshift_adm_dry_run
  kubernetes.core.k8s_drain:
    name: "{{ item }}"
    state: uncordon
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    validate_certs: false
  loop: "{{ _nodes.resources | map(attribute='metadata.name') | list }}"
  register: _node_status
  until: _node_status.result is defined
  retries: "{{ cifmw_openshift_adm_retry_count }}"
  delay: 5

- name: Check for pending certificate approval.
  when:
    - _openshift_adm_check_cert_approve | default(false) | bool
  approve_csr:
    k8s_config: "{{ cifmw_openshift_kubeconfig }}"

- name: Wait until the OpenShift cluster is stable.
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.command:
    cmd: >-
      oc adm wait-for-stable-cluster --minimum-stable-period=5s --timeout=30m

- name: Wait until OCP login succeeds.
  community.okd.openshift_auth:
    host: "{{ cifmw_openshift_api }}"
    password: "{{ cifmw_openshift_password }}"
    state: present
    username: "{{ cifmw_openshift_user }}"
    validate_certs: false
  register: _oc_login_result
  until: _oc_login_result.k8s_auth is defined
  retries: "{{ cifmw_openshift_adm_retry_count }}"
  delay: 2
