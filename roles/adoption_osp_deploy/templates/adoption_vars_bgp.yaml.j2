#jinja2: trim_blocks:True, lstrip_blocks:True
source_mariadb_ip: 99.99.0.29
source_ovndb_ip: 99.99.0.29
edpm_node_hostname: {{ _compute_1_name }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
edpm_node_ip: {{ _compute_1_ip }}

edpm_computes: |
  {% for compute in _vm_groups['osp-r0-computes'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[compute] %}
  ["{{ compute }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.ctlplaner0[ip_version|default('ip_v4')] }}"
  {% endfor %}
  {% for compute in _vm_groups['osp-r1-computes'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[compute] %}
  ["{{ compute }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.ctlplaner1[ip_version|default('ip_v4')] }}"
  {% endfor %}
  {% for compute in _vm_groups['osp-r2-computes'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[compute] %}
  ["{{ compute }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.ctlplaner2[ip_version|default('ip_v4')] }}"
  {% endfor %}


{% if _vm_groups['osp-r0-networkers'] | default([]) | length > 0 %}
edpm_networkers: |
  {% for networker in _vm_groups['osp-r0-networkers'] | default([]) %}
  {% set node_nets = cifmw_networking_env_definition.instances[networker] %}
  ["{{ networker }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.ctlplaner0[ip_version|default('ip_v4')] }}"
  {% endfor %}
  {% for networker in _vm_groups['osp-r1-networkers'] | default([]) %}
  {% set node_nets = cifmw_networking_env_definition.instances[networker] %}
  ["{{ networker }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.ctlplaner1[ip_version|default('ip_v4')] }}"
  {% endfor %}
  {% for networker in _vm_groups['osp-r2-networkers'] | default([]) %}
  {% set node_nets = cifmw_networking_env_definition.instances[networker] %}
  ["{{ networker }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.ctlplaner2[ip_version|default('ip_v4')] }}"
  {% endfor %}
{% endif %}


source_galera_members: |
  {% for controller in _vm_groups['osp-r0-controllers'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[controller] %}
  ["{{ controller }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="99.99.0.29"
  {% endfor %}
  {% for controller in _vm_groups['osp-r1-controllers'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[controller] %}
  ["{{ controller }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="99.99.1.29"
  {% endfor %}
  {% for controller in _vm_groups['osp-r2-controllers'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[controller] %}
  ["{{ controller }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="99.99.2.29"
  {% endfor %}


{% if _vm_groups['osp-r0-computes'] | default([]) | length > 0 %}
edpm_nodes:
  {% for compute in _vm_groups['osp-r0-computes'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[compute] %}
  {{ compute }}:
    hostName: {{ compute }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner0[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner0' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
  {% for compute in _vm_groups['osp-r1-computes'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[compute] %}
  {{ compute }}:
    hostName: {{ compute }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner1[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner1' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
  {% for compute in _vm_groups['osp-r2-computes'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[compute] %}
  {{ compute }}:
    hostName: {{ compute }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner2[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner2' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
{% endif %}

edpm_nodes_networker:
{% if _vm_groups['osp-r0-networkers'] | default([]) | length > 0 %}
  {% for networker in _vm_groups['osp-r0-networkers'] | default([]) %}
  {% set node_nets = cifmw_networking_env_definition.instances[networker] %}
  {{ networker }}:
    hostName: {{ networker }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner0[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner0' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
  {% for networker in _vm_groups['osp-r1-networkers'] | default([]) %}
  {% set node_nets = cifmw_networking_env_definition.instances[networker] %}
  {{ networker }}:
    hostName: {{ networker }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner1[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner1' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
  {% for networker in _vm_groups['osp-r2-networkers'] | default([]) %}
  {% set node_nets = cifmw_networking_env_definition.instances[networker] %}
  {{ networker }}:
    hostName: {{ networker }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner2[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner2' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
{% endif %}
  {% for controller in _vm_groups['osp-r0-controllers'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[controller] %}
  {{ controller }}:
    hostName: {{ controller }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner0[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner0' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
  {% for controller in _vm_groups['osp-r1-controllers'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[controller] %}
  {{ controller }}:
    hostName: {{ controller }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner1[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner1' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
  {% for controller in _vm_groups['osp-r2-controllers'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[controller] %}
  {{ controller }}:
    hostName: {{ controller }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplaner2[ip_version|default('ip_v4')] }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net][ip_version|default('ip_v4')] }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplaner2' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}


upstream_dns: {{ cifmw_networking_env_definition.networks.ctlplane[dns_version|default('dns_v4')] | first }}
os_cloud_name: {{ cifmw_adoption_osp_deploy_scenario.stacks[0].stackname }}
standalone_ip: {{ _undercloud_ip }}
