#jinja2: trim_blocks:True, lstrip_blocks:True
{% for group, role in cifmw_adoption_osp_deploy_scenario.roles_groups_map.items() %}
{{ role }}:
  hosts:
    {% for node in _vm_groups[group] %}
    {% set node_nets = cifmw_networking_env_definition.instances[node] %}
    {{ node }}:
    {% if 'ctlplaner0' in node_nets.networks %}
      ansible_host: {{ node_nets.networks.ctlplaner0[ip_version|default('ip_v4')] }}
      canonical_hostname: {{ node }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
      ctlplane_ip: {{ node_nets.networks.ctlplaner0[ip_version|default('ip_v4')] }}
    {% elif 'ctlplaner1' in node_nets.networks %}
      ansible_host: {{ node_nets.networks.ctlplaner1[ip_version|default('ip_v4')] }}
      canonical_hostname: {{ node }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
      ctlplane_ip: {{ node_nets.networks.ctlplaner1[ip_version|default('ip_v4')] }}
    {% else %}
      ansible_host: {{ node_nets.networks.ctlplaner2[ip_version|default('ip_v4')] }}
      canonical_hostname: {{ node }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
      ctlplane_ip: {{ node_nets.networks.ctlplaner2[ip_version|default('ip_v4')] }}
    {% endif %}
      {% for network_name, net in node_nets.networks.items() %}
      {% if 'vlan_id' in net %}
        {% set net_name = ['storage_mgmt'] if network_name == 'storagemgmt' else [network_name] %}
        {% set net_name = ['internal_api'] if network_name == 'internalapi' else [network_name] %}
      {{ net_name[0] }}_ip: {{ net[ip_version|default('ip_v4')] }}
      {% endif %}
      {% endfor %}
    {% endfor %}
  vars:
    ansible_ssh_common_args: -o StrictHostKeyChecking=no
    ansible_ssh_user: zuul
{% endfor %}
Undercloud:
  hosts:
    undercloud: {}
  vars:
    ansible_connection: local
    ansible_host: localhost
allovercloud:
  children:
    {% for _, role in cifmw_adoption_osp_deploy_scenario.roles_groups_map.items() %}
    {{ role }}: {}
    {% endfor %}
computes:
  children:
    {% for group, role in cifmw_adoption_osp_deploy_scenario.roles_groups_map.items() %}
    {% if 'osp' in group and 'compute' in group %}
    {{ role }}: {}
    {% endif %}
    {% endfor %}
{{ _overcloud_name }}:
  hosts:
    {% for group, _ in cifmw_adoption_osp_deploy_scenario.roles_groups_map.items() %}
    {% if 'osp' in group and ('compute' in group or 'controller' in group) %}
    {% for node in _vm_groups[group] %}
    {% set node_nets = cifmw_networking_env_definition.instances[node] %}
    {{ node }}:
      ansible_user: tripleo-admin
    {% if 'ctlplaner0' in node_nets.networks %}
      ansible_host: {{ node_nets.networks.ctlplaner0[ip_version|default('ip_v4')] }}
    {% elif 'ctlplaner1' in node_nets.networks %}
      ansible_host: {{ node_nets.networks.ctlplaner1[ip_version|default('ip_v4')] }}
    {% else %}
      ansible_host: {{ node_nets.networks.ctlplaner2[ip_version|default('ip_v4')] }}
    {% endif %}
    {% endfor %}
    {% endif %}
    {% endfor %}
