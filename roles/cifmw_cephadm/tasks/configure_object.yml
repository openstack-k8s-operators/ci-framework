---
# Copyright 2024 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Check for existing object store config
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
  delegate_to: localhost
  when: cifmw_openshift_kubeconfig is defined
  block:
    - name: Check if swift is enabled in deployed controlplane
      ansible.builtin.shell: "set -o pipefail && oc -n {{ cifmw_cephadm_ns }}  get $(oc get oscp -n openstack -o name) -o json| jq .spec.swift.enabled"
      register: swift_in_ctlplane

    # checking swift_endpoints_count will avoid unnecessary errors during ceph deployment re-run
    - name: Check if swift endpoint is already created
      ansible.builtin.shell: "set -o pipefail && oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack endpoint list | grep 'swift.*object-store' | wc -l"
      register: swift_endpoints_count
      ignore_errors: true

- name: Display a note about swift deployment
  ansible.builtin.debug:
    msg: "WARNING: Swift is deployed and the endpoint exists already, ceph RGW cannot be configured as object store service"
  when:
    - cifmw_openshift_kubeconfig is defined
    - swift_in_ctlplane.stdout | bool

- name: Get uuid for project 'service'
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
  ansible.builtin.command: "oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack project show service -c id -f value"
  delegate_to: localhost
  when: cifmw_openshift_kubeconfig is defined
  register: project_service_uuid

- name: Create swift service, user and roles
  cifmw.general.ci_script:
    extra_args:
      KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
    output_dir: "/home/zuul/ci-framework-data/artifacts"
    script: |-
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack service create --name swift --description 'OpenStack Object Storage' object-store
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack user create --project {{ project_service_uuid.stdout }} --password {{ cifmw_ceph_rgw_keystone_psw }}  swift
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack role create swiftoperator
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack role create ResellerAdmin
  delegate_to: localhost
  when:
    - cifmw_openshift_kubeconfig is defined
    - not swift_in_ctlplane.stdout | bool
    - swift_endpoints_count.stdout == "0"

- name: Capture required UUIDs
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
  delegate_to: localhost
  when: cifmw_openshift_kubeconfig is defined
  ansible.builtin.command: "oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack {{ item.os_command }} show {{ item.os_command_object }} -c id -f value"
  register: all_uuids
  loop:
    - { os_command: 'user', os_command_object: 'swift' }
    - { os_command: 'service', os_command_object: 'swift' }
    - { os_command: 'role', os_command_object: 'member' }
    - { os_command: 'role', os_command_object: 'admin' }
    - { os_command: 'project', os_command_object: 'admin' }
    - { os_command: 'user', os_command_object: 'admin' }
    - { os_command: 'role', os_command_object: 'swiftoperator' }

- name: Update urischeme based on cert/key
  ansible.builtin.set_fact:
    cifmw_cephadm_urischeme: "https"
  when:
    - cifmw_cephadm_certificate | length > 0
    - cifmw_cephadm_key | length > 0

- name: Configure object store to use rgw
  cifmw.general.ci_script:
    extra_args:
      KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
    output_dir: "/home/zuul/ci-framework-data/artifacts"
    script: |-
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack role add --user {{ all_uuids.results.0.stdout }} --project {{ project_service_uuid.stdout }} {{ all_uuids.results.2.stdout }}
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack role add --user {{ all_uuids.results.0.stdout }} --project {{ project_service_uuid.stdout }} {{ all_uuids.results.3.stdout }}
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack endpoint create --region regionOne {{ all_uuids.results.1.stdout }} public {{ cifmw_cephadm_urischeme }}://{{ cifmw_external_dns_vip_ext.values() | first if cifmw_external_dns_vip_ext is defined else cifmw_cephadm_vip }}:8080/swift/v1/AUTH_%\(tenant_id\)s
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack endpoint create --region regionOne {{ all_uuids.results.1.stdout }} internal {{ cifmw_cephadm_urischeme }}://{{ cifmw_external_dns_vip_int.values() | first if cifmw_external_dns_vip_int is defined else cifmw_cephadm_vip }}:8080/swift/v1/AUTH_%\(tenant_id\)s
      oc -n {{ cifmw_cephadm_ns }} rsh openstackclient openstack role add --project {{ all_uuids.results.4.stdout }} --user {{ all_uuids.results.5.stdout }} {{ all_uuids.results.6.stdout }}
  delegate_to: localhost
  when:
    - cifmw_openshift_kubeconfig is defined
    - not swift_in_ctlplane.stdout | bool
    - swift_endpoints_count.stdout == "0"
