---
- name: Configure networking on all nodes
  hosts: all,!localhost
  gather_facts: false
  become: true
  vars:
    cifmw_network_generated_layout: "/etc/ci/env/networking-info.yml"
  tasks:
    - name: Create ci-env directory tree
      when:
        - inventory_hostname != 'controller-0'
      ansible.builtin.file:
        path: "/etc/ci/env"
        state: directory
    - name: Copy networking-info to hosts
      when:
        - inventory_hostname != 'controller-0'
      ansible.builtin.copy:
        src: "{{ cifmw_network_generated_layout }}"
        dest: "{{ cifmw_network_generated_layout }}"
    - name: Configure networking on nodes
      ansible.builtin.import_role:
        role: ci_network

- name: Reboot CRC and wait for its services
  hosts: crc-0
  gather_facts: false
  tasks:
    - name: Reboot CRC node
      become: true
      ansible.builtin.reboot:

- name: Disable cloud-init on computes
  hosts: computes
  gather_facts: false
  tasks:
    - name: Disable cloud-init
      become: true
      ansible.builtin.service:
        name: cloud-init
        enabled: false
        state: stopped

- name: Configure some last content on controller
  hosts: localhost
  gather_facts: true
  tasks:
    - name: .crc directory tree
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.crc/machines/crc/"
        state: directory

    - name: Copy kubeconfig
      ansible.builtin.copy:
        remote_src: true
        src: "{{ ansible_user_dir }}/.kube/config"
        dest: "{{ ansible_user_dir }}/.crc/machines/crc/kubeconfig"

    - name: Create artifact directory
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/ci-framework-data/artifacts/parameters"
        state: directory

    - name: Inject CRC hostname
      ansible.builtin.copy:
        dest: "{{ ansible_user_dir }}/ci-framework-data/artifacts/parameters/crc-hostname.yml"
        content: |-
          cifmw_crc_hostname: crc-0

    - name: Ensure controller-0 knows about remote SSH key
      block:
        - name: Inject localhost key
          ansible.builtin.shell:
            cmd: >-
              ssh-keyscan localhost > ~/.ssh/known_hosts

        - name: Loop on all hosts to get their host SSH key
          ansible.builtin.shell:
            cmd: >-
              ssh-keyscan {{ hostvars[item].ansible_host }}
              >> ~/.ssh/known_hosts
          loop: >-
            {{
              hostvars | dict2items |
              selectattr("value.ansible_host", "defined") |
              map(attribute="key")
            }}

    - name: Wait for CRC to be ready
      register: oc_login_ok
      ansible.builtin.command:
        cmd: ~/bin/oc get pods -A
      retries: 20
      delay: 15
      until:
        - oc_login_ok is defined
        - oc_login_ok.rc == 0
