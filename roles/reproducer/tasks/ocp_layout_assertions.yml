---
# A series of assertions around the OCP layout.
# They are in a dedicated tasks file so that we can
# easily test them in molecule.

- name: Ensure we don't try to pass resources via devscripts_overrides
  ansible.builtin.assert:
    quiet: true
    that:
      - cifmw_devscripts_config.master_memory is undefined
      - cifmw_devscripts_config.master_disk is undefined
      - cifmw_devscripts_config.master_vcpu is undefined
      - cifmw_devscripts_config.worker_memory_mb is undefined
      - cifmw_devscripts_config.worker_disk is undefined
      - cifmw_devscripts_config.worker_vcpu is undefined
      - cifmw_devscripts_config.vm_extradisks is undefined
      - cifmw_devscripts_config.vm_extradisks_list is undefined
      - cifmw_devscripts_config.vm_extradisks_size is undefined
    msg: >-
      Inconsistency detected: your environment wants to provide
      devscripts configuration overrides. This isn't supported,
      and you must pass those ressource allocation via the usual
      cifmw_libvirt_manager_configuration, or patch it.

- name: Ensure we don't try to create extra_workers
  ansible.builtin.assert:
    quiet: true
    that:
      - cifmw_devscripts_config.num_extra_workers is undefined or
        cifmw_devscripts_config.num_extra_workers == 0
    msg: >-
      Inconsistency detected: dev-scripts extra_worker resources
      aren't supported here. You can create compute, networker or any
      other kind of VM by defining it as you define OCP cluster nodes.

- name: Ensure we get required data in the layout description
  vars:
    _element: "{{ _cifmw_libvirt_manager_layout.vms.ocp }}"
    _memory: 16
    _cpus: 10
    _disk: 50
    _min_ocp: 3
  ansible.builtin.assert:
    that:
      - _element.cpus is defined
      - _element.cpus | int >= _cpus
      - _element.memory is defined
      - _element.memory | int >= _cpus
      - _element.uefi is defined
      - _element.uefi | bool
      - _element.disksize is defined
      - _element.disksize | int > _disk
      - _element.amount is defined
      - _element.amount >= _min_ocp
    quiet: true
    msg: >-
      Ensure you provide enough memory (>=16), cpus (>=10) and
      disksize (>50) to ocp nodes, set a correct amount (>=3)
      and uefi is set to true in cifmw_libvirt_manager.vms.ocp

- name: Ensure we have needed data for ocp_worker if defined
  when:
    - _cifmw_libvirt_manager_layout.vms.ocp_worker is defined
  vars:
    _element: "{{ _cifmw_libvirt_manager_layout.vms.ocp_worker | default({}) }}"
    _memory: 16
    _cpus: 10
    _disk: 50
  ansible.builtin.assert:
    that:
      - _element.cpus is defined
      - _element.cpus | int >= _cpus
      - _element.memory is defined
      - _element.memory | int >= _memory
      - _element.uefi is defined
      - _element.uefi | bool
      - _element.disksize is defined
      - _element.disksize | int > _disk
    quiet: true
    msg: >-
      Ensure you provide enough memory (>=16), cpus (>=10) and
      disksize (>50) to ocp_worker nodes, and uefi is set to true
      in cifmw_libvirt_manager.vms.ocp_worker

- name: Ensure we don't set some parameters when no extra disks
  when:
    - _cifmw_libvirt_manager_layout.vms.ocp.extra_disks_num is undefined or
      _cifmw_libvirt_manager_layout.vms.ocp.extra_disks_num == 0
  ansible.builtin.assert:
    quiet: true
    that:
      - not cifmw_devscripts_create_logical_volume | bool
      - cifmw_lvms_disk_list is undefined or
        (cifmw_lvms_disk_list | length) == 0
    msg: >-
      Inconsistency detected: cifmw_devscripts_create_logical_volume
      is set to "true" or cifmw_lvms_disk_list is non-empty while you don't
      allocate any extra disks to the OCP cluster members

# Ensure we have the same amount of disks on both master and workers, with
# the same size. That latter might become an issue, so we may reconsider.
- name: Ensure extra disks consistency
  when:
    - _cifmw_libvirt_manager_layout.vms.ocp.extra_disks_num is defined
  vars:
    _ocp: "{{ _cifmw_libvirt_manager_layout.vms.ocp }}"
    _work: "{{ _cifmw_libvirt_manager_layout.vms.ocp_worker | default({}) }}"
  block:
    - name: Ensure we get disk_size
      ansible.builtin.assert:
        quiet: true
        that:
          - _ocp.extra_disks_size is defined
        msg: >-
          Inconsistency detected: ensure you're setting
          extra_disks_size in _cifmw_libvirt_manager_layout.vms.ocp


    - name: Ensure same amount of disks are created
      when:
        - _cifmw_libvirt_manager_layout.vms.ocp_worker is defined
      ansible.builtin.assert:
        quiet: true
        that:
          - (_work.extra_disks_num is defined and
            _ocp.extra_disks_num == _work.extra_disks_num and
            _ocp.extra_disks_size is defined and
            _work.extra_disks_size is defined and
            _ocp.extra_disks_size == _work.extra_disks_size) or
            _ocp.extra_disks_num is undefined or
            _ocp.extra_disks_num == 0
        msg: >-
          Inconsistency detected: ensure you don't allocate more
          disks in cifmw_lvms_disk_list and cifmw_devscripts_cinder_volume_pvs
          than available.

    - name: Ensure created amount matches at least allocated amounts
      when:
        - _ocp.extra_disks_num is defined
        - _ocp.extra_disks_num > 0
      vars:
        _cinder_vols: >-
          {{
            (cifmw_devscripts_create_logical_volume | bool) |
            ternary(cifmw_devscripts_cinder_volume_pvs, [])
          }}
        _lvms_vols: >-
          {{
            (cifmw_use_lvms | default(false) | bool) |
            ternary(cifmw_lvms_disk_list, [])
          }}
      ansible.builtin.assert:
        quiet: true
        that:
          - (_cinder_vols + _lvms_vols) | length
            <= _ocp.extra_disks_num | int
        msg: >-
          Inconsistency detected: Created amount of volumes
          {{ _ocp.extra_disks_num }} is smaller than allocated volumes
          {{ (_cinder_vols + _lvms_vols) | length }}

- name: Ensure we correctly allocate volumes
  when:
    - cifmw_lvms_disk_list is defined
    - cifmw_lvms_disk_list | length > 0
    - cifmw_devscripts_cinder_volume_pvs is defined
    - cifmw_devscripts_cinder_volume_pvs | length > 0
  vars:
    _disk_suffix: 'abcdefghijklmnopqrstuvwxyz'
    _amount: >-
      {{ _cifmw_libvirt_manager_layout.vms.ocp.extra_disks_num | int }}
    _disks: >-
      {{
        range(0, _amount | default(0) | int) | map('extract', _disk_suffix)
      }}
    _vm_extradisks_list: >-
      {{ ['/dev/vd'] | product(_disks) | map('join', '') }}
  block:
    - name: Ensure no allocation overlap
      when:
        - cifmw_devscripts_create_logical_volume | bool
        - cifmw_use_lvms | default(false) | bool
      ansible.builtin.assert:
        quiet: true
        that:
          - cifmw_lvms_disk_list |
             community.general.lists_intersect(cifmw_devscripts_cinder_volume_pvs) |
             length == 0
        msg: >-
          Inconsistency detected: you seem to allocate a volume in
          both cinder and lvms

    - name: Ensure LVMS allocated disks are available
      ansible.builtin.assert:
        that:
          - cifmw_lvms_disk_list |
            community.general.lists_intersect(_vm_extradisks_list) ==
            cifmw_lvms_disk_list
        msg: >-
          Inconsistency detected: you seem to allocate volumes for LVMS
          that aren't present on the system.

    - name: Ensure Cinder PVs allocated disks are available
      when:
        - cifmw_devscripts_create_logical_volume | bool
      ansible.builtin.assert:
        that:
          - cifmw_devscripts_cinder_volume_pvs |
            community.general.lists_intersect(_vm_extradisks_list) ==
            cifmw_devscripts_cinder_volume_pvs
        msg: >-
          Inconsistency detected: you seem to allocate volumes for Cinder
          that aren't present on the system.
