---
- name: Sync zuul content if available
  when:
    - zuul is defined
    - zuul.items is defined
    - zuul.projects is defined
  delegate_to: controller-0
  delegate_facts: true
  block:
    - name: Check if repository directories already exist
      when: job_id is defined
      ansible.builtin.stat:
        path: "{{ item.project.src_dir }}"
      register: repos_dir_stats
      with_items: "{{ zuul['items'] }}"

    - name: Ensure we are not in the job_id branch
      when:
        - repos_dir_stats is defined
        - not (item.1.skipped | default(false))
        - item.1.stat.exists
      ansible.builtin.git:
        dest: "{{ item.0.project.src_dir }}"
        repo: "https://{{ item.0.project.canonical_name }}"
        version: "origin/main"
        force: true
      loop: "{{ zuul['items'] | zip(repos_dir_stats.results) | list }}"

    - name: Fetch zuul.items repositories
      vars:
        _skip_refspec: "{{ job_id is not defined or repo.change is not defined }}"
      ansible.builtin.git:
        dest: "{{ repo.project.src_dir }}"
        repo: "https://{{ repo.project.canonical_hostname }}/{{ repo.project.canonical_hostname | reproducer_gerrit_infix }}{{ repo.project.name }}"
        refspec: "{{ omit if _skip_refspec else repo | reproducer_refspec ~ ':' ~ job_id }}"
        version: "{{ omit if _skip_refspec else job_id }}"
        force: true
      loop: "{{ zuul['items'] }}"
      loop_control:
        loop_var: repo
        label: "{{ repo.project.name }}"

    - name: Fetch zuul.projects repositories for dependencies
      when:
        - "repo.key not in (zuul['items'] | map(attribute='project.canonical_name'))"
      ansible.builtin.git:
        dest: "{{ repo.value.src_dir }}"
        repo: "https://{{ repo.value.canonical_hostname }}/{{ repo.value.canonical_hostname | reproducer_gerrit_infix }}{{ repo.value.name }}"
        version: "{{ repo.value.commit }}"
        force: true
      loop: "{{ zuul['projects'] | dict2items }}"
      loop_control:
        loop_var: repo
        label: "{{ repo.key }}"

- name: Push random code into the proper location
  vars:
    repo_base_dir: '/home/zuul/src'
  block:
    - name: Create target directories beforehand
      delegate_to: controller-0
      vars:
        _destinations: >-
          {{
            cifmw_reproducer_repositories |
            map(attribute="dest") |
            map('dirname') |
            unique |
            list
          }}
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop: "{{ _destinations }}"

    - name: Sync local repositories to ansible controller
      delegate_to: localhost
      when:
        - item.src is abs or item.src is not match('.*:.*')
      ansible.builtin.command:  # noqa: command-instead-of-module
        cmd: "rsync -ar {{ item.src }} zuul@controller-0:{{ item.dest }}"
      loop: "{{ cifmw_reproducer_repositories }}"
      loop_control:
        label: "{{ item.src | basename }}"

    - name: Sync remote repositories
      delegate_to: controller-0
      delegate_facts: true
      when:
        # will match github.com:org/project, but also https://github.com/...
        - item.src is match('.*:.*')
      ansible.builtin.git:
        repo: "{{ item.src }}"
        dest: "{{ item.dest }}"
        version: "{{ item.version | default('HEAD') }}"
        refspec: "{{ item.refspec | default(omit) }}"
        force: true
      loop: "{{ cifmw_reproducer_repositories }}"
      loop_control:
        label: "{{ item.src | basename }}"

    - name: Ensure default repositories are present
      ansible.builtin.include_tasks: default_repositories.yml
      loop: "{{ cifmw_reproducer_default_repositories }}"
      loop_control:
        loop_var: repository
        label: "{{ repository.src | basename }}"

# installing the cifmw collection will pull it's dependencies alongside it
- name: Install collections on controller-0
  delegate_to: controller-0
  ansible.builtin.command:
    chdir: "/home/zuul/src/github.com/openstack-k8s-operators/ci-framework"
    cmd: ansible-galaxy collection install -U .
