---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Discover latest image for CS9
  tags:
    - bootstrap
    - bootstrap_layout
  ansible.builtin.import_role:
    name: discover_latest_image

- name: Assert no conflicting parameters were passed
  ansible.builtin.assert:
    that:
      - (cifmw_libvirt_manager_configuration.vms.crc is defined) or
        (cifmw_use_devscripts | default(false) | bool)
      - not ((cifmw_libvirt_manager_configuration.vms.crc is defined) and
             (cifmw_use_devscripts | default(false) | bool))
    quiet: true
    msg: >-
      You cannot get both OpenShift cluster types.
      Please chose between CRC and OCP cluster.

- name: Ensure directories are present
  tags:
    - always
  ansible.builtin.file:
    path: "{{ cifmw_reproducer_basedir }}"
    state: directory
  loop:
    - artifacts
    - logs

- name: Load CI job environment
  when:
    - cifmw_job_uri is defined
  ansible.builtin.import_tasks: ci_data.yml

- name: Bootstrap libvirt if needed
  tags:
    - bootstrap_libvirt
  when:
    - cifmw_use_libvirt | default(false) | bool
  ansible.builtin.import_role:
    name: libvirt_manager

- name: Deploy CRC if needed
  when:
    - cifmw_libvirt_manager_configuration.vms.crc is defined
    - (
        cifmw_libvirt_manager_configuration.vms.crc.target is defined and
        cifmw_libvirt_manager_configuration.vms.crc.target == inventory_hostname
      ) or
      cifmw_libvirt_manager_configuration.vms.crc.target is undefined
  tags:
    - bootstrap
    - bootstrap_layout
    - crc_layout
  ansible.builtin.import_tasks: crc_layout.yml

- name: Consume dev-scripts for OCP cluster
  when:
    - cifmw_libvirt_manager_configuration.vms.ocp is defined
    - (
        cifmw_libvirt_manager_configuration.vms.ocp.target is defined and
        cifmw_libvirt_manager_configuration.vms.ocp.target == inventory_hostname
      ) or
      cifmw_libvirt_manager_configuration.vms.ocp.target is undefined
  tags:
    - bootstrap
    - boostrap_layout
  ansible.builtin.import_tasks: devscripts_layout.yml

- name: Consume libvirt_manager
  when:
    - cifmw_use_libvirt | default(false) | bool
  tags:
    - bootstrap
    - bootstrap_layout
  ansible.builtin.import_tasks: libvirt_layout.yml

- name: Run only on hypervisor with controller-0
  when:
    - (
        cifmw_libvirt_manager_configuration.vms.controller.target is defined and
        cifmw_libvirt_manager_configuration.vms.controller.target == inventory_hostname
      ) or
      cifmw_libvirt_manager_configuration.vms.controller.target is undefined
  block:
    - name: Push local code
      tags:
        - bootstrap_repositories
        - bootstrap
      ansible.builtin.import_tasks: push_code.yml

    - name: Rotate some logs
      tags:
        - always
      ansible.builtin.include_tasks: rotate_log.yml
      loop:
        - ansible-bootstrap.log

    - name: Bootstrap environment on controller-0
      delegate_to: controller-0
      environment:
        ANSIBLE_LOG_PATH: "~/ansible-bootstrap.log"
      no_log: true
      ansible.builtin.command:
        chdir: "/home/zuul/src/github.com/openstack-k8s-operators/ci-framework"
        cmd: >-
          ansible-playbook -i ~/ci-framework-data/artifacts/zuul_inventory.yml
          -e @~/reproducer-variables.yml
          -e @scenarios/reproducers/networking-definition.yml
          playbooks/01-bootstrap.yml

    - name: Emulate CI job
      when:
        - cifmw_job_uri is defined
      ansible.builtin.import_tasks: ci_job.yml

    - name: Prepare VA deployment
      when:
        - cifmw_architecture_scenario is defined
      ansible.builtin.import_tasks: configure_architecture.yml
