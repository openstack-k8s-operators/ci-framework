---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Ensure directories are present
  ansible.builtin.file:
    path: "{{ cifmw_os_must_gather_output_log_dir }}"
    state: directory
    mode: "0755"

- name: Construct project change list
  ansible.builtin.set_fact:
    zuul_change_list: "{{ zuul_change_list | default([]) + [item.project.short_name] }}"
    cacheable: true
  with_items: "{{ zuul['items'] }}"
  when:
    - zuul is defined
    - "'change_url' in item"

- name: Build openstack-must-gather image
  ansible.builtin.import_tasks: build_openstack-must-gather_image.yml
  when:
    - zuul_change_list is defined
    - "'openstack-must-gather' in zuul_change_list"

- name: Check for oc command
  cifmw.general.ci_script:
    output_dir: "{{ cifmw_os_must_gather_output_dir }}/artifacts"
    script: command -v oc
  environment:
    PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
  register: oc_installed
  ignore_errors: true

- name: Check if kubeconfig exists
  ansible.builtin.stat:
    path: "{{ cifmw_openshift_kubeconfig | default(cifmw_os_must_gather_kubeconfig) }}"
  register: _kubeconfig_stat

- name: Running openstack-must-gather tool
  when:
    - oc_installed is defined
    - oc_installed.rc == 0
    - _kubeconfig_stat.stat.exists
  block:
    - name: Run openstack-must-gather command
      environment:
        KUBECONFIG: "{{ cifmw_openshift_kubeconfig | default(cifmw_os_must_gather_kubeconfig) }}"
        PATH: "{{ cifmw_path }}"
        SOS_EDPM: "all"
        SOS_DECOMPRESS: "0"
        OPENSTACK_DATABASES: "{{ cifmw_os_must_gather_dump_db }}"
      cifmw.general.ci_script:
        output_dir: "{{ cifmw_os_must_gather_output_dir }}/artifacts"
        script: >-
          timeout {{ (cifmw_os_must_gather_timeout | community.general.to_seconds) + 120 }}
          oc adm must-gather --image {{ cifmw_os_must_gather_image }}
          --timeout {{ cifmw_os_must_gather_timeout }}
          --host-network={{ cifmw_os_must_gather_host_network }}
          --dest-dir {{ cifmw_os_must_gather_output_log_dir }}
          -- ADDITIONAL_NAMESPACES={{ cifmw_os_must_gather_additional_namespaces }}
          OPENSTACK_DATABASES=$OPENSTACK_DATABASES
          SOS_EDPM=$SOS_EDPM
          SOS_DECOMPRESS=$SOS_DECOMPRESS
          gather
          2>&1

    - name: Find existing os-must-gather directories
      ansible.builtin.find:
        paths: "{{ cifmw_os_must_gather_output_log_dir }}"
        file_type: directory
        depth: 1
      register: _os_gather_latest_dir

    - name: Create a symlink to newest os-must-gather directory
      ansible.builtin.file:
        src: "{{ (_os_gather_latest_dir.files | sort(attribute='mtime', reverse=True) | first).path | basename }}"
        dest: "{{ cifmw_os_must_gather_output_log_dir }}/latest"
        state: link

  rescue:
    - name: Openstack-must-gather failure
      block:
        - name: Log openstack-must-gather failure
          ansible.builtin.debug:
            msg: "OpenStack must-gather failed, running fallback generic must-gather"

        - name: Run fallback generic must-gather command
          environment:
            KUBECONFIG: "{{ cifmw_openshift_kubeconfig | default(cifmw_os_must_gather_kubeconfig) }}"
            PATH: "{{ cifmw_path }}"
          ansible.builtin.command:
            cmd: >-
              timeout {{ (cifmw_os_must_gather_timeout | community.general.to_seconds) + 120 }}
              oc adm must-gather
              --dest-dir {{ ansible_user_dir }}/ci-framework-data/must-gather
              --timeout {{ cifmw_os_must_gather_timeout }}
      always:
        - name: Create oc_inspect log directory
          ansible.builtin.file:
            path: "{{ cifmw_os_must_gather_output_dir }}/logs/oc_inspect"
            state: directory
            mode: "0755"

        - name: Inspect the cluster after must-gather failure
          ignore_errors: true # noqa: ignore-errors
          environment:
            KUBECONFIG: "{{ cifmw_openshift_kubeconfig | default(cifmw_os_must_gather_kubeconfig) }}"
            PATH: "{{ cifmw_path }}"
          cifmw.general.ci_script:
            output_dir: "{{ cifmw_os_must_gather_output_dir }}/artifacts"
            script: |
              oc adm inspect namespace/{{ item }} --dest-dir={{ cifmw_os_must_gather_output_dir }}/logs/oc_inspect
          loop: >-
            {{
              (
                cifmw_os_must_gather_namespaces | default([]) +
                (
                  cifmw_os_must_gather_additional_namespaces | split(',') | list
                )
              ) | unique
            }}
