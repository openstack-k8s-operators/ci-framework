---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Collect the reference name of kubeconfig
  environment:
    KUBECONFIG: "{{ cifmw_hive_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.command:
    cmd: "oc get cd {{ cifmw_hive_baremetal.cluster_name }} -o jsonpath='{ .spec.clusterMetadata.adminKubeconfigSecretRef.name }'"
  register: kubeconfig_ref

- name: Gather the kubeconfig of the deployed cluster
  environment:
    KUBECONFIG: "{{ cifmw_hive_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.command:
    cmd: "oc extract secret/{{ kubeconfig_ref.stdout }} --keys kubeconfig --to={{ cifmw_hive_artifacts_dir }} --confirm"
  register: kubeconfig_results

- name: Collect the reference name of adminPassword
  environment:
    KUBECONFIG: "{{ cifmw_hive_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.command:
    cmd: "oc get cd {{ cifmw_hive_baremetal.cluster_name }} -o jsonpath='{ .spec.clusterMetadata.adminPasswordSecretRef.name }'"
  register: admin_ref

- name: Gather the username to be used for authentication against the deployed cluster
  environment:
    KUBECONFIG: "{{ cifmw_hive_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.command:
    cmd: "oc extract secret/{{ admin_ref.stdout }} --keys username --to=-"
  register: username_out

- name: Gather the credentials to be used for authentication against the deployed cluster
  environment:
    KUBECONFIG: "{{ cifmw_hive_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.command:
    cmd: "oc extract secret/{{ admin_ref.stdout }} --keys password --to=-"
  register: password_out

- name: Retrieve the webconsole URI
  environment:
    KUBECONFIG: "{{ cifmw_hive_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.command:
    cmd: "oc get cd {{ cifmw_hive_baremetal.cluster_name }} -o jsonpath='{ .status.webConsoleURL }' "
  register: web_out

- name: Loading the kubeconfig information
  ansible.builtin.set_fact:
    kubeconfig_dict: "{{ lookup('file', cifmw_hive_artifacts_dir + '/kubeconfig') | from_yaml }}"

- name: Defining OCP access variables
  ansible.builtin.set_fact:
    cifmw_openshift_web_console_url: "{{ web_out.stdout }}"
    cifmw_openshift_api: "{{ kubeconfig_dict.clusters[0].cluster.server }}"
    cifmw_openshift_user: "{{ username_out.stdout }}"
    cifmw_openshift_password: "{{ password_out.stdout }}"
    cifmw_openshift_kubeconfig: "{{ cifmw_hive_artifacts_dir }}/kubeconfig"
    cacheable: true
