---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Create role needed directories
  ansible.builtin.file:
    path: "{{ cifmw_cls_manifests_dir }}"
    state: directory
    mode: "0755"

- name: Create the cifmw_cls_namespace namespace"
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    name: "{{ cifmw_cls_namespace }}"
    kind: Namespace
    state: present

- name: Save storage manifests as artifacts
  ansible.builtin.copy:
    dest: "{{ cifmw_cls_manifests_dir }}/storage-class.yaml"
    content: "{{ cifmw_cls_storage_manifest | to_nice_yaml }}"

- name: Get k8s nodes
  ansible.builtin.import_tasks: fetch_names.yml

- name: Apply the storage class manifests
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig  }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit)  }}"
    state: present
    src: "{{ cifmw_cls_manifests_dir }}/storage-class.yaml"

- name: Create directories on worker node
  ansible.builtin.include_tasks: worker_node_dirs.yml
  loop: "{{ cifmw_ci_local_storage_k8s_hosts }}"
  loop_control:
    loop_var: host

- name: Generate pv related storage manifest file
  ansible.builtin.template:
    src: storage.yaml.j2
    dest: "{{ cifmw_cls_manifests_dir }}/storage.yaml"
    mode: "0644"

- name: Apply pv related storage manifest file
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig  }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit)  }}"
    state: present
    src: "{{ cifmw_cls_manifests_dir }}/storage.yaml"
