---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Assert we have needed host data
  ansible.builtin.assert:
    quiet: true
    that:
      - cifmw_dnsmasq_host_network is defined
      - cifmw_dnsmasq_host_state is defined
      - cifmw_dnsmasq_host_state in ['present', 'absent']
      - cifmw_dnsmasq_host_mac is defined
      - cifmw_dnsmasq_host_ipv6 is defined or
        cifmw_dnsmasq_host_ipv4 is defined

- name: Check network file status
  register: _network_exists
  ansible.builtin.stat:
    path: "{{ cifmw_dnsmasq_basedir }}/{{ cifmw_dnsmasq_host_network }}.conf"
    get_attributes: false
    get_checksum: false
    get_mime: false

- name: Assert network exists
  ansible.builtin.assert:
    that:
      - _network_exists.stat.exists
    quiet: true
    msg: >-
      You must create {{ cifmw_dnsmasq_host_network }} network first, calling
      dnsmasq/manage_network.yml task.

- name: Compute entry
  ansible.builtin.set_fact:
    _host_entry: |
      {% if cifmw_dnsmasq_host_ipv4 is defined and cifmw_dnsmasq_host_ipv4 | length > 0       -%}
      {% set data = [cifmw_dnsmasq_host_mac]                                                  -%}
      {% set _ = data.append(cifmw_dnsmasq_host_ipv4)                                         -%}
      {% set _ = data.append(cifmw_dnsmasq_host_name) if
                 cifmw_dnsmasq_host_name is defined and cifmw_dnsmasq_host_name | length > 0  -%}
      dhcp-host={{ data | join(',') }}
      {% endif -%}
      {% if cifmw_dnsmasq_host_ipv6 is defined and cifmw_dnsmasq_host_ipv6 | length > 0       -%}
      {% set data = [cifmw_dnsmasq_host_mac]                                                  -%}
      {% set _ = data.append('['~cifmw_dnsmasq_host_ipv6~']')                                 -%}
      {% set _ = data.append(cifmw_dnsmasq_host_name) if
                 cifmw_dnsmasq_host_name is defined and cifmw_dnsmasq_host_name | length > 0  -%}
      dhcp-host={{ data | join(',') }}
      {% endif -%}

- name: Debug _host_entry
  ansible.builtin.debug:
    var: _host_entry

- name: Manage host entry
  become: true
  notify: Restart dnsmasq
  ansible.builtin.blockinfile:
    block: "{{ _host_entry }}"
    dest: "{{ cifmw_dnsmasq_basedir }}/{{ cifmw_dnsmasq_host_network }}-hosts.conf"
    create: true
    mode: "0644"
    state: "{{ cifmw_dnsmasq_host_state }}"
    marker: "## {mark} {{ cifmw_dnsmasq_host_mac }}"
    validate: "/usr/sbin/dnsmasq -C %s --test"
