---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: "Combine hooks and run them for {{ step }}"
  vars:
    _list_hooks: >-
      {{
        hostvars[inventory_hostname][step] |
        default([])
      }}
    _matcher: "^{{ step }}_(.*)$"
    _filtered_hooks: >-
      {{
        hostvars[inventory_hostname] |
        dict2items |
        selectattr('key', 'match', _matcher)
      }}
    _single_hooks: >-
      {% for _hook in _filtered_hooks -%}
      - name: {{ _hook.key | regex_replace(_matcher, '\1') |
                 replace('_', ' ') | capitalize }}
      {{ _hook.value | to_nice_yaml | indent(width=2, first=true) }}
      {% endfor -%}
  block:
    - name: Assert parameters are valid
      ansible.builtin.assert:
        quiet: true
        that:
          - _filtered_hooks is not string
          - _filtered_hooks is not mapping
          - _filtered_hooks is iterable
          - _list_hooks is not string
          - _list_hooks is not mapping
          - _list_hooks is iterable
          - (hooks | default([])) is not string
          - (hooks | default([])) is not mapping
          - (hooks | default([])) is iterable

    - name: "Loop on hooks for {{ step }}"
      vars:
        _hooks: >-
          {{
            (
              (_single_hooks | from_yaml | default([], true)) +
              (hooks | default([], true)) +
              _list_hooks
            ) | sort(attribute='name')
          }}
      ansible.builtin.include_tasks: "{{ hook.type }}.yml"
      loop: "{{ _hooks }}"
      loop_control:
        loop_var: 'hook'
