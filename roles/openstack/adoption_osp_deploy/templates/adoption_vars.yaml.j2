#jinja2: trim_blocks:True, lstrip_blocks:True
source_mariadb_ip: {{ _controller_1_internalapi_ip }}
source_ovndb_ip: {{ _controller_1_internalapi_ip }}
edpm_node_hostname: {{ _compute_1_name }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
edpm_node_ip: {{ _compute_1_ip }}

{% if _vm_groups['osp-computes'] | default([]) | length > 0 %}
edpm_computes: |
  {% for compute in _vm_groups['osp-computes'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[compute] %}
  ["{{ compute }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.ctlplane.ip_v4 }}"
  {% endfor %}
{% endif %}

{% if _vm_groups['osp-networkers'] | default([]) | length > 0 %}
edpm_networkers: |
  {% for networker in _vm_groups['osp-networkers'] | default([]) %}
  {% set node_nets = cifmw_networking_env_definition.instances[networker] %}
  ["{{ networker }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.ctlplane.ip_v4 }}"
  {% endfor %}
{% endif %}

source_galera_members: |
  {% for controller in _vm_groups['osp-controllers'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[controller] %}
  ["{{ controller }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}"]="{{ node_nets.networks.internalapi.ip_v4 }}"
  {% endfor %}

{% if _vm_groups['osp-computes'] | default([]) | length > 0 %}
edpm_nodes:
  {% for compute in _vm_groups['osp-computes'] %}
  {% set node_nets = cifmw_networking_env_definition.instances[compute] %}
  {{ compute }}:
    hostName: {{ compute }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplane.ip_v4 }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net].ip_v4 }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplane' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
{% endif %}

{% if _vm_groups['osp-networkers'] | default([]) | length > 0 %}
edpm_nodes_networker:
  {% for networker in _vm_groups['osp-networkers'] | default([]) %}
  {% set node_nets = cifmw_networking_env_definition.instances[networker] %}
  {{ networker }}:
    hostName: {{ networker }}.{{ cifmw_adoption_osp_deploy_scenario.cloud_domain }}
    ansible:
      ansibleHost: {{ node_nets.networks.ctlplane.ip_v4 }}
    networks:
    {% for net in node_nets.networks.keys() if net not in cifmw_adoption_osp_deploy_adoption_vars_exclude_nets %}
      - fixedIP: {{ node_nets.networks[net].ip_v4 }}
        name: {{ net }}
        subnetName: subnet1
{% if net == 'ctlplane' %}
        defaultRoute: true
{% endif %}
    {% endfor %}
    {% endfor %}
{% endif %}

upstream_dns: {{ cifmw_networking_env_definition.networks.ctlplane.dns_v4 | first }}
os_cloud_name: {{ cifmw_adoption_osp_deploy_scenario.stacks[0].stackname }}
standalone_ip: {{ _undercloud_ip }}
