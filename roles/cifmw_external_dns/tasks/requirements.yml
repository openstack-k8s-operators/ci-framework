---
# Copyright 2024 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Ensure we have cifmw_openshift_kubeconfig
  delegate_to: localhost
  run_once: true
  ansible.builtin.stat:
    path: "{{ cifmw_openshift_kubeconfig }}"
  register: cifmw_openshift_kubeconfig_stat_result

- name: Fail if kube config file is missing
  delegate_to: localhost
  run_once: true
  ansible.builtin.fail:
    msg: >-
      Missing kube config file ({{ cifmw_openshift_kubeconfig }})
      Canot create DNS or certificate without access to k8s
  when:
    - not cifmw_openshift_kubeconfig_stat_result.stat.exists | bool

- name: Assert that cifmw_external_dns_domain is non-empty
  run_once: true
  ansible.builtin.assert:
    that:
      cifmw_external_dns_domain | length > 0

- name: Ensure at least one IP to name mapping is set
  run_once: true
  ansible.builtin.assert:
    that:
      - item.key | length > 0
      - item.key | ansible.utils.ipaddr
      - item.value | length > 0
  loop: "{{ ip_to_name | dict2items }}"
  vars:
    ip_to_name: "{{ cifmw_external_dns_vip_int |
                    combine(cifmw_external_dns_vip_ext) |
                    combine(cifmw_external_dns_extra_subj_alt_names) }}"

- name: Create role manifest directory
  delegate_to: localhost
  run_once: true
  ansible.builtin.file:
    path: "{{ cifmw_external_dns_manifests_dir }}"
    state: directory

- name: Stat cifmw_external_dns_certificate on target hosts
  ansible.builtin.stat:
    path: "{{ cifmw_external_dns_certificate }}"
  register: cert_stat_result
  when: cifmw_external_dns_certificate | length > 0

- name: Stat cifmw_external_dns_key on target hosts
  ansible.builtin.stat:
    path: "{{ cifmw_external_dns_key }}"
  register: key_stat_result
  when: cifmw_external_dns_key | length > 0

- name: Ensure cifmw_external_dns_masq_cluster_ip is set
  when: cifmw_external_dns_masq_cluster_ip | length == 0
  block:
    - name: Get service info for dnsmasq-dns
      delegate_to: localhost
      run_once: true
      kubernetes.core.k8s_info:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit) }}"
        context: "{{ cifmw_openshift_context | default(omit) }}"
        kind: Service
        namespace: "{{ cifmw_external_dns_ns }}"
        name: dnsmasq-dns
      register: service_info
      retries: "{{ cifmw_external_dns_retries }}"
      delay: "{{ cifmw_external_dns_delay }}"
      until: service_info.failed == false

    - name: Set cifmw_external_dns_masq_cluster_ip
      run_once: true
      ansible.builtin.set_fact:
        cifmw_external_dns_masq_cluster_ip: "{{ service_info.resources[0].spec.clusterIP }}"
