---
# Copyright Red Hat, Inc.the
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Extract data from network env file if available
  when:
    - cifmw_network_layout is not defined
    - crc_ci_bootstrap_networks_out is not defined
  block:
    - name: Check for CI env directory
      when: crc_ci_bootstrap_networks_out is not defined
      register: _cifmw_ci_multus_ci_env_stat
      ansible.builtin.stat:
        path: /etc/ci/env

    - name: Load network env file
      when: _cifmw_ci_multus_ci_env_stat.stat.exists
      ansible.builtin.include_vars:
        dir: /etc/ci/env/

- name: Gather network layout from OCP host or default networks
  ansible.builtin.set_fact:
    _cifmw_ci_multus_net_info: >-
      {{
        cifmw_network_layout[cifmw_ci_multus_ocp_hostname] | default({}) |
        combine( cifmw_network_layout['networks'], recursive=true)
        if cifmw_network_layout is defined else
        (crc_ci_bootstrap_networks_out[cifmw_ci_multus_ocp_hostname] | default({})|
        combine( crc_ci_bootstrap_networks_out['networks'], recursive=true)
        )
      }}

- name: Build list of NetworkAttachmentDefinition
  ansible.builtin.set_fact:
    cifmw_ci_multus_nad_list: >-
      {{
        cifmw_ci_multus_nad_list +
          [{
            'name': item.key,
            'iface': item.value.iface,
            'ipam':
              {
                'range': item.value.range,
                'range_start': item.value.multus.range | split('-') | first,
                'range_end': item.value.multus.range | split('-') | last
              }
          }]
      }}
  loop: "{{ _cifmw_ci_multus_net_info | dict2items }}"
