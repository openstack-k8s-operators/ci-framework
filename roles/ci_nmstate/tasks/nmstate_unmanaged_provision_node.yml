---
- name: Ensure we have needed facts
  when:
    - hostvars[cifmw_ci_nmstate_unmanaged_host]['ansible_facts']['pkg_mgr'] is undefined
  delegate_to: "{{ cifmw_ci_nmstate_unmanaged_host }}"
  delegate_facts: true
  ansible.builtin.setup:
    gather_subset:
      - "!all,!min"
      - pkg_mgr

- name: "Install required packages on {{ cifmw_ci_nmstate_unmanaged_host }}"
  tags:
    - packages
  become: true
  delegate_to: "{{ cifmw_ci_nmstate_unmanaged_host }}"
  ansible.builtin.package:
    name:
      - nmstate
      - python3-libnmstate
    state: latest  # noqa: package-latest
    use: "{{ hostvars[cifmw_ci_nmstate_unmanaged_host]['ansible_facts']['pkg_mgr'] }}"

- name: "Create the target NMstate dump directory"
  ansible.builtin.file:
    path: "{{ cifmw_ci_nmstate_configs_dir }}"
    state: directory

- name: "Save nmstate state for {{ cifmw_ci_nmstate_unmanaged_host }}"
  ansible.builtin.copy:
    mode: "0644"
    dest: "{{ cifmw_ci_nmstate_configs_dir }}/{{ cifmw_ci_nmstate_unmanaged_host }}-state.yaml"
    content: "{{ cifmw_ci_nmstate_unmanaged_node_config | to_nice_yaml }}"

- name: "Apply the desidered state on {{ cifmw_ci_nmstate_unmanaged_host }}"
  become: true
  delegate_to: "{{ cifmw_ci_nmstate_unmanaged_host }}"
  ci_nmstate_apply_state:
    state: "{{ cifmw_ci_nmstate_unmanaged_node_config }}"
  register: _cifmw_ci_nmstate_unmanaged_node_state_out

- name: "Save nmstate debugging data for {{ cifmw_ci_nmstate_unmanaged_host }}"
  ansible.builtin.copy:
    mode: "0644"
    dest: "{{ cifmw_ci_nmstate_configs_dir }}/{{ cifmw_ci_nmstate_unmanaged_host }}-final-state.yaml"
    content: "{{ _cifmw_ci_nmstate_unmanaged_node_state_out.state | to_nice_yaml }}"
