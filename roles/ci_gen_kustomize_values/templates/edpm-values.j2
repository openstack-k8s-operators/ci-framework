data:
  ssh_keys:
    authorized: {{Â cifmw_ci_gen_kustomize_values_ssh_authorizedkeys | b64encode }}
    private: {{ cifmw_ci_gen_kustomize_values_ssh_private_key | b64encode }}
    public: {{ cifmw_ci_gen_kustomize_values_ssh_public_key | b64encode }}
  nova:
    migration:
      ssh_keys:
        private: {{ cifmw_ci_gen_kustomize_values_migration_priv_key | b64encode }}
        public: {{ cifmw_ci_gen_kustomize_values_migration_pub_key | b64encode }}
  nodeset:
    ansible:
      ansibleUser: "zuul"
      ansibleVars:
        timesync_ntp_servers:
          - hostname: "{{ cifmw_ci_gen_kustomize_values_ntp_srv | default('pool.ntp.org') }}"
        edpm_network_config_os_net_config_mappings:
          edpm-compute:
            nic2: {{ (cifmw_networking_env_definition.instances | dict2items | selectattr('key', 'match', '^compute') | first).value.networks['ctlplane']['interface_name']  }}
{% if cifmw_ci_gen_kustomize_values_sshd_ranges | default([]) | length > 0 %}
        edpm_sshd_allowed_ranges:
{%   for range in cifmw_ci_gen_kustomize_values_sshd_ranges %}
          - "{{ range }}"
{%  endfor %}
{% endif %}
    nodes:
{% for compute in cifmw_networking_env_definition.instances.keys() %}
{%   if compute.startswith('compute') %}
      edpm-{{ compute }}:
        ansible:
          host: {{ cifmw_networking_env_definition.instances[compute].networks.ctlplane.ip_v4 }}
        hostName: {{ compute }}
        networks:
{%      for net in cifmw_networking_env_definition.instances[compute].networks.keys() %}
          - name: {{ net }}
            subnetName: subnet1
{%        if net is match('ctlplane') %}
            defaultRoute: true
            fixedIP: {{ cifmw_networking_env_definition.instances[compute].networks.ctlplane.ip_v4 }}
{%        endif%}
{%      endfor %}
{%   endif%}
{% endfor %}
