---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Set compute config and common environment facts
  ansible.builtin.set_fact:
    compute_config: "{{ cifmw_libvirt_manager_configuration['vms']['compute'] }}"
    cifmw_libvirt_manager_common_env: "{{ cifmw_install_yamls_environment | combine({'PATH': cifmw_path }) }}"
    cacheable: true

- name: Ensure needed directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ cifmw_libvirt_manager_basedir }}/workload"
    - "{{ cifmw_libvirt_manager_basedir }}/artifacts/edpm_compute"
    - "{{ cifmw_libvirt_manager_basedir }}/artifacts/{{ cifmw_install_yamls_defaults['NAMESPACE'] }}/cr/"

- name: Ensure image is available
  vars:
    image_data: "{{ compute_config }}"
  ansible.builtin.include_tasks: get_image.yml

- name: Create EDPM compute VMs
  vars:
    make_edpm_compute_dryrun: "{{ cifmw_libvirt_manager_dryrun }}"
    make_edpm_compute_params:
      EDPM_COMPUTE_SUFFIX: "{{ item }}"
    make_edpm_compute_env: >-
      {{ cifmw_libvirt_manager_common_env |
        combine({
          'EDPM_COMPUTE_VCPUS': compute_config.cpus,
          'EDPM_COMPUTE_RAM': compute_config.memory,
          'EDPM_COMPUTE_DISK_SIZE': compute_config.disksize,
          'CRC_POOL': compute_config.image_local_dir,
          'DISK_FILEPATH': cifmw_libvirt_manager_basedir + "/workload/edpm-compute-" + item + ".qcow2",
          'CENTOS_9_STREAM_URL': compute_config.image_url | default(cifmw_discovered_image_url)
        })
      }}
  ansible.builtin.include_role:
    name: 'install_yamls_makes'
    tasks_from: 'make_edpm_compute.yml'
  with_sequence: start=0 end={{ compute_config.amount - 1 }}

- name: Wait for EDPM computes to be ready
  when:
    - not cifmw_libvirt_manager_dryrun|bool
  block:
    - name: Catch compute IPs
      register: edpm_vms_ips
      ansible.builtin.command:
        cmd: "virsh -c qemu:///system -q domifaddr --source arp --domain edpm-compute-{{ item }}"
      with_sequence: start=0 end={{ compute_config.amount - 1 }}
      until: "'ipv4' in edpm_vms_ips.stdout"
      retries: 30
      delay: 5

    - name: Ensure we get SSH
      ansible.builtin.wait_for:
        host: "{{ item.stdout.split()[-1].split('/')[0] }}"
        port: 22
        timeout: 60
      loop: "{{ edpm_vms_ips.results }}"

- name: Output CR for extra computes
  when:
    - compute_config.amount > 2
  ansible.builtin.template:
    dest: "{{ cifmw_libvirt_manager_basedir }}/artifacts/{{ cifmw_install_yamls_defaults['NAMESPACE'] }}/cr/99-cifmw-computes-{{ item }}.yaml"
    src: kustomize_compute.yml.j2
    mode: "0644"
  with_sequence: start=0 end={{ compute_config.amount - 1 }}
