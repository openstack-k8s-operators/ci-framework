---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# Prepares the virtual machine boot image. Though the generation is
# straight forward, we need to ensure support exists for static IP address
# configuration.
#
# Multiple images are created for a single vm type in the case of static IP
# address. Also, the index is used to determine the next usable IP address.


- name: Generate the static address configuration script
  vars:
    _ip_address: >-
      {{
        vm_data.value.ip_address.address |
        ansible.utils.next_nth_usable(vm_id)
      }}
    _ip_gw: "{{ vm_data.value.ip_address.gw | default(omit) }}"
    _ip_dns: "{{ vm_data.value.ip_address.dns | default(omit )}}"
    _ip_prefix: >-
      {{
        vm_data.value.ip_address.address | ansible.utils.ipaddr('prefix')
      }}
    _is_ipv6: "{{ _ip_address is ansible.utils.ipv6 }}"
  ansible.builtin.template:
    src: templates/static_ip.j2
    dest: >-
      {{
        (
          cifmw_libvirt_manager_ip_script_basedir,
          'static-ip-' ~ vm_type ~ '-' ~ vm_id ~ '.sh'
        ) | ansible.builtin.path_join
      }}
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0755"
  loop: "{{ range(0, vm_data.value.amount | default(1) | int) }}"
  loop_control:
    index_var: vm_id
    label: "{{ vm_type }}-{{ vm_id }} "

# Note: --ssh-inject is added to avoid login failures observed during
#       unit testing. Initial investigation pointed to missing
#       authorized_keys.
- name: Insert the static addressing script.  # noqa: risky-shell-pipe
  vars:
    _script: >-
      {{
        (
          cifmw_libvirt_manager_ip_script_basedir,
          'static-ip-' ~ vm_type ~ '-' ~ vm_id ~ '.sh'
        ) | ansible.builtin.path_join
      }}
    _vm_img: "{{ vm_type }}-{{ vm_id }}.qcow2"
    _admin_user: "{{ item.value.admin_user | default('root') }}"
  ansible.builtin.shell:
    cmd: >-
      set -o pipefail;
      virt-sysprep -a "{{ _workload }}/{{ _vm_img }}"
      --firstboot {{ _script }}
      --ssh-inject {{ _admin_user }}:file:{{ ansible_user_dir }}/.ssh/authorized_keys
      | tee -a {{ vm_data.value.image_local_dir }}/{{ _vm_img }}.log
    creates: "{{ vm_data.value.image_local_dir }}/{{ _vm_img }}.log"
  loop: "{{ range(0, vm_data.value.amount | default(1) | int) }}"
  loop_control:
    index_var: vm_id
    label: "{{ vm_type }}-{{ vm_id }} "
