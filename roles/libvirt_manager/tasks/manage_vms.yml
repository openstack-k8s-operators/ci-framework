---
- name: "(localhost) Inject ssh jumpers for {{ vm }}"
  when:
    - inventory_hostname != 'localhost'
    - inventory_hostname != 'instance'  # needed for molecule
  delegate_to: localhost
  vars:
    proxy_hostname: "{{ ansible_host | default(inventory_hostname) }}"
  ansible.builtin.blockinfile:
    create: true
    path: "{{ lookup('env', 'HOME') }}/.ssh/config"
    marker: "## {mark} {{ vm }} {{ inventory_hostname }}"
    mode: "0600"
    block: |-
      Host {{ vm }} {{ vm }}.{{ inventory_hostname }} cifmw-{{ vm }} {{ extracted_ip }}
        ProxyJump {{ ansible_user | default(lookup('env', 'USER')) }}@{{ proxy_hostname }}
        Hostname {{ extracted_ip }}
        User {{ 'core' if vm is match('^(crc|ocp).*') else 'zuul' }}
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null

- name: "({{ inventory_hostname }}) Inject ssh jumpers for {{ vm }}"  # noqa: name[template]
  vars:
    identity_file: >-
      {{
        cifmw_libvirt_manager_basedir ~ '/artifacts/cifmw_ocp_access_key' if vm_type is match('^ocp.*') else
        ansible_user_dir ~ '/.crc/machines/crc/id_ecdsa' if vm_type == 'crc' else
        ansible_user_dir ~ '/.ssh/cifmw_reproducer_key'
      }}
  ansible.builtin.blockinfile:
    create: true
    path: "{{ ansible_user_dir }}/.ssh/config"
    marker: "## {mark} {{ vm }}"
    mode: "0600"
    block: |-
      Host {{ vm }} {{ vm }}.{{ inventory_hostname }} cifmw-{{ vm }} {{ extracted_ip }}
        Hostname {{ extracted_ip }}
        User {{ 'core' if vm is match('^(crc|ocp)') else 'zuul' }}
        IdentityFile {{ identity_file }}
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null

- name: Inject nodes in the ansible inventory
  delegate_to: localhost
  when:
    - (_cifmw_libvirt_manager_layout.vms[vm_type].amount | default(1) | int) > 0
  ansible.builtin.add_host:
    name: "{{ vm }}"
    groups: "{{ (vm_type == 'crc') | ternary('ocp', vm_type) }}s"
    ansible_host: "{{ vm }}.{{ inventory_hostname }}"
    ansible_ssh_user: >-
      {{
        _cifmw_libvirt_manager_layout.vms[vm_type].admin_user |
        default(_init_admin_user)
      }}

- name: "Configure ssh access on type {{ vm }}"
  vars:
    _user: >-
      {{
        (vm_type is match('^(crc|ocp).*$')) |
        ternary('core', _init_admin_user)
      }}
  ansible.builtin.shell:
    cmd: >-
      set -o pipefail;
      cat ~/.ssh/authorized_keys |
      ssh -v {{ _user }}@{{ vm }}.{{ inventory_hostname }} "cat >> ~/.ssh/authorized_keys"
  retries: 5
  delay: 10
  register: _ssh_access
  until: _ssh_access.rc == 0

- name: "Configure VMs type {{ vm }}"
  when:
    - vm_type is not match('^(crc|ocp).*$')
  delegate_to: "{{ vm }}.{{ inventory_hostname }}"
  remote_user: "{{ _init_admin_user }}"
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |-
      test -d /home/zuul && exit 0;
      set -xe -o pipefail;
      echo "{{ vm }}" | sudo tee /etc/hostname;
      sudo hostname -F /etc/hostname;
      sudo useradd -m -d /home/zuul zuul;
      echo "zuul ALL=(ALL)  NOPASSWD: ALL" | sudo tee /etc/sudoers.d/zuul;
      sudo -u zuul mkdir -p /home/zuul/.ssh /home/zuul/src/github.com/openstack-k8s-operators;
      sudo cp ${HOME}/.ssh/authorized_keys /home/zuul/.ssh/;
      chown -R zuul: /home/zuul/.ssh;

# TODO: consider https://docs.fedoraproject.org/en-US/fedora-coreos/storage/#_sizing_the_root_partition
- name: Ensure we grow volume for OCP cluster members
  when:
    - vm is match('^ocp.*')
  vars:
    _root_part: "{{ vm_data.root_part_id | default('1') }}"
  ansible.builtin.shell:
    cmd: >-
      ssh core@{{ vm }}.{{ inventory_hostname }}
      "sudo growpart /dev/sda {{ _root_part }}; sudo xfs_growfs /;"

- name: "Inject private key on hosts {{ vm }}"
  when:
    - vm_type is match('^controller.*$')
  delegate_to: "{{ vm }}.{{ inventory_hostname }}"
  remote_user: "{{ _init_admin_user }}"
  ansible.builtin.copy:
    dest: "/home/zuul/.ssh/id_cifw"
    content: "{{ priv_key }}"
    owner: zuul
    group: zuul
    mode: "0400"

- name: "Inject public key on hosts {{ vm }}"
  when:
    - vm_type is match('^controller.*$')
  delegate_to: "{{ vm }}.{{ inventory_hostname }}"
  remote_user: "{{ _init_admin_user }}"
  ansible.builtin.copy:
    dest: "/home/zuul/.ssh/id_cifw.pub"
    content: "{{ pub_key }}"
    owner: zuul
    group: zuul
    mode: "0444"

- name: Update inventory to consume correct user
  delegate_to: localhost
  when:
    - (_cifmw_libvirt_manager_layout.vms[vm_type].amount | default(1) | int) > 0
  ansible.builtin.add_host:
    name: "{{ vm }}"
    groups: "{{ (vm_type == 'crc') | ternary('ocp', vm_type) }}s"
    ansible_host: "{{ vm }}.{{ inventory_hostname }}"
    ansible_ssh_user: >-
      {{
        _cifmw_libvirt_manager_layout.vms[vm_type].admin_user | default('zuul')
      }}
    host_ip: "{{ extracted_ip }}"
