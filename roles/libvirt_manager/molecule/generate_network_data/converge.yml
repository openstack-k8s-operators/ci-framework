---
# Copyright 2023 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: One hypervisor
  hosts: instance
  gather_facts: true
  vars:
    cifmw_run_id: aabbcc11
    cifmw_basedir: "/opt/basedir"
    _output: >-
      {{
        [ansible_user_dir, 'ci-framework-data',
         'artifacts/generate_network_data'] | path_join
      }}
    _networks:
      osp_trunk:
        default: true
        range: "192.168.140.0/24"
        mtu: 1500
      public:
        range: "192.168.110.0/24"
    _net_translate_base:
      osp_trunk:
        - controlplane
        - ctlplane
    lm_config_base:
      vms:
        compute:
          amount: 1
          disk_file_name: "blank"
          disksize: 5
          memory: 1
          cpus: 1
          nets:
            - public
            - osp_trunk
      networks:
        public: |-
          <network>
            <name>public</name>
            <bridge name='public' stp='on' delay='0'/>
            <dns enable="no"/>
            <ip family='ipv4' address='192.168.110.1' prefix='24'/>
          </network>
  roles:
    - role: "discover_latest_image"
  tasks:
    - name: Ensure _output exists
      ansible.builtin.file:
        path: "{{ _output }}"
        state: directory
        mode: "0755"

    - name: Load networking definition
      ansible.builtin.include_vars:
        file: input.yml
        name: cifmw_networking_definition

    - name: Load scenarios
      ansible.builtin.include_vars:
        file: scenarios.yml

    - name: Set output facts
      ansible.builtin.set_fact:
        is_failed: false
        failure_list: []

    - name: Test scenarios
      vars:
        _cifmw_libvirt_manager_layout: >-
          {{
            lm_config_base |
            combine(scenario.lm_config_patch | default({}), recursive=true)
          }}
        cifmw_dnsmasq_raw_config: |
          log-queries
        cifmw_networking_mapper_interfaces_info_translations: >-
          {{ scenario.net_translate | default(_net_translate_base) }}
        cifmw_baremetal_hosts: >-
          {{
            scenario.bm_hosts | default({})
          }}
        cifmw_libvirt_manager_pub_net: >-
          {{ scenario.pub_net | default('public') }}
      ansible.builtin.include_tasks:
        file: "tasks/test.yml"
      loop: "{{ scenarios }}"
      loop_control:
        label: "{{ scenario.name }}"
        loop_var: scenario

    - name: Fail if needed
      when:
        - is_failed | bool
      ansible.builtin.fail:
        msg: >-
          Errors were raised during validations:
          {{ failure_list | join(' || ') }}
