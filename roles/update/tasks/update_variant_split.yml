---
- name: Set update step to Starting the services update sequence
  ansible.builtin.command:
    cmd: >
      {{ cifmw_update_artifacts_basedir }}/update_event.sh
      Starting the services update sequence

- name: Run make update_services
  vars:
    make_update_services_env: "{{ cifmw_install_yamls_environment | combine({'PATH': cifmw_path }) }}"
    make_update_services_params: "{{ _make_update_params | from_yaml }}"
    make_update_services_dryrun: "{{ cifmw_update_run_dryrun | bool }}"
  ansible.builtin.include_role:
    name: 'install_yamls_makes'
    tasks_from: 'make_update_services'

- name: Set update step to Services update sequence complete
  ansible.builtin.command:
    cmd: >
      {{ cifmw_update_artifacts_basedir }}/update_event.sh
      Services update sequence complete

- name: Run tests after Services update
  vars:
    cifmw_test_operator_artifacts_basedir: "{{ cifmw_basedir|default(ansible_user_dir ~ '/ci-framework-data') }}/tests/test_operator_update"
    cifmw_test_operator_tempest_name: "post-services-update-tempest-tests"
  ansible.builtin.include_role:
    name: cifmw_setup
    tasks_from: run_tests.yml
  when: cifmw_run_tests | default(false) | bool

- name: Set update step to Starting the system update sequence
  ansible.builtin.command:
    cmd: >
      {{ cifmw_update_artifacts_basedir }}/update_event.sh
      Starting the system update sequence

- name: Run make update_system
  vars:
    make_update_system_env: "{{ cifmw_install_yamls_environment | combine({'PATH': cifmw_path }) }}"
    make_update_system_params: "{{ _make_update_params | from_yaml }}"
    make_update_system_dryrun: "{{ cifmw_update_run_dryrun | bool }}"
  ansible.builtin.include_role:
    name: 'install_yamls_makes'
    tasks_from: 'make_update_system'

- name: Set update step to System update sequence complete
  ansible.builtin.command:
    cmd: >
      {{ cifmw_update_artifacts_basedir }}/update_event.sh
      System update sequence complete
