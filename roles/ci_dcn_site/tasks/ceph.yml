---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Fetch network facts of ceph bootstrap node
  delegate_to: "{{ _ceph_bootstrap_node }}"
  run_once: true
  ansible.builtin.setup:
    gather_subset:
      - "!all"
      - "!min"
      - network

- name: Update the hosts file on the Ceph bootstrap host
  become: true
  vars:
    ceph_boot_ssh_ip: "{{ ansible_all_ipv4_addresses | ansible.utils.ipaddr(_subnet_network_range) | first }}"
  delegate_to: "{{ _ceph_bootstrap_node }}"
  run_once: true
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ ceph_boot_ssh_ip }} {{ _ceph_bootstrap_node }}"
    state: present
    create: true
    backup: true
    insertbefore: EOF
    mode: "0644"

- name: Ensure Ceph bootstrap host can ping itself
  register: _cmd_result
  retries: 5
  delay: 60
  until: _cmd_result.rc == 0
  delegate_to: "{{ _ceph_bootstrap_node }}"
  ansible.builtin.command:
    cmd: >-
      ping -c1 "{{ _ceph_bootstrap_node }}"

- name: Create Ceph playbook variables file
  vars:
    _content:
      cifmw_cephadm_cluster: "{{ _az }}"
      ssh_network_range: "{{ _subnet_network_range }}"
      cifmw_ceph_target: "{{ _group_name }}"
      storage_network_range: "{{ _storage_network_range | ansible.utils.ipaddr('network/prefix') }}"
      storage_mgmt_network_range: "{{ _storage_mgmt_network_range |  ansible.utils.ipaddr('network/prefix') }}"
      cifmw_ceph_client_service_values_post_ceph_path_dst: "/tmp/edpm_service_values_post_ceph_{{ _az }}.yaml"
      cifmw_ceph_client_values_post_ceph_path_dst: "{{ ci_dcn_site_arch_repo_path }}/values.yaml"
      cifmw_ceph_spec_data_devices: >-
        data_devices:
          all: true
      cifmw_ceph_client_vars: "/tmp/ceph_client_{{_az}}.yml"
  ansible.builtin.copy:
    mode: "0644"
    dest: "~/ci-framework-data/parameters/ceph-{{ _az }}.yml"
    content: "{{ _content | to_nice_yaml }}"

- name: Check if ceph_client file already exists
  ansible.builtin.stat:
    path: "/tmp/ceph_client_{{_az}}.yml"
  register: ceph_file_stat

- name: Load ceph variables if the file exists
  ansible.builtin.include_vars:
    file: "/tmp/ceph_client_{{_az}}.yml"
  when: ceph_file_stat.stat.exists

- name: If It exists Add cifmw_cephadm_keys to ceph variables file
  ansible.builtin.blockinfile:
    path: "~/ci-framework-data/parameters/ceph-{{ _az }}.yml"
    block: |
      cifmw_cephadm_keys:
      {{ keys | default({}) | to_nice_yaml }}
    insertafter: EOF
  when: ceph_file_stat.stat.exists

- name: Deploy Ceph
  cifmw.general.ci_script:
    output_dir: "/home/zuul/ci-framework-data/artifacts"
    chdir: "{{ ci_dcn_site_cifmw_repo_path }}"
    script: >-
      ansible-playbook
      -i ~/ci-framework-data/artifacts/zuul_inventory.yml
      -e @~/ci-framework-data/parameters/reproducer-variables.yml
      -e @~/ci-framework-data/parameters/ceph-{{ _az }}.yml
      playbooks/ceph.yml

- name: Load the Ceph cluster variables
  ansible.builtin.include_vars:
    file: "/tmp/ceph_client_{{_az}}.yml"

- name: Find all ceph .conf and .keyring files
  register: _ceph_conf_files
  ansible.builtin.find:
    paths: "/tmp"
    patterns: "ceph*.conf,ceph*.keyring,az*.conf,az*.keyring"
    recurse: false

- name: Load ceph configuration files
  ansible.builtin.set_fact:
    _ceph_files: "{{ _ceph_conf_files.files | map(attribute='path') | list }}"
