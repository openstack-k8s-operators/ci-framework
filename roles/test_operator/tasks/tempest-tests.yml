---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
- name: Configuring tests to be executed via skiplist
  when: >
   cifmw_test_operator_tempest_include_list is not defined or
   cifmw_test_operator_tempest_tests_include_override_scenario | bool
  block:
    - name: Copy list_allowed to artifacts dir
      ansible.builtin.copy:
        mode: "0644"
        dest: "{{ cifmw_test_operator_artifacts_basedir }}/list_allowed.yml"
        src: "list_allowed.yml"

    - name: Get list of tests to be executed
      tempest_list_allowed:
        yaml_file: "{{ cifmw_test_operator_artifacts_basedir }}/list_allowed.yml"
        groups: "{{ cifmw_test_operator_default_groups }}"
        job: "{{ cifmw_test_operator_job_name | default(omit) }}"
      register:
        list_allowed

    - name: Set variable
      vars:
        allowed_tests: |
          {% for item in list_allowed.allowed_tests %}
          {{ item }}
          {% endfor %}
      ansible.builtin.set_fact:
        test_operator_cr: >-
          {{
              test_operator_cr |
              combine({'spec': {'tempestRun': { 'includeList':
                      allowed_tests
                      }}}, recursive=true)
          }}

- name: Configuring tests to be skipped via skiplist
  when: >
    cifmw_test_operator_tempest_exclude_list is not defined or
    cifmw_test_operator_tempest_tests_exclude_override_scenario | bool
  block:
    - name: Copy list_skipped to artifacts dir
      ansible.builtin.copy:
        dest: "{{ cifmw_test_operator_artifacts_basedir }}/list_skipped.yml"
        src: "list_skipped.yml"
        mode: "0644"

    - name: Get list of tests to be excluded
      tempest_list_skipped:
        yaml_file: "{{ cifmw_test_operator_artifacts_basedir }}/list_skipped.yml"
        jobs: "{{ cifmw_test_operator_default_jobs }}"
      register:
        list_skipped

    - name: Set variable
      vars:
        skipped_tests: |
          {% for item in list_skipped.skipped_tests %}
          {{ item }}
          {% endfor %}
      ansible.builtin.set_fact:
        test_operator_cr: >-
          {{
              test_operator_cr |
              combine({'spec': {'tempestRun': { 'excludeList':
                      skipped_tests
                      }}}, recursive=true)
          }}

- name: Ensure a secret for the cifmw private key file exists
  when:
    - not cifmw_test_operator_dry_run | bool
    - cifmw_test_operator_tempest_ssh_key_secret_name is not defined
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    state: present
    wait: true
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ cifmw_test_operator_controller_priv_key_secret_name }}"
        namespace: "{{ cifmw_test_operator_namespace }}"
      data:
        ssh-privatekey: "{{ lookup('file', '~/.ssh/id_cifw', rstrip=False) | b64encode }}"

- name: Add SSHKeySecretName section to Tempest CR
  when:
    - not cifmw_test_operator_dry_run | bool
    - cifmw_test_operator_tempest_ssh_key_secret_name is not defined
  ansible.builtin.set_fact:
    test_operator_cr: >-
      {{
          test_operator_cr |
          combine({'spec': {'SSHKeySecretName':
                    cifmw_test_operator_controller_priv_key_secret_name
                  }}, recursive=true)
      }}

- name: Add controller IP to the overrides section in Tempest CR
  when:
    - not cifmw_test_operator_dry_run | bool
    - controller_ip != ""
  vars:
    controller_ip: >-
      {{ cifmw_test_operator_controller_ip | default(ansible_default_ipv4.address) | default('') }}
  ansible.builtin.set_fact:
    test_operator_cr: >-
      {{
          test_operator_cr |
          combine({'spec': {'tempestconfRun': {'overrides':
                    (test_operator_cr.spec.tempestconfRun.overrides | default('')) + ' ' +
                    'whitebox_neutron_plugin_options.proxy_host_address ' + controller_ip
                  }}}, recursive=true)
      }}

- name: Add controller IP to each workflow step overrides section
  when:
    - not cifmw_test_operator_dry_run | bool
    - controller_ip != ""
    - cifmw_test_operator_tempest_workflow | list | length > 0
  vars:
    controller_ip: >-
      {{ cifmw_test_operator_controller_ip | default(ansible_default_ipv4.address) | default('') }}
  block:
    - name: Add controller IP to each workflow step overrides section - Create overriden_workflow
      vars:
        _overriden_workflow_step: >-
          {{
              item
              if (item.tempestconfRun is not defined or item.tempestconfRun.overrides is not defined)
              else
              item |
              combine({'tempestconfRun': {'overrides':
                item.tempestconfRun.overrides + ' ' +
                'whitebox_neutron_plugin_options.proxy_host_address ' + controller_ip
              }}, recursive=true)
          }}
      ansible.builtin.set_fact:
        overriden_workflow: "{{ overriden_workflow | default([]) + [_overriden_workflow_step] }}"
      loop: "{{ cifmw_test_operator_tempest_workflow | list }}"

    - name: Override the Tempest CR workflow
      ansible.builtin.set_fact:
        test_operator_cr: >-
          {{
              test_operator_cr |
              combine({'spec': {'workflow': overriden_workflow}}, recursive=true)
          }}
