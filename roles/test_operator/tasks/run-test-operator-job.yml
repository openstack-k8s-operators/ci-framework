---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

- name: Set variable containing the test-operator CR
  ansible.builtin.set_fact:
    test_operator_cr: "{{ test_operator_config }}"

- name: Prepare test configuration - {{ run_test_fw }}
  ansible.builtin.include_tasks: "{{ test_operator_config_playbook }}"
  when: test_operator_config_playbook is defined

- name: Print CR before applying
  ansible.builtin.debug:
    msg: "{{ test_operator_cr }}"

- name: Not dry run block
  when: not cifmw_test_operator_dry_run | bool
  block:
    - name: Make sure test-operator CR directory exists
      ansible.builtin.file:
        path: "{{ cifmw_test_operator_crs_path }}"
        state: directory
        mode: '0755'

    - name: Write test-operator CR to file
      ansible.builtin.copy:
        content: "{{ test_operator_cr }}"
        dest: "{{ cifmw_test_operator_crs_path }}/{{ test_operator_instance_name }}.yaml"
        mode: '0644'

    - name: Start tests - {{ run_test_fw }}
      kubernetes.core.k8s:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit)}}"
        context: "{{ cifmw_openshift_context | default(omit)}}"
        state: present
        wait: true
        src: "{{ cifmw_test_operator_crs_path }}/{{ test_operator_instance_name }}.yaml"

    - name: Wait for the last Pod to be Completed - {{ run_test_fw }}
      kubernetes.core.k8s_info:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit) }}"
        context: "{{ cifmw_openshift_context | default(omit) }}"
        namespace: "{{ stage_vars_dict.cifmw_test_operator_namespace }}"
        kind: Pod
        label_selectors:
          - "workflowStep={{ [(test_operator_workflow | length) - 1, 0] | max }}"
          - "instanceName={{ test_operator_instance_name }}"
      retries: "{{ (cifmw_test_operator_timeout / 10) | round | int }}"
      delay: 10
      until: >
        testpod.resources[0].status.phase | default(omit) == "Succeeded" or
        testpod.resources[0].status.phase | default(omit) == "Failed"
      ignore_errors: true
      register: testpod

    - name: Check whether timed out - {{ run_test_fw }}
      ansible.builtin.set_fact:
        testpod_timed_out: >-
          {{ testpod.attempts == (cifmw_test_operator_timeout / 10) | round | int }}

    - name: Collect logs
      when:
        - not testpod_timed_out
      ansible.builtin.include_tasks: collect-logs.yaml

    - name: Get list of all pods
      kubernetes.core.k8s_info:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit)}}"
        context: "{{ cifmw_openshift_context | default(omit) }}"
        namespace: "{{ stage_vars_dict.cifmw_test_operator_namespace }}"
        kind: Pod
      register: pod_list

    - name: Get test results from all test pods (Success / Fail)
      register: test_pod_results
      kubernetes.core.k8s_info:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit) }}"
        context: "{{ cifmw_openshift_context | default(omit) }}"
        namespace: "{{ stage_vars_dict.cifmw_test_operator_namespace }}"
        kind: Pod
        label_selectors:
          - "instanceName={{ test_operator_instance_name }}"

    - name: Get status from test pods
      ansible.builtin.set_fact:
        pod_status: >-
          {{
            test_pod_results.resources |
            map(attribute='status.phase') |
            list | unique
          }}

    - name: Check whether test pods finished successfully
      ansible.builtin.set_fact:
        successful_execution: >-
          {{
            pod_status | length == 1 and
            pod_status | first == 'Succeeded'
          }}

    - name: Fail fast if a pod did not succeed - {{ run_test_fw }}
      when:
        - cifmw_test_operator_fail_fast | bool
      ansible.builtin.assert:
        that: successful_execution

    - name: Save result - {{ run_test_fw }}
      ansible.builtin.set_fact:
        test_operator_results: >-
          {{
              test_operator_results | default({}) |
              combine({run_test_fw: successful_execution})
          }}

    - name: Delete test resources
      when:
        - cifmw_test_operator_cleanup | bool
      ansible.builtin.include_tasks: cleanup-run.yaml
