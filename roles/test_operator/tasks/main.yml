---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Ensure test_operator folder exists
  ansible.builtin.file:
    path: "{{ cifmw_test_operator_artifacts_basedir }}"
    state: directory
    mode: "0755"
    recurse: true
    owner: "{{ ansible_user | default(lookup('env', 'USER')) }}"
    group: "{{ ansible_user | default(lookup('env', 'USER')) }}"

- name: Ensure OperatorGroup for the test-operator is present
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    state: present
    wait: true
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: test-operator-operatorgroup
        namespace: "{{ cifmw_test_operator_namespace }}"
      spec:
        targetNamespaces:
          - "{{ cifmw_test_operator_namespace }}"
  when: not cifmw_test_operator_dry_run | bool

- name: Ensure CatalogSource for the test-operator is present
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    state: present
    wait: true
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        name: test-operator-catalog
        namespace: "{{ cifmw_test_operator_namespace }}"
      spec:
        sourceType: grpc
        image: "{{ cifmw_test_operator_index }}"
  when: not cifmw_test_operator_dry_run | bool

- name: Ensure Subscription for the test-operator is present
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit)}}"
    state: present
    wait: true
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: test-operator
        namespace: "{{ cifmw_test_operator_namespace }}"
      spec:
        name: test-operator
        source: test-operator-catalog
        sourceNamespace: "{{ cifmw_test_operator_namespace }}"
        config:
          tolerations: "{{ cifmw_test_operator_tolerations | default(omit) }}"
          nodeSelector: "{{ cifmw_test_operator_node_selector | default(omit) }}"
  when: not cifmw_test_operator_dry_run | bool

- name: Wait until the test-operator csv is present
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: ClusterServiceVersion
    api_version: operators.coreos.com/v1alpha1
  register: csv_list
  delay: 10
  retries: 20
  until: >-
    {{
      csv_list.resources |
      map(attribute='metadata.name') |
      select('match', 'test-operator')
    }}
  when: not cifmw_test_operator_dry_run | bool

- name: Get full name of the test-operator csv
  ansible.builtin.set_fact:
    test_operator_csv_name: >-
      {{
        csv_list.resources |
        map(attribute='metadata.name') |
        select('match', 'test-operator') | first
      }}
  when: not cifmw_test_operator_dry_run | bool

- name: Wait for the test-operator csv to Succeed
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: ClusterServiceVersion
    api_version: operators.coreos.com/v1alpha1
    name: "{{ test_operator_csv_name }}"
  register: csv
  retries: 20
  delay: 10
  until: csv.resources[0].status.phase | default(omit) == "Succeeded"
  when: not cifmw_test_operator_dry_run | bool

- name: Call test stages loop
  when: not cifmw_test_operator_dry_run | bool
  ansible.builtin.include_tasks: stages.yml
  loop: "{{ cifmw_test_operator_stages }}"
  loop_control:
    loop_var: _stage_vars

- name: Delete all resources created by the role
  ansible.builtin.include_tasks: cleanup.yml
  when: cifmw_test_operator_cleanup | bool and not cifmw_test_operator_dry_run | bool

- name: Fail when any tests failed
  when:
    - not cifmw_test_operator_dry_run | bool
    - cifmw_test_operator_fail_on_test_failure | bool
  ansible.builtin.assert:
    that:
      - item.value
    success_msg: "{{ item.key }} tests passed"
    fail_msg: "{{ item.key }} tests failed"
  loop: "{{ test_operator_results | default({}) | dict2items }}"
