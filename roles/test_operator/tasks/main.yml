---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Ensure test_operator folder exists
  ansible.builtin.file:
    path: "{{ cifmw_test_operator_artifacts_basedir }}"
    state: directory
    mode: "0755"
    recurse: true
    owner: "{{ ansible_user | default(lookup('env', 'USER')) }}"
    group: "{{ ansible_user | default(lookup('env', 'USER')) }}"

- name: Patch CSV to change test-operator version if needed
  when:
    - cifmw_test_operator_bundle is defined
    - cifmw_test_operator_bundle != ""
    - not cifmw_test_operator_dry_run | bool
  block:
    - name: Get openstack-operator csv information
      kubernetes.core.k8s_info:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit)}}"
        context: "{{ cifmw_openshift_context | default(omit)}}"
        kind: ClusterServiceVersion
        api_version: operators.coreos.com/v1alpha1
        label_selectors:
          - operators.coreos.com/openstack-operator.openstack-operators
        namespace: "{{ cifmw_test_operator_controller_namespace }}"
      register: csv_info

    - name: Get full name of openstack-operator CSV
      ansible.builtin.set_fact:
        openstack_operator_csv_name: >-
          {{
            csv_info.resources |
            map(attribute='metadata.name') |
            list | first
          }}

    - name: Get index of test-operator image
      environment:
        KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
        PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
      ansible.builtin.shell: >-
        set -o pipefail;
        oc get ClusterServiceVersion {{ openstack_operator_csv_name }}
        -o json |
        jq '.spec.install.spec.deployments[0].spec.template.spec.containers[0].env |
        to_entries[] |
        select(.value.name == "RELATED_IMAGE_TEST_OPERATOR_MANAGER_IMAGE_URL").key'
      register: image_index

    - name: Patch test-operator version in CSV
      kubernetes.core.k8s_json_patch:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit)}}"
        context: "{{ cifmw_openshift_context | default(omit)}}"
        kind: ClusterServiceVersion
        api_version: operators.coreos.com/v1alpha1
        namespace: "{{ cifmw_test_operator_controller_namespace }}"
        name: "{{ openstack_operator_csv_name }}"
        patch:
          - path: "/spec/install/spec/deployments/0/spec/template/spec/containers/0/env/{{ image_index.stdout }}/value"
            value: "{{ cifmw_test_operator_bundle }}"
            op: replace

    - name: Get test-operator-controller-manager pod information
      kubernetes.core.k8s_info:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit)}}"
        context: "{{ cifmw_openshift_context | default(omit)}}"
        kind: Pod
        label_selectors:
          - control-plane=controller-manager
          - openstack.org/operator-name=test
        namespace: "{{ cifmw_test_operator_controller_namespace }}"
      register: pod_info

    - name: Get full name of test-operator-controller-manager pod
      ansible.builtin.set_fact:
        test_operator_controller_name: >-
          {{
            pod_info.resources |
            map(attribute='metadata.name') |
            list | first
          }}

    - name: Wait until the test-operator-controller-manager is reloaded
      kubernetes.core.k8s_info:
        kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
        api_key: "{{ cifmw_openshift_token | default(omit)}}"
        context: "{{ cifmw_openshift_context | default(omit) }}"
        namespace: "{{ cifmw_test_operator_controller_namespace }}"
        kind: Pod
      register: pod_list
      delay: 10
      retries: 20
      until: >-
        {{
          not (
            pod_list.resources |
            map(attribute='metadata.name') |
            select('match', test_operator_controller_name) |
            list
          )
        }}

    - name: Update existing CRDs
      when: cifmw_test_operator_version is defined
      block:
        - name: Delete CRDs created by test-operator
          kubernetes.core.k8s:
            kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
            api_key: "{{ cifmw_openshift_token | default(omit)}}"
            context: "{{ cifmw_openshift_context | default(omit)}}"
            kind: CustomResourceDefinition
            state: absent
            api_version: v1
            name: "{{ item }}"
            namespace: "{{ cifmw_test_operator_namespace }}"
            wait: true
            wait_timeout: 600
          loop:
            - "{{ cifmw_test_operator_tempest_crd_name }}"
            - "{{ cifmw_test_operator_tobiko_crd_name }}"
            - "{{ cifmw_test_operator_ansibletest_crd_name }}"
            - "{{ cifmw_test_operator_horizontest_crd_name }}"

        - name: Clone test-operator repository and checkout into specified version
          ansible.builtin.git:
            repo: "https://github.com/openstack-k8s-operators/test-operator.git"
            dest: /tmp/test-operator
            refspec: '+refs/pull/*:refs/heads/*'
            version: "{{ cifmw_test_operator_version }}"
            force: true

        - name: Run make generate manifests install from /tmp/test-operator dir
          environment:
            KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
            PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
          ansible.builtin.shell: >-
            set -o pipefail;
            make generate manifests install
          args:
            chdir: /tmp/test-operator

- name: Call test stages loop
  when: not cifmw_test_operator_dry_run | bool
  ansible.builtin.include_tasks: stages.yml
  loop: "{{ cifmw_test_operator_stages }}"
  loop_control:
    loop_var: _stage_vars

- name: Fail when any tests failed
  when:
    - not cifmw_test_operator_dry_run | bool
    - cifmw_test_operator_fail_on_test_failure | bool
  ansible.builtin.assert:
    that:
      - item.value
    success_msg: "{{ item.key }} tests passed"
    fail_msg: "{{ item.key }} tests failed"
  loop: "{{ test_operator_results | default({}) | dict2items }}"
