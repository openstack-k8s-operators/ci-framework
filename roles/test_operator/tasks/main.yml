---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Ensure test_operator folder exists
  ansible.builtin.file:
    path: "{{ cifmw_test_operator_artifacts_basedir }}"
    state: directory
    recurse: true

- name: Setup Tempest tests
  ansible.builtin.include_tasks: tempest-tests.yml

- name: Ensure OperatorGroup for the test-operator is present
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    state: present
    wait: true
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: test-operator-operatorgroup
        namespace: "{{ cifmw_test_operator_namespace }}"
      spec:
        targetNamespaces:
          - "{{ cifmw_test_operator_namespace }}"
  when: not cifmw_test_operator_dry_run | bool

- name: Ensure CatalogSource for the test-operator is present
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    state: present
    wait: true
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        name: test-operator-catalog
        namespace: "{{ cifmw_test_operator_namespace }}"
      spec:
        sourceType: grpc
        image: "{{ cifmw_test_operator_index }}"
  when: not cifmw_test_operator_dry_run | bool

- name: Ensure Subscription for the test-operator is present
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit)}}"
    state: present
    wait: true
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: test-operator
        namespace: "{{ cifmw_test_operator_namespace }}"
      spec:
        name: test-operator
        source: test-operator-catalog
        sourceNamespace: "{{ cifmw_test_operator_namespace }}"
  when: not cifmw_test_operator_dry_run | bool

- name: Wait unitl the test-operator csv is present
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: ClusterServiceVersion
    api_version: operators.coreos.com/v1alpha1
  register: csv_list
  delay: 10
  retries: 20
  until: |
    csv_list | json_query('resources[*].metadata.name') | select('match', 'test-operator')
  when: not cifmw_test_operator_dry_run | bool

- name: Get full name of the test-operator csv
  ansible.builtin.set_fact:
    test_operator_csv_name: >-
      {{ csv_list | json_query('resources[*].metadata.name') | select('match', 'test-operator') | first }}
  when: not cifmw_test_operator_dry_run | bool

- name: Wait for the test-operator csv to Succeed
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: ClusterServiceVersion
    api_version: operators.coreos.com/v1alpha1
    name: "{{ test_operator_csv_name }}"
  register: csv
  retries: 20
  delay: 10
  until: csv.resources[0].status.phase | default(omit) == "Succeeded"
  when: not cifmw_test_operator_dry_run | bool

- name: Start Tempest tests
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit)}}"
    state: present
    wait: true
    definition: "{{ cifmw_test_operator_tempest_config }}"
  when: not cifmw_test_operator_dry_run | bool

- name: Wait for the Tempest job to be Ready
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: Job
    name: "{{ cifmw_test_operator_tempest_name }}"
    wait: true
  when: not cifmw_test_operator_dry_run | bool

- name: Wait for the Tempest job to be Completed
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: Job
    name: "{{ cifmw_test_operator_tempest_name }}"
    wait: true
    wait_timeout: "{{ cifmw_test_operator_timeout }}"
    wait_condition:
      type: Complete
      status: true
  when: not cifmw_test_operator_dry_run | bool

- name: Start test-operator-logs-pod
  when: not cifmw_test_operator_dry_run | bool
  kubernetes.core.k8s:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit)}}"
    state: present
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: test-operator-logs-pod
        namespace: "{{ cifmw_test_operator_namespace }}"
      spec:
        containers:
          - name: test-operator-logs-container
            image: "{{ cifmw_test_operator_logs_image }}"
            command: ["sleep"]
            args: ["infinity"]
            volumeMounts:
              - name: logs-volume
                mountPath: /mnt
        volumes:
          - name: logs-volume
            persistentVolumeClaim:
              claimName: "{{ cifmw_test_operator_tempest_config.metadata.name }}"

- name: Ensure that the test-operator-logs-pod is Running
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: Pod
    name: test-operator-logs-pod
    wait: true
  register: logs_pod
  until: logs_pod.resources[0].status.phase == "Running"
  delay: 10
  retries: 20
  when: not cifmw_test_operator_dry_run | bool

- name: Get logs from test-operator-logs-pod
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.shell: >
    oc cp -n {{ cifmw_test_operator_namespace }} openstack/test-operator-logs-pod:mnt/
    {{ cifmw_test_operator_artifacts_basedir }}
  when: not cifmw_test_operator_dry_run | bool

- name: Get list of all pods
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit)}}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: Pod
  register: pod_list
  when: not cifmw_test_operator_dry_run | bool

- name: Get full name of the tempest-tests pod
  ansible.builtin.set_fact:
    tempest_pod_name: >-
      {{ pod_list | json_query('resources[*].metadata.name') | select('match', 'tempest-tests') | first }}
  when: not cifmw_test_operator_dry_run | bool

- name: Save stdout from tempest-pod
  environment:
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
    PATH: "{{ cifmw_path }}"
  ansible.builtin.shell: |
    oc logs -n {{ cifmw_test_operator_namespace }} pod/{{ tempest_pod_name }} > \
      {{ cifmw_test_operator_artifacts_basedir }}/tempest_pod_stdout.txt
  when: not cifmw_test_operator_dry_run | bool

- name: Get test result (Success / Fail)
  register: tempest_pod
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
    kind: Pod
    name: "{{ tempest_pod_name }}"
  when: not cifmw_test_operator_dry_run | bool

- name: Delete all resources created by the role
  ansible.builtin.include_tasks: cleanup.yml
  when: cifmw_test_operator_cleanup | bool and not cifmw_test_operator_dry_run | bool

- name: Fail if the tempest pod did not succeed
  when: not cifmw_test_operator_dry_run | bool
  ansible.builtin.assert:
    that:
      - tempest_pod.resources[0].status.phase == "Succeeded"
