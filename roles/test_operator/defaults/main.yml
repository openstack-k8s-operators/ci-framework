---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


# defaults file for test_operator
# All variables within this role should have a prefix of "cifmw_test_operator"

# Section 1: generic parameters (applied to all supported test frameworks)
cifmw_test_operator_stages:
  - name: tempest
    type: tempest
cifmw_test_operator_fail_on_test_failure: true
cifmw_test_operator_artifacts_basedir: "{{ cifmw_basedir | default(ansible_user_dir ~ '/ci-framework-data') }}/tests/test_operator"
cifmw_test_operator_namespace: openstack
cifmw_test_operator_controller_namespace: openstack-operators
cifmw_test_operator_bundle: ""
cifmw_test_operator_timeout: 3600
cifmw_test_operator_logs_image: quay.io/quay/busybox
cifmw_test_operator_concurrency: 8
cifmw_test_operator_cleanup: false
cifmw_test_operator_dry_run: false
cifmw_test_operator_default_groups:
  - default
cifmw_test_operator_default_jobs:
  - default
cifmw_test_operator_fail_fast: false
cifmw_test_operator_storage_class_prefix: "{{ 'lvms-' if cifmw_use_lvms | default(false) | bool  else '' }}"
cifmw_test_operator_storage_class: "{{ cifmw_test_operator_storage_class_prefix }}local-storage"
cifmw_test_operator_delete_logs_pod: false
cifmw_test_operator_privileged: true
cifmw_test_operator_selinux_level: "s0:c478,c978"
# default test framework registry, namespace and tag can be overridden per test framework (tempest, tobiko, horizontest and ansibletest)
cifmw_test_operator_default_registry: quay.io
cifmw_test_operator_default_namespace: podified-antelope-centos9
cifmw_test_operator_default_image_tag: current-podified

# Section 2: tempest parameters - used when run_test_fw is 'tempest'
cifmw_test_operator_tempest_name: "tempest-tests"
cifmw_test_operator_tempest_registry: "{{ cifmw_test_operator_default_registry }}"
cifmw_test_operator_tempest_namespace: "{{ cifmw_test_operator_default_namespace }}"
cifmw_test_operator_tempest_container: openstack-tempest-all
cifmw_test_operator_tempest_image: "{{ stage_vars_dict.cifmw_test_operator_tempest_registry }}/{{ stage_vars_dict.cifmw_test_operator_tempest_namespace }}/{{ stage_vars_dict.cifmw_test_operator_tempest_container }}"
cifmw_test_operator_tempest_image_tag: "{{ cifmw_test_operator_default_image_tag }}"
cifmw_test_operator_tempest_network_attachments: []
cifmw_test_operator_tempest_tests_include_override_scenario: false
cifmw_test_operator_tempest_tests_exclude_override_scenario: false
cifmw_test_operator_tempest_workflow: []
cifmw_test_operator_tempest_cleanup: false
cifmw_test_operator_tempest_tempestconf_config: "{{ cifmw_tempest_tempestconf_config }}"

# TODO: The default value of this parameter should be changed to {} once this fix
#       for tempest reaches the upstream build of the openstack-tempest-all image:
#       https://review.opendev.org/c/openstack/tempest/+/934980
cifmw_test_operator_tempest_resources:
  requests: {}
  limits: {}

# Enabling SRBAC by default, in jobs where this does not make sense should be turned off explicitly
#
# auth.tempest_roles is set to an empty value because otherwise
# python-tempestconf sets its value as 'member' and this causes
# failures to SRBAC reader tests, because it assigns both roles to the user.
# Beyond that, the roles are defined and assigned in the tests themselves,
# therefore this parameter isn't needed and should have an empty value
# by default.
cifmw_tempest_tempestconf_config_defaults:
  deployerInput: |
    [auth]
    tempest_roles =

    [enforce_scope]
    barbican = true
    cinder = true
    designate = true
    glance = true
    ironic = true
    ironic_inspector = true
    neutron = true
    nova = true
    octavia = true
    keystone = true
    manila = true
    placement = true

    [identity-feature-enabled]
    enforce_scope = true

    [compute-feature-enabled]
    dhcp_domain = ''

    [load_balancer]
    member_role = load-balancer_member
    admin_role = load-balancer_admin
    RBAC_test_type = keystone_default_roles
    enforce_new_defaults = true
    enforce_scope = false

    [volume]
    catalog_type = volumev3

# Please refer to https://openstack-k8s-operators.github.io/test-operator/guide.html#executing-tempest-tests
cifmw_test_operator_tempest_debug: false
cifmw_test_operator_tempest_config:
  apiVersion: test.openstack.org/v1beta1
  kind: Tempest
  metadata:
    name: "{{ stage_vars_dict.cifmw_test_operator_tempest_name }}-{{ _stage_vars.name }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
  spec:
    SELinuxLevel: "{{ cifmw_test_operator_selinux_level }}"
    containerImage: "{{ stage_vars_dict.cifmw_test_operator_tempest_image }}:{{ stage_vars_dict.cifmw_test_operator_tempest_image_tag }}"
    storageClass: "{{ cifmw_test_operator_storage_class }}"
    privileged: "{{ cifmw_test_operator_privileged }}"
    parallel: "{{ stage_vars_dict.cifmw_test_operator_tempest_parallel | default(omit) }}"
    SSHKeySecretName: "{{ stage_vars_dict.cifmw_test_operator_tempest_ssh_key_secret_name | default(omit) }}"
    configOverwrite: "{{ stage_vars_dict.cifmw_test_operator_tempest_config_overwrite | default(omit) }}"
    networkAttachments: "{{ stage_vars_dict.cifmw_test_operator_tempest_network_attachments }}"
    tolerations: "{{ cifmw_test_operator_tolerations | default(omit) }}"
    nodeSelector: "{{ cifmw_test_operator_node_selector | default(omit) }}"
    extraConfigmapsMounts: "{{ stage_vars_dict.cifmw_test_operator_tempest_extra_configmaps_mounts | default(omit) }}"
    extraMounts: "{{ stage_vars_dict.cifmw_test_operator_tempest_extra_mounts | default(omit) }}"
    resources: "{{ stage_vars_dict.cifmw_test_operator_tempest_resources }}"
    tempestRun:
      includeList: |
        {{ stage_vars_dict.cifmw_test_operator_tempest_include_list | default('') }}
      excludeList: |
        {{ stage_vars_dict.cifmw_test_operator_tempest_exclude_list | default('') }}
      expectedFailuresList: |
        {{ stage_vars_dict.cifmw_test_operator_tempest_expected_failures_list | default('') }}
      # NOTE: cifmw_test_operator_concurrency is deprecated, use cifmw_test_operator_tempest_concurrency instead
      concurrency: "{{ stage_vars_dict.cifmw_test_operator_tempest_concurrency | default(cifmw_test_operator_concurrency) }}"
      externalPlugin: "{{ stage_vars_dict.cifmw_test_operator_tempest_external_plugin | default([]) }}"
      extraRPMs: "{{ stage_vars_dict.cifmw_test_operator_tempest_extra_rpms | default([]) }}"
      extraImages: "{{ stage_vars_dict.cifmw_test_operator_tempest_extra_images | default([]) }}"
    tempestconfRun: "{{ cifmw_tempest_tempestconf_config_defaults | combine(stage_vars_dict.cifmw_test_operator_tempest_tempestconf_config | default({})) }}"
    cleanup: "{{ stage_vars_dict.cifmw_test_operator_tempest_cleanup | bool }}"
    workflow: "{{ stage_vars_dict.cifmw_test_operator_tempest_workflow }}"
    debug: "{{ stage_vars_dict.cifmw_test_operator_tempest_debug }}"

# Section 3: tobiko parameters - used when run_test_fw is 'tobiko'
cifmw_test_operator_tobiko_name: "tobiko-tests"
cifmw_test_operator_tobiko_registry: "{{ cifmw_test_operator_default_registry }}"
cifmw_test_operator_tobiko_namespace: "{{ cifmw_test_operator_default_namespace }}"
cifmw_test_operator_tobiko_container: openstack-tobiko
cifmw_test_operator_tobiko_image: "{{ stage_vars_dict.cifmw_test_operator_tobiko_registry }}/{{ stage_vars_dict.cifmw_test_operator_tobiko_namespace }}/{{ stage_vars_dict.cifmw_test_operator_tobiko_container }}"
cifmw_test_operator_tobiko_image_tag: "{{ cifmw_test_operator_default_image_tag }}"
cifmw_test_operator_tobiko_testenv: scenario
cifmw_test_operator_tobiko_version: master
cifmw_test_operator_tobiko_pytest_addopts: null
cifmw_test_operator_tobiko_prevent_create: null
cifmw_test_operator_tobiko_num_processes: null
cifmw_test_operator_tobiko_advanced_image_url: "https://softwarefactory-project.io/ubuntu-minimal-customized-enp3s0"
cifmw_test_operator_tobiko_override_conf: {}
cifmw_test_operator_tobiko_kubeconfig_secret: tobiko-secret
cifmw_test_operator_tobiko_openstack_cmd: 'oc -n openstack exec openstackclient -- openstack'
cifmw_test_operator_tobiko_cleanup: false
cifmw_test_operator_tobiko_ssh_keytype: "{{ cifmw_ssh_keytype | default('ecdsa') }}"
cifmw_test_operator_tobiko_ssh_keysize: "{{ cifmw_ssh_keysize | default(521) }}"
cifmw_test_operator_tobiko_debug: false
cifmw_test_operator_tobiko_network_attachments: []
cifmw_test_operator_tobiko_workflow: []
cifmw_test_operator_tobiko_resources: {}
cifmw_test_operator_tobiko_config:
  apiVersion: test.openstack.org/v1beta1
  kind: Tobiko
  metadata:
    name: "{{ stage_vars_dict.cifmw_test_operator_tobiko_name }}-{{ _stage_vars.name }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
  spec:
    SELinuxLevel: "{{ cifmw_test_operator_selinux_level }}"
    kubeconfigSecretName: "{{ stage_vars_dict.cifmw_test_operator_tobiko_kubeconfig_secret }}"
    storageClass: "{{ cifmw_test_operator_storage_class }}"
    privileged: "{{ cifmw_test_operator_privileged }}"
    containerImage: "{{ stage_vars_dict.cifmw_test_operator_tobiko_image }}:{{ stage_vars_dict.cifmw_test_operator_tobiko_image_tag }}"
    testenv: "{{ stage_vars_dict.cifmw_test_operator_tobiko_testenv }}"
    version: "{{ stage_vars_dict.cifmw_test_operator_tobiko_version }}"
    pytestAddopts: "{{ stage_vars_dict.cifmw_test_operator_tobiko_pytest_addopts if stage_vars_dict.cifmw_test_operator_tobiko_pytest_addopts is not none else omit }}"
    tolerations: "{{ cifmw_test_operator_tolerations | default(omit) }}"
    nodeSelector: "{{ cifmw_test_operator_node_selector | default(omit) }}"
    debug: "{{ stage_vars_dict.cifmw_test_operator_tobiko_debug }}"
    networkAttachments: "{{ stage_vars_dict.cifmw_test_operator_tobiko_network_attachments }}"
    extraMounts: "{{ stage_vars_dict.cifmw_test_operator_tobiko_extra_mounts | default(omit) }}"
    resources: "{{ stage_vars_dict.cifmw_test_operator_tobiko_resources }}"
    # preventCreate: preventCreate is generated by the test_operator role based on the value of stage_vars_dict.cifmw_test_operator_tobiko_prevent_create
    # numProcesses: numProcesses is generated by the test_operator role based on the value of stage_vars_dict.cifmw_test_operator_tobiko_num_processes
    # privateKey: privateKey is automatically by the test_operator role
    # publicKey: publicKey is automatically generated by the test_operator role
    # config: config is generated combining stage_vars_dict.cifmw_test_operator_tobiko_default_conf and stage_vars_dict.cifmw_test_operator_tobiko_override_conf
    workflow: "{{ stage_vars_dict.cifmw_test_operator_tobiko_workflow }}"

# Section 4: ansibletest parameters - used when run_test_fw is 'ansibletest'
cifmw_test_operator_ansibletest_name: "ansibletest"
cifmw_test_operator_ansibletest_registry: "{{ cifmw_test_operator_default_registry }}"
cifmw_test_operator_ansibletest_namespace: "{{ cifmw_test_operator_default_namespace }}"
cifmw_test_operator_ansibletest_container: openstack-ansible-tests
cifmw_test_operator_ansibletest_image: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_registry }}/{{ stage_vars_dict.cifmw_test_operator_ansibletest_namespace }}/{{ stage_vars_dict.cifmw_test_operator_ansibletest_container }}"
cifmw_test_operator_ansibletest_image_tag: "{{ cifmw_test_operator_default_image_tag }}"
cifmw_test_operator_ansibletest_compute_ssh_key_secret_name: "dataplane-ansible-ssh-private-key-secret"
cifmw_test_operator_ansibletest_workload_ssh_key_secret_name: ""
cifmw_test_operator_ansibletest_ansible_git_repo: ""
cifmw_test_operator_ansibletest_ansible_playbook_path: ""
cifmw_test_operator_ansibletest_ansible_collection: ""
cifmw_test_operator_ansibletest_ansible_var_files: ""
cifmw_test_operator_ansibletest_ansible_extra_vars: ""
cifmw_test_operator_ansibletest_ansible_inventory: ""
cifmw_test_operator_ansibletest_openstack_config_map: "openstack-config"
cifmw_test_operator_ansibletest_openstack_config_secret: "openstack-config-secret"
cifmw_test_operator_ansibletest_debug: false
cifmw_test_operator_ansibletest_workflow: []
cifmw_test_operator_ansibletest_extra_configmaps_mounts: []
cifmw_test_operator_ansibletest_resources: {}
cifmw_test_operator_ansibletest_config:
  apiVersion: test.openstack.org/v1beta1
  kind: AnsibleTest
  metadata:
    name: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_name }}-{{ _stage_vars.name }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
  spec:
    SELinuxLevel: "{{ cifmw_test_operator_selinux_level }}"
    containerImage: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_image }}:{{ stage_vars_dict.cifmw_test_operator_ansibletest_image_tag }}"
    extraConfigmapsMounts: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_extra_configmaps_mounts }}"
    extraMounts: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_extra_mounts | default(omit) }}"
    storageClass: "{{ cifmw_test_operator_storage_class }}"
    privileged: "{{ cifmw_test_operator_privileged }}"
    computeSSHKeySecretName: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_compute_ssh_key_secret_name }}"
    workloadSSHKeySecretName: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_workload_ssh_key_secret_name }}"
    ansibleGitRepo: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_ansible_git_repo }}"
    ansiblePlaybookPath: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_ansible_playbook_path }}"
    ansibleCollections: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_ansible_collection }}"
    ansibleVarFiles: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_ansible_var_files }}"
    ansibleExtraVars: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_ansible_extra_vars }}"
    ansibleInventory: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_ansible_inventory }}"
    openStackConfigMap: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_openstack_config_map }}"
    openStackConfigSecret: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_openstack_config_secret }}"
    workflow: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_workflow }}"
    debug: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_debug }}"
    resources: "{{ stage_vars_dict.cifmw_test_operator_ansibletest_resources }}"

# Section 5: horizontest parameters - used when run_test_fw is 'horizontest'
cifmw_test_operator_horizontest_name: "horizontest-tests"
cifmw_test_operator_horizontest_registry: "{{ cifmw_test_operator_default_registry }}"
cifmw_test_operator_horizontest_namespace: "{{ cifmw_test_operator_default_namespace }}"
cifmw_test_operator_horizontest_container: openstack-horizontest
cifmw_test_operator_horizontest_image: "{{ stage_vars_dict.cifmw_test_operator_horizontest_registry }}/{{ stage_vars_dict.cifmw_test_operator_horizontest_namespace }}/{{ stage_vars_dict.cifmw_test_operator_horizontest_container }}"
cifmw_test_operator_horizontest_image_tag: "{{ cifmw_test_operator_default_image_tag }}"
cifmw_test_operator_horizontest_admin_username: admin
cifmw_test_operator_horizontest_admin_password: "12345678"
cifmw_test_operator_horizontest_dashboard_url: "https://horizon-openstack.apps.ocp.openstack.lab/"
cifmw_test_operator_horizontest_auth_url: "https://keystone-public-openstack.apps.ocp.openstack.lab"
cifmw_test_operator_horizontest_repo_url: "https://review.opendev.org/openstack/horizon"
cifmw_test_operator_horizontest_horizon_repo_branch: "master"
cifmw_test_operator_horizontest_image_url: "http://download.cirros-cloud.net/0.6.2/cirros-0.6.2-x86_64-disk.img"
cifmw_test_operator_horizontest_project_name: "horizontest"
cifmw_test_operator_horizontest_user: "horizontest"
cifmw_test_operator_horizontest_password: "horizontest"
cifmw_test_operator_horizontest_flavor_name: "m1.tiny"
cifmw_test_operator_horizontest_logs_directory_name: "horizon"
cifmw_test_operator_horizontest_debug: false
cifmw_test_operator_horizontest_horizon_test_dir: "/var/lib/horizontest"
cifmw_test_operator_horizontest_extra_flag: "not pagination"
cifmw_test_operator_horizontest_project_name_xpath: "//span[@class='rcueicon rcueicon-folder-open']/ancestor::li"
cifmw_test_operator_horizontest_resources: {}
cifmw_test_operator_horizontest_config:
  apiVersion: test.openstack.org/v1beta1
  kind: HorizonTest
  metadata:
    name: "{{ stage_vars_dict.cifmw_test_operator_horizontest_name }}-{{ _stage_vars.name }}"
    namespace: "{{ cifmw_test_operator_namespace }}"
  spec:
    SELinuxLevel: "{{ cifmw_test_operator_selinux_level }}"
    storageClass: "{{ cifmw_test_operator_storage_class }}"
    privileged: "{{ cifmw_test_operator_privileged }}"
    containerImage: "{{ stage_vars_dict.cifmw_test_operator_horizontest_image }}:{{ stage_vars_dict.cifmw_test_operator_horizontest_image_tag }}"
    adminUsername: "{{ stage_vars_dict.cifmw_test_operator_horizontest_admin_username }}"
    adminPassword: "{{ stage_vars_dict.cifmw_test_operator_horizontest_admin_password | string }}"
    dashboardUrl: "{{ stage_vars_dict.cifmw_test_operator_horizontest_dashboard_url }}"
    authUrl: "{{ stage_vars_dict.cifmw_test_operator_horizontest_auth_url }}"
    repoUrl: "{{ stage_vars_dict.cifmw_test_operator_horizontest_repo_url }}"
    horizonRepoBranch: "{{ stage_vars_dict.cifmw_test_operator_horizontest_horizon_repo_branch }}"
    imageUrl: "{{ stage_vars_dict.cifmw_test_operator_horizontest_image_url }}"
    projectName: "{{ stage_vars_dict.cifmw_test_operator_horizontest_project_name }}"
    user: "{{ stage_vars_dict.cifmw_test_operator_horizontest_user }}"
    password: "{{ stage_vars_dict.cifmw_test_operator_horizontest_password }}"
    flavorName: "{{ stage_vars_dict.cifmw_test_operator_horizontest_flavor_name }}"
    logsDirectoryName: "{{ stage_vars_dict.cifmw_test_operator_horizontest_logs_directory_name }}"
    debug: "{{ stage_vars_dict.cifmw_test_operator_horizontest_debug }}"
    extraFlag: "{{ stage_vars_dict.cifmw_test_operator_horizontest_extra_flag }}"
    projectNameXpath: "{{ stage_vars_dict.cifmw_test_operator_horizontest_project_name_xpath }}"
    horizonTestDir: "{{ stage_vars_dict.cifmw_test_operator_horizontest_horizon_test_dir }}"
    extraMounts: "{{ stage_vars_dict.cifmw_test_operator_horizontest_extra_mounts | default(omit) }}"
    resources: "{{ stage_vars_dict.cifmw_test_operator_horizontest_resources }}"
