---
- name: Run pre_deploy hooks
  when:
    - cifmw_architecture_scenario is not defined
  vars:
    step: pre_deploy
  ansible.builtin.import_playbook: ./hooks.yml

- name: Deploy podified control plane
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  gather_facts: false
  tasks:
    # end_play will end only current play, not the main edpm-deploy.yml
    - name: Early end if architecture deploy
      when:
        - cifmw_architecture_scenario is defined
      ansible.builtin.meta: end_play

    - name: Load parameters files
      ansible.builtin.include_vars:
        dir: "{{ cifmw_basedir }}/artifacts/parameters"

    - name: Configure Storage Class
      ansible.builtin.include_role:
        name: ci_local_storage
      when: not cifmw_use_lvms | default(false)

    - name: Configure LVMS Storage Class
      ansible.builtin.include_role:
        name: ci_lvms_storage
      when: cifmw_use_lvms | default(false)

    - name: Run edpm_prepare
      ansible.builtin.include_role:
        name: edpm_prepare

- name: Run post_ctlplane_deploy hooks
  when:
    - cifmw_architecture_scenario is undefined
  vars:
    step: post_ctlplane_deploy
  ansible.builtin.import_playbook: ./hooks.yml

- name: EDPM deployment on virtual baremetal
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  gather_facts: false
  tasks:
    # end_play will end only current play, not the main edpm-deploy.yml
    - name: Early end if architecture deploy
      when:
        - cifmw_architecture_scenario is defined
      ansible.builtin.meta: end_play

    - name: Load parameters files
      ansible.builtin.include_vars:
        dir: "{{ cifmw_basedir }}/artifacts/parameters"

    - name: Create virtual baremetal and deploy EDPM
      when:
        - cifmw_edpm_deploy_baremetal | default('false') | bool
        - cifmw_deploy_edpm | default('false') | bool
      ansible.builtin.import_role:
        name: edpm_deploy_baremetal

- name: EDPM deployment on pre-provisioned VMs
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  gather_facts: false
  tasks:
    # end_play will end only current play, not the main edpm-deploy.yml
    - name: Early end if architecture deploy
      when:
        - cifmw_architecture_scenario is defined
      ansible.builtin.meta: end_play

    - name: Load parameters files
      ansible.builtin.include_vars:
        dir: "{{ cifmw_basedir }}/artifacts/parameters"

    - name: Create VMs and Deploy EDPM
      when:
        - not cifmw_edpm_deploy_baremetal | default('false') | bool
        - cifmw_deploy_edpm | default('false') | bool
      block:
        - name: Create and provision external computes
          when:
            - cifmw_use_libvirt is defined
            - cifmw_use_libvirt | bool
          ansible.builtin.import_role:
            name: libvirt_manager
            tasks_from: deploy_edpm_compute.yml

        - name: Prepare for HCI deploy phase 1
          when: cifmw_edpm_deploy_hci | default('false') | bool
          ansible.builtin.include_role:
            name: hci_prepare
            tasks_from: phase1.yml

        - name: Deploy EDPM
          ansible.builtin.import_role:
            name: edpm_deploy

- name: Deploy NFS server on target nodes
  ansible.builtin.import_playbook: "nfs.yml"

- name: Clear ceph target hosts facts to force refreshing in HCI deployments
  hosts: "{{ cifmw_ceph_target | default('computes')  }}"
  tasks:
    # end_play will end only current play, not the main edpm-deploy.yml
    - name: Early end if architecture deploy
      when:
        - cifmw_architecture_scenario is defined
      ansible.builtin.meta: end_play

    - name: Clear ceph target hosts facts
      when: cifmw_edpm_deploy_hci | default('false') | bool
      ansible.builtin.meta: clear_facts

- name: Deploy Ceph on target nodes
  vars:
    _deploy_ceph: >-
      {{
        (cifmw_edpm_deploy_hci | default('false') | bool) and
        cifmw_architecture_scenario is undefined
      }}
    storage_network_range: 172.18.0.0/24
    storage_mgmt_network_range: 172.20.0.0/24
  ansible.builtin.import_playbook: ceph.yml

- name: Continue HCI deploy
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  gather_facts: false
  tasks:
    # end_play will end only current play, not the main edpm-deploy.yml
    - name: Early end if architecture deploy
      when:
        - cifmw_architecture_scenario is defined
      ansible.builtin.meta: end_play

    - name: Create Ceph secrets and retrieve FSID info
      when: cifmw_edpm_deploy_hci | default('false') | bool
      block:
        - name: Prepare for HCI deploy phase 2
          ansible.builtin.include_role:
            name: hci_prepare
            tasks_from: phase2.yml

        - name: Continue HCI deployment
          ansible.builtin.include_role:
            name: edpm_deploy
          vars:
            cifmw_edpm_deploy_prepare_run: false

- name: Run post_deploy hooks
  when:
    - cifmw_architecture_scenario is not defined
  vars:
    step: post_deploy
  ansible.builtin.import_playbook: ./hooks.yml

- name: Validations workflow
  # If we're doing an architecture deployment, we need to skip validations here.
  # Instead, they will be executed in the 06-deploy-architecture.yml playbook.
  when:
    - cifmw_architecture_scenario is not defined
    - cifmw_execute_validations | default('false') | bool
  ansible.builtin.import_playbook: validations.yml
