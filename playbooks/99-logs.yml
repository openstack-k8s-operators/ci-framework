- name: Logging playbook
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  gather_facts: true
  tasks:
    # end_play will end only current play, not the main edpm-deploy.yml
    - name: Early exit if no tests
      when:
        - zuul_log_collection | default('false') | bool
      ansible.builtin.meta: end_play

    - name: Ensure cifmw_basedir param is set
      when:
        - cifmw_basedir is not defined
      ansible.builtin.set_fact:
        cifmw_basedir: "{{ ansible_user_dir }}/ci-framework-data"

    - name: Try to load parameters files
      block:
        - name: Check directory availabilty
          register: param_dir
          ansible.builtin.stat:
            path: "{{ cifmw_basedir }}/artifacts/parameters"

        - name: Load parameters files
          when:
            - param_dir.stat.exists |Â bool
          ansible.builtin.include_vars:
            dir: "{{ cifmw_basedir }}/artifacts/parameters"
      always:
        - name: Set custom cifmw PATH reusable fact
          when:
            - cifmw_path is not defined
          ansible.builtin.set_fact:
            cifmw_path: "{{ ansible_user_dir }}/.crc/bin:{{ ansible_user_dir }}/.crc/bin/oc:{{ ansible_user_dir }}/bin:{{ ansible_env.PATH }}"
            cacheable: true

    - name: Generate artifacts
      ansible.builtin.import_role:
        name: artifacts

    - name: Collect container images used in the environment
      ansible.builtin.import_role:
        name: env_op_images

    - name: Ensure ansible.log is at the expected location
      register: ansible_log_state
      ansible.builtin.stat:
        path: "{{ ansible_user_dir }}/ansible.log"

    - name: Ensure ansible facts cache exists
      register: ansible_facts_cache_state
      ansible.builtin.stat:
        path: "{{ ansible_user_dir }}/ansible_facts_cache"

    - name: Generate log file name date
      register: filename_date
      ansible.builtin.command:
        cmd: date +%F-%R

    - name: Copy ansible log if exists
      when:
        - ansible_log_state.stat.exists is defined
        - ansible_log_state.stat.exists | bool
      block:
        - name: Copy ansible log to proper location
          ansible.builtin.copy:
            src: "{{ ansible_user_dir }}/ansible.log"
            dest: "{{ cifmw_basedir|default(ansible_user_dir ~ '/ci-framework-data') }}/logs/ansible.log-{{ filename_date.stdout|trim }}"
            remote_src: true

        - name: Remove original log from home directory
          ansible.builtin.file:
            path: "{{ ansible_user_dir }}/ansible.log"
            state: absent

    - name: Copy Ansible facts if exists
      when:
        - ansible_facts_cache_state.stat.exists is defined
        - ansible_facts_cache_state.stat.exists | bool
      block:
        - name: Copy facts to dated directory
          ansible.builtin.copy:
            src: "{{ ansible_user_dir }}/ansible_facts_cache"
            dest: "{{ cifmw_basedir|default(ansible_user_dir ~ '/ci-framework-data') }}/artifacts/ansible_facts-{{ filename_date.stdout|trim }}"
            remote_src: true

        - name: Clean ansible fact cache
          ansible.builtin.file:
            path: "{{ ansible_user_dir }}/ansible_facts_cache"
            state: absent
