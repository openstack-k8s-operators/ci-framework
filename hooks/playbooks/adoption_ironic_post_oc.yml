---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: OSP 17 - Ironic post overcloud
  hosts: "{{ cifmw_target_host | default('localhost') }}"
  vars:
    _subnet_range: '172.20.1.0/24'
    _subnet_gateway: '172.20.1.1'
    _subnet_alloc_pool_start: '172.20.1.150'
    _subnet_alloc_pool_end: '172.20.1.199'
    _provider_physical_network: ironic
    _provider_network_type: flat
  tasks:
    - name: Gather ansible_user_dir from OSP nodes
      delegate_to: "{{ item }}"
      ansible.builtin.setup:
        gather_subset:
          - user_dir
      loop:
        - controller-0
        - osp-undercloud-0
        - osp-controller-0
        - osp-controller-1
        - osp-controller-2

    - name: Install ironic-python-agent images package
      block:
        - name: Install the ironic-python-agent images package
          become: true
          delegate_to: "{{ item }}"
          ansible.builtin.dnf:
            name: rhosp-director-images-ipa-x86_64
            state: present
          loop:
            - osp-undercloud-0
            - osp-controller-0
            - osp-controller-1
            - osp-controller-2

        - name: Create ironic-python-agent directory
          delegate_to: "{{ item }}"
          ansible.builtin.file:
            state: directory
            path: "{{ ansible_user_dir }}/ironic-python-agent"
            mode: "0755"
          loop:
            - osp-undercloud-0
            - osp-controller-0
            - osp-controller-1
            - osp-controller-2

        - name: Extract ironic-python-images from tar
          delegate_to: "{{ item }}"
          ansible.builtin.unarchive:
            src: /usr/share/rhosp-director-images/ironic-python-agent-latest.tar
            dest: "{{ ansible_user_dir }}/ironic-python-agent"
            remote_src: true
          loop:
            - osp-undercloud-0
            - osp-controller-0
            - osp-controller-1
            - osp-controller-2

    - name: Copy ironic-python-agent to /var/lib/ironic/httpboot
      become: true
      block:
        - name: Copy ironic-python-agent kernel
          delegate_to: "{{ item }}"
          ansible.builtin.copy:
            src: "{{ ansible_user_dir }}/ironic-python-agent/ironic-python-agent.kernel"
            dest: /var/lib/ironic/httpboot/agent.kernel
            remote_src: true
            mode: "0644"
          loop:
            - osp-controller-0
            - osp-controller-1
            - osp-controller-2

        - name: Copy ironic-python-agent ramdisk
          delegate_to: "{{ item }}"
          ansible.builtin.copy:
            src: "{{ ansible_user_dir }}/ironic-python-agent/ironic-python-agent.initramfs"
            dest: /var/lib/ironic/httpboot/agent.ramdisk
            remote_src: true
            mode: "0644"
          loop:
            - osp-controller-0
            - osp-controller-1
            - osp-controller-2

    - name: Glance images - ironic-python-agent
      delegate_to: osp-undercloud-0
      block:
        - name: Upload ironic-python-agent kernel to glance
          environment:
            OS_CLOUD: "{{ cifmw_adoption_osp_deploy_scenario.stacks[0].stackname }}"
          ansible.builtin.shell:
            cmd: >-
              openstack image show deploy-kernel &>/dev/null || \
                openstack image create deploy-kernel \
                  --public \
                  --container-format aki \
                  --disk-format aki \
                  --file ironic-python-agent.kernel
          args:
            chdir: "{{ ansible_user_dir }}/ironic-python-agent"

        - name: Upload ironic-python-agent ramdisk to glance
          environment:
            OS_CLOUD: "{{ cifmw_adoption_osp_deploy_scenario.stacks[0].stackname }}"
          ansible.builtin.shell:
            cmd: >-
              openstack image show deploy-ramdisk &>/dev/null || \
                openstack image create deploy-ramdisk \
                  --public \
                  --container-format ari \
                  --disk-format ari \
                  --file ironic-python-agent.initramfs
          args:
            chdir: "{{ ansible_user_dir }}/ironic-python-agent"

    - name: Create ironic provisioning network
      delegate_to: osp-undercloud-0
      environment:
        OS_CLOUD: "{{ cifmw_adoption_osp_deploy_scenario.stacks[0].stackname }}"
      block:
        - name: Create network
          ansible.builtin.shell:
            cmd: >-
              openstack network show provisioning &>/dev/null || \
                openstack network create provisioning \
                  --share \
                  --provider-physical-network {{ _provider_physical_network }} \
                  --provider-network-type {{ _provider_network_type }}

        - name: Create subnet
          ansible.builtin.shell:
            cmd: >-
              openstack subnet show provisioning-subnet &>/dev/null || \
                openstack subnet create provisioning-subnet \
                  --network provisioning \
                  --subnet-range {{ _subnet_range }} \
                  --gateway {{ _subnet_gateway }} \
                  --allocation-pool start={{ _subnet_alloc_pool_start }},end={{ _subnet_alloc_pool_end }}

    - name: Slurp ironic_nodes.yaml from controller-0
      delegate_to: controller-0
      register: _ironic_nodes_slurp
      ansible.builtin.slurp:
        src: "{{ ansible_user_dir }}/ci-framework-data/parameters/ironic_nodes.yaml"

    - name: Enroll ironic nodes
      delegate_to: osp-undercloud-0
      block:
        - name: Ensure directory exists
          ansible.builtin.file:
            state: directory
            path: "{{ ansible_user_dir }}/ci-framework-data/parameters"
            mode: "0755"

        - name: Write ironic_nodes.yaml on osp-unercloud-o
          ansible.builtin.copy:
            content: "{{ _ironic_nodes_slurp.content | b64decode }}"
            dest: "{{ ansible_user_dir }}/ci-framework-data/parameters/ironic_nodes.yaml"
            mode: "0644"

        - name: Run baremetal create command to enroll the nodes in the Ironic service
          environment:
            OS_CLOUD: "{{ cifmw_adoption_osp_deploy_scenario.stacks[0].stackname }}"
          ansible.builtin.command: >-
              openstack baremetal create ironic_nodes.yaml
          args:
            chdir: "{{ ansible_user_dir }}/ci-framework-data/parameters/"
