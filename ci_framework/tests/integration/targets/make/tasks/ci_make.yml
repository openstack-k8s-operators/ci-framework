---
- name: Create some directories
  ansible.builtin.file:
    path: "/tmp/{{ item }}"
    state: directory
  loop:
    - artifacts
    - logs
    - project_makefile

- name: Inject dummy Makefile
  ansible.builtin.copy:
    dest: /tmp/project_makefile/Makefile
    content: |
      .DEFAULT_GOAL := help
      .RECIPEPREFIX := >
      FOO_BAR ?= "toto"
      help:
      > @echo "This is the help thing showing ${FOO_BAR}"
      failing:
      > @exit 255

- name: Run ci_make without any params
  register: no_params
  ci_make:
    target: help
    chdir: /tmp/project_makefile
    output_dir: /tmp/artifacts

- name: Inject some non-related file to validate index
  ansible.builtin.copy:
    dest: /tmp/artifacts/foobar
    content: |
      I'm a useless flag in here

- name: Run ci_make with a param
  register: with_params
  ci_make:
    target: help
    chdir: /tmp/project_makefile
    output_dir: /tmp/artifacts
    params:
      FOO_BAR: starwars

- name: Ensure we have correct output
  ansible.builtin.assert:
    that:
      - no_params.stdout == 'This is the help thing showing toto'
      - with_params.stdout == 'This is the help thing showing starwars'

- name: Try dry_run parameter
  ci_make:
    chdir: /tmp/project_makefile
    output_dir: /tmp/artifacts
    params:
      FOO_BAR: startrek
    dry_run: true

- name: Test with environment parameters
  environment:
    MY_ENV_VAR: startrek
    SOME_OTHER: jar-jar-binks
  ci_make:
    chdir: /tmp/project_makefile
    output_dir: /tmp/artifacts
    target: help
    params:
      FOO_BAR: "${MY_ENV_VAR}"

- name: Test with environment parameters passed as ansible variables
  block:
    - name: Set env var
      ansible.builtin.set_fact:
        my_env_vars:
          FOO_BAR: Muad-Dib
          SOME_OTHER: Dune
    - name: Run ci_make with custom env variable
      environment: "{{ my_env_vars }}"
      ci_make:
        chdir: /tmp/project_makefile
        output_dir: /tmp/artifacts
        target: help
    - name: Run ci_make with custom env variable and default
      environment: "{{ my_env_vars | default({}) }}"
      ci_make:
        chdir: /tmp/project_makefile
        output_dir: /tmp/artifacts
        target: help

- name: Run ci_make with environment parameter and default
  environment: "{{ other_env_vars | default({'FOO_BAR': 'titi'}) }}"
  ci_make:
    chdir: /tmp/project_makefile
    output_dir: /tmp/artifacts
    target: help

- name: Run ci_make with a faulty command
  block:
    - name: Run failing target
      register: failing_make
      failed_when:
        - failing_make.stderr is not match(".*Error 255.*")
      ci_make:
        chdir: /tmp/project_makefile
        output_dir: /tmp/artifacts
        target: failing


- name: Check generated files
  tags:
    - never
  block:
    - name: Set files attributes
      ansible.builtin.set_fact:
        files_to_check:
          "/tmp/artifacts/ci_make_000_run_ci_make_without_any_params.sh":
            e6ec8bc41f8aa58ef72fb1d8e336dc9c8115d0e4
          "/tmp/artifacts/ci_make_001_run_ci_make_with_a_param.sh":
            79fe696cf7e0f3001e99fed22f5a2674f1f8c493
          "/tmp/artifacts/ci_make_002_try_dry_run_parameter.sh":
            4909f854ee1fc8e17c608ea0a7a2adb40101c825
          "/tmp/artifacts/ci_make_003_test_with_environment_parameters.sh":
            4ca6f838a71ab336f91f8775d684c3d8ccc0a89a
          "/tmp/artifacts/ci_make_004_run_ci_make_with_custom_env_variable.sh":
            2447a25f97c34a25c0ab3a6e67baf1d2c8817c78
          "/tmp/logs/ci_make_000_run_ci_make_without_any_params.log":
            8dcc15e2dd273dda4f7120efc059274bd8d50a89
          "/tmp/logs/ci_make_001_run_ci_make_with_a_param.log":
            fa1fd735445ca641270e630a00303b5816bafff3
          "/tmp/logs/ci_make_003_test_with_environment_parameters.log":
            3384b44a202d4f841781dff704276e0ae44484e7
          "/tmp/logs/ci_make_004_run_ci_make_with_custom_env_variable.log":
            f17389a98ce38f871c3b69f1ad8b9956b7f95958
          "/tmp/logs/ci_make_005_run_ci_make_with_custom_env_variable_and_default.log":
            f17389a98ce38f871c3b69f1ad8b9956b7f95958
          "/tmp/logs/ci_make_006_run_ci_make_with_environment_parameter_and_default.log":
            33d4f79ce503647c036a927bbf409189e79b1fd4
          "/tmp/logs/ci_make_007_run_failing_target.log":
            88aa7bc8f90b26effa2b0d6cc528530b7bc6f75f
          "/tmp/artifacts/ci_make_007_run_failing_target.sh":
            0294daf29cbd1b1a68268ae698d5e74a8c527632

    - name: Gather files
      register: reproducer_scripts
      ansible.builtin.stat:
        path: "{{ item.key }}"
      loop: "{{ files_to_check | dict2items }}"

    - name: Assert file status
      ansible.builtin.assert:
        that:
          - item.stat.exists is defined
          - item.stat.exists | bool
          - item.stat.checksum == files_to_check[item.stat.path]
      loop: "{{ reproducer_scripts.results }}"
