- name: Prepare storage in CRC
  vars:
    make_crc_storage_dryrun: "{{ cifmw_edpm_prepare_dry_run }}"
  when:
    - cifmw_use_crc is defined
    - cifmw_use_crc | bool
    - not cifmw_edpm_prepare_skip_crc_storage_creation | bool
  ansible.builtin.include_role:
    name: 'install_yamls_makes'
    tasks_from: 'make_crc_storage'

- name: Set install_yamls Makefile environment variables
  vars:
    operators_build_output: "{{ (cifmw_operator_build_output | default({'operators':{}})).operators }}"
  ansible.builtin.set_fact:
    cifmw_edpm_prepare_common_env:
      OUT: "{{ cifmw_edpm_prepare_manifests_dir }}"
    cifmw_edpm_prepare_make_openstack_env: |
      {% if cifmw_operator_build_meta_name is defined and cifmw_operator_build_meta_name in operators_build_output %}
      OPENSTACK_IMG: {{ operators_build_output[cifmw_operator_build_meta_name].image_catalog }}
      {% endif %}
    cifmw_edpm_prepare_make_openstack_deploy_env: |
      {% if cifmw_operator_build_meta_name is defined and cifmw_operator_build_meta_name in operators_build_output %}
      OPENSTACK_BRANCH: ""
      GIT_CLONE_OPTS: "-l"
      OPENSTACK_REPO: operators_build_output[cifmw_operator_build_meta_name].git_src_dir
      {% endif %}

- name: Prepare inputs
  vars:
    make_input_env: "{{ cifmw_edpm_prepare_common_env }}"
    make_input_dryrun: "{{ cifmw_edpm_prepare_dry_run }}"
  ansible.builtin.include_role:
    name: 'install_yamls_makes'
    tasks_from: 'make_input'

# TODO: Prepare a proper operator list that dictates what operators to deploy instead of relaying on a simple flag
- name: OpenStack meta-operator installation
  when: not cifmw_edpm_prepare_skip_openstack_operator
  block:
  - name: Install OpenStack operator
    vars:
      make_openstack_env: "{{ cifmw_edpm_prepare_common_env |
        combine(cifmw_edpm_prepare_make_openstack_env | from_yaml)}}"
      make_openstack_dryrun: "{{ cifmw_edpm_prepare_dry_run }}"
    ansible.builtin.include_role:
      name: 'install_yamls_makes'
      tasks_from: 'make_openstack'

- name: Wait for OpenStack control plane to be installed
  block:
    - name: Wait for OpenStack subscription creation
      ansible.builtin.command:
        cmd: oc get sub openstack-operator --namespace={{ cifmw_install_yamls_defaults['NAMESPACE'] }} -o=jsonpath='{.status.installplan.name}'
      until: cifmw_edpm_prepare_wait_installplan_out.rc == 0 and cifmw_edpm_prepare_wait_installplan_out.stdout != ""
      register: cifmw_edpm_prepare_wait_installplan_out
      retries: "{{ cifmw_edpm_prepare_wait_subscription_retries }}"
      delay: 5

    - name: Wait for OpenStack operator to get installed
      ansible.builtin.command:
        cmd: >
          oc wait InstallPlan {{ cifmw_edpm_prepare_wait_installplan_out.stdout }}
          --namespace={{ cifmw_install_yamls_defaults['NAMESPACE'] }} --for=jsonpath='{.status.phase}'=Complete --timeout=20m
  when:
    - not cifmw_edpm_prepare_dry_run
    - not cifmw_edpm_prepare_skip_openstack_operator

- name: Install OpenStack service
  when:
    - not cifmw_edpm_prepare_dry_run
    - not cifmw_edpm_prepare_skip_openstack_operator
  vars:
    make_openstack_deploy_env: "{{ cifmw_edpm_prepare_common_env |
      combine(cifmw_edpm_prepare_make_openstack_deploy_env | from_yaml)}}"
    make_openstack_deploy_dryrun: "{{ cifmw_edpm_prepare_dry_run }}"
  ansible.builtin.include_role:
    name: 'install_yamls_makes'
    tasks_from: 'make_openstack_deploy'

- name: Wait for OpenStack control plane to be installed
  block:
    - name: Find the OpenStack CR manifest
      ansible.builtin.find:
        paths: "{{ cifmw_edpm_prepare_manifests_dir }}/{{ cifmw_install_yamls_defaults['NAMESPACE'] }}/openstack/cr"
        contains: "kind: OpenStackControlPlane"
        patterns: "*.yaml"
      register: cifmw_edpm_prepare_openstack_cr_manifest_paths

    - name: Ensure manifest exists
      ansible.builtin.assert:
        that: cifmw_edpm_prepare_openstack_cr_manifest_paths.matched == 1
        quiet: true
        msg: "Cannot determine OpenStackControlPlane deployment manifest"

    - name: Find files out
      ansible.builtin.slurp:
        src: "{{ cifmw_edpm_prepare_openstack_cr_manifest_paths.files[0].path }}"
      register: cifmw_edpm_prepare_ctrlplane_cr_slurp

    - name: Wait for OpenStack controlplane to be deployed
      ansible.builtin.command:
        cmd: >-
          oc wait OpenStackControlPlane {{ (cifmw_edpm_prepare_ctrlplane_cr_slurp['content'] | b64decode | from_yaml).metadata.name }}
          --namespace={{ cifmw_install_yamls_defaults['NAMESPACE'] }}
          --for=condition=ready
          --timeout=30m
  when:
    - not cifmw_edpm_prepare_dry_run
    - not cifmw_edpm_prepare_skip_openstack_operator
