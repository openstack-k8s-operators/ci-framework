---
- name: Set Facts
  ansible.builtin.set_fact:
    idrac_scheduled_bios_jobs: {}
    idrac_runnig_jobs: {}

- name: Retrieve Jobs From iDRAC
  when: not ansible_check_mode
  ansible.builtin.include_tasks:
    file: retrieve_idrac_jobs.yml

- name: Check If There Are Non Completed Jobs
  when: idrac_job['results']
  block:
    - name: Check For Scheduled BIOS Configuration Jobs
      ansible.builtin.set_fact:
        idrac_scheduled_bios_jobs: >-
          "{{ idrac_job['results'] |
           selectattr('content', 'contains', 'Task successfully scheduled') |
           selectattr('content', 'contains', 'BIOSConfiguration') | list }}"
      when: >-
        idrac_job['results'] |
        selectattr('content', 'contains', 'Task successfully scheduled') |
        selectattr('content', 'contains', 'BIOSConfiguration') | list

    - name: Check For Running Jobs
      when: idrac_job['results'] | selectattr('content', 'contains', 'Job in progress') | list
      ansible.builtin.set_fact:
        idrac_runnig_jobs: >-
          "{{ idrac_job['results'] |
           selectattr('content', 'contains', 'Job in progress') |
           list }}"

- name: Deleting Scheduled BIOS Configuration Jobs If Present
  # Can not use map filter due to special character '@'
  # Forced to use jinja2 loop
  # Jobs that are being executed will not be able to be deleted,
  # we will attempt to wait for them to finish
  # Not all iDRAC versions support Deleting Job Queue via Redfish
  vars:
    idrac_jobs_uris: >-
      {%- set jobs=[] -%}
      {%- for job in idrac_scheduled_bios_jobs -%}
        {{ jobs.append(cifmw_idrac_configuration_uri_protocol + '://' +
         inventory_hostname + job['json']['@odata.id']) }}
      {%- endfor -%}
      {{ jobs }}
  when:
    - idrac_scheduled_bios_jobs is defined
    - not check_bios_jobs
  ansible.builtin.uri:
    url: "{{ item }}"
    method: 'DELETE'
    user: "{{ cifmw_idrac_configuration_user }}"
    password: "{{ cifmw_idrac_configuration_password }}"
    force_basic_auth: true
    return_content: true
    validate_certs: "{{ cifmw_idrac_configuration_validate_ssl_certs }}"
  register: idrac_scheduled_job_deletion
  retries: "{{ cifmw_idrac_configuration_task_retries }}"
  delay: 5
  until: >-
    (idrac_scheduled_job_deletion['status'] == 200) or
    (idrac_scheduled_job_deletion['status'] == 400 and
    idrac_scheduled_job_deletion['json']['error']['@Message.ExtendedInfo'] |
    selectattr('Message', 'contains', 'Invalid Job ID') | list)
  loop: "{{ idrac_jobs_uris }}"

- name: Wait For Running Jobs To Complete
  ansible.builtin.include_tasks:
    file: wait_for_running_jobs.yml
