---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Gather external network subnet information.
  tags:
    - bootstrap
  when:
    - cifmw_devscripts_config['manage_br_bridge'] is defined
    - cifmw_devscripts_config['manage_br_bridge'] == 'n'
  block:
    - name: Collect subnet when v4 family is enabled.
      when:
        - cifmw_devscripts_config['external_subnet_v4'] is not defined
        - cifmw_devscripts_config['ip_stack'] != 'v6'
      vars:
        subnet: >-
          {{ ansible_default_ipv4.network}}/{{ ansible_default_ipv4.netmask }}
        ext_net_v4:
          external_subnet_v4: >-
            {{
              subnet | ansible.utils.ipaddr('network/prefix')
            }}
      ansible.builtin.set_fact:
        cifmw_devscripts_config: >-
          {{
            cifmw_devscripts_config | combine(ext_net_v4, recursive=true)
          }}

    - name: Gather subnet when v6 family is enabled.
      when:
        - cifmw_devscripts_config['external_subnet_v6'] is not defined
        - cifmw_devscripts_config['ip_stack'] != 'v4'
      vars:
        subnet: >-
          {{ ansible_default_ipv6.network}}/{{ ansible_default_ipv6.netmask }}
        ext_net_v6:
          external_subnet_v6: >-
            {{
              subnet | ansible.utils.ipaddr('network/prefix')
            }}
      ansible.builtin.set_fact:
        cifmw_devscripts_config: >-
          {{
            cifmw_devscripts_config | combine(ext_net_v6, recursive=true)
          }}

- name: Add external network IPv4 address
  tags:
    - bootstrap
  vars:
    data:
      provisioning_host_external_ip: "{{ ansible_default_ipv4.address}}"
      provisioning_url_host: "{{ ansible_default_ipv4.address}}"
  ansible.builtin.set_fact:
    cifmw_devscripts_config: >-
      {{
        cifmw_devscripts_config | combine(data, recursive=true)
      }}

- name: Gather the SSH public key for enabling cluster access.
  tags:
    - bootstrap
  when: cifmw_devscripts_ssh_pub_key is not defined
  vars:
    pub_key:
      ssh_pub_key: "{{ cifmw_devscripts_ssh_key.public_key }}"
  ansible.builtin.set_fact:
    cifmw_devscripts_config: >-
      {{
        cifmw_devscripts_config | combine(pub_key, recursive=true)
      }}
