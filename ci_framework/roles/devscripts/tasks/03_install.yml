---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Clone the dev-scripts repository.
  tags:
    - bootstrap
  ansible.builtin.git:
    repo: "{{ cifmw_devscripts_repo }}"
    dest: "{{ cifmw_devscripts_repo_dir }}"
    depth: 1
    single_branch: true
    force: true
    version: HEAD  # noqa: latest[git]
  register: clone_out
  retries: 3
  delay: 15
  until: "clone_out is not failed"

# This is the same patch as proposed upstream with
# https://github.com/openshift-metal3/dev-scripts/pull/1595
# Even if it gets merged, the patch here won't fail.
- name: Patch dev-scripts for libvirt stability
  when: cifmw_devscripts_restart_virtproxyd | bool
  tags:
    - bootstrap
  ansible.posix.patch:
    src: virtproxyd.patch
    dest: "{{ cifmw_devscripts_repo_dir }}/ocp_install_env.sh"

# Note: Override When external network is being reused.
- name: Verify dev-scripts vm_setup_vars to reflects external network address
  tags:
    - bootstrap
  when:
    - "'manage_br_bridge' in cifmw_devscripts_config"
    - cifmw_devscripts_config['manage_br_bridge'] == 'n'
  ansible.builtin.replace:
    path: "{{ cifmw_devscripts_repo_dir }}/vm_setup_vars.yml"
    after: "external_network:"
    regexp: "^    address_v4(.+)$"
    replace: "    address_v4: {{ ansible_default_ipv4.address }}"

- name: Copy the CI token file in devscript repo directory
  when: cifmw_devscripts_ci_token_file is defined
  tags:
    - bootstrap
  ansible.builtin.copy:
    src: "{{ cifmw_devscripts_ci_token_file }}"
    dest: "{{ cifmw_devscripts_repo_dir }}/ci_token"
    owner: "{{ cifmw_devscripts_user }}"
    group: "{{ cifmw_devscripts_user }}"
    mode: "0600"

- name: Copy the OCP config file.
  tags:
    - bootstrap
  ansible.builtin.template:
    src: templates/conf_ciuser.sh.j2
    dest: >-
      {{ cifmw_devscripts_repo_dir }}/config_{{ cifmw_devscripts_user }}.sh

- name: Copy the user pull secret from cifmw_devscripts_pull_secret var
  when: cifmw_devscripts_pull_secret is defined
  tags:
    - bootstrap
  ansible.builtin.copy:
    dest: "{{ cifmw_devscripts_repo_dir }}/pull_secret.json"
    content: "{{ cifmw_devscripts_pull_secret }}"
    owner: "{{ cifmw_devscripts_user }}"
    group: "{{ cifmw_devscripts_user }}"
    mode: "0644"

- name: Copy the user pull secret from cifmw_devscripts_pull_secret_file var
  when: cifmw_devscripts_pull_secret_file is defined
  tags:
    - bootstrap
  ansible.builtin.copy:
    dest: "{{ cifmw_devscripts_repo_dir }}/pull_secret.json"
    src: "{{ cifmw_devscripts_pull_secret_file }}"
    owner: "{{ cifmw_devscripts_user }}"
    group: "{{ cifmw_devscripts_user }}"
    mode: "0644"

- name: Deploying the OpenShift platform
  tags:
    - bootstrap
  ci_make:
    chdir: "{{ cifmw_devscripts_repo_dir }}"
    output_dir: "{{ cifmw_devscripts_output_dir }}"
    dry_run: "{{ cifmw_devscripts_dry_run | bool }}"
    target: "{{ cifmw_devscripts_make_target | default(omit) }}"
