---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Gather the configurations to be passed to dev-scripts.
  tags:
    - always
  ansible.builtin.set_fact:
    cifmw_devscripts_config: >-
      {{
        cifmw_devscripts_config_defaults |
        combine(cifmw_devscripts_config_overrides, recursive=true)
      }}
    cacheable: true

- name: Fail in case of deprecated parameter
  block:
    - name: Fail if cifmw_devscripts_ci_token is defined
      when:
        - cifmw_devscripts_ci_token is defined
      ansible.builtin.fail:
        msg: |
          cifmw_devscripts_ci_token is deprecated, please use
          cifmw_manage_secrets_citoken_content instead!

    - name: Fail if cifmw_devscripts_ci_token_file is defined
      when:
        - cifmw_devscripts_ci_token_file is defined
      ansible.builtin.fail:
        msg: |
          cifmw_devscripts_ci_token_file is deprecated, please use
          cifmw_manage_secrets_citoken_file instead!

    - name: Fail if cifmw_devscripts_pull_secret is defined
      when:
        - cifmw_devscripts_pull_secret is defined
      ansible.builtin.fail:
        msg: |
          cifmw_devscripts_pull_secret is deprecated, please use
          cifmw_manage_secrets_citoken_content instead!

    - name: Fail if cifmw_devscripts_pull_secret_file is defined
      when:
        - cifmw_devscripts_pull_secret_file is defined
      ansible.builtin.fail:
        msg: |
          cifmw_devscripts_pull_secret_file is deprecated, please use
          cifmw_manage_secrets_pullsecret_file instead !

- name: Initialize manage_secrets role
  tags:
    - always
  ansible.builtin.import_role:
    name: manage_secrets

- name: Ensure the required folders are present.
  tags:
    - always
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ cifmw_devscripts_data_dir }}"
    - "{{ cifmw_devscripts_artifacts_dir }}"
    - "{{ cifmw_devscripts_logs_dir }}"
    - "{{ cifmw_devscripts_output_dir }}"

- name: Perform pre-checks
  tags:
    - always
  ansible.builtin.import_tasks: 00_pre_check.yml

- name: Prepare for OCP deployment.
  tags:
    - devscripts_prepare
    - devscripts_deploy
  when:
    - not cifmw_devscripts_skip_deploy | default(false)
    - not cifmw_devscripts_use_base_layer | default(false)
  block:
    - name: Prepare the host for execution of dev-scripts.
      ansible.builtin.import_tasks: 01_prepare_host.yml

    - name: Gather the host and dev-scripts required information.
      ansible.builtin.import_tasks: 02_gather_env_details.yml

- name: Running dev-scripts.
  tags:
    - devscripts_deploy
  when:
    - not cifmw_devscripts_skip_deploy | default(false)
    - not cifmw_devscripts_use_base_layer | default(false)
  ansible.builtin.import_tasks: 03_install.yml

- name: Prepare for image overlay
  when:
    - cifmw_devscripts_use_layers | bool
    - not cifmw_devscripts_skip_deploy | default(false)
  ansible.builtin.import_tasks: 04_overlays.yml

- name: Executing dev-scripts post-install tasks.
  tags:
    - devscripts_post
  when:
    - not cifmw_devscripts_dry_run | bool
    - not cifmw_devscripts_use_layers | bool
  ansible.builtin.import_tasks: 05_post.yml
