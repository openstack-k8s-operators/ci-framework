---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Set EDPM related vars
  tags:
    - always
  ansible.builtin.set_fact:
    cifmw_edpm_deploy_env: >-
      {{
        cifmw_install_yamls_environment |
        combine({'PATH': cifmw_path}) |
        combine({'DATAPLANE_REGISTRY_URL': cifmw_edpm_deploy_registry_url }) |
        combine({'DATAPLANE_CONTAINER_TAG': cifmw_repo_setup_full_hash | default(cifmw_install_yamls_defaults['DATAPLANE_CONTAINER_TAG']) }) |
        combine(cifmw_edpm_deploy_extra_vars | default({}))
      }}
    cacheable: true

- name: Save hostvars
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/ci-framework-data/artifacts/hostvars-dump.yml"
    content: "{{ hostvars | to_nice_yaml }}"

- name: Prepare OpenStack Dataplane NodeSet CR
  vars:
    make_edpm_deploy_prep_env: "{{ cifmw_edpm_deploy_env }}"
    make_edpm_deploy_prep_dryrun: "{{ cifmw_edpm_deploy_dryrun | bool }}"
  ansible.builtin.include_role:
    name: 'install_yamls_makes'
    tasks_from: 'make_edpm_deploy_prep'

- name: Kustomize and deploy OpenStackDataPlaneNodeSet
  when:
    - not cifmw_edpm_deploy_dryrun | bool
  vars:
    cifmw_edpm_deploy_openstack_cr_path: >-
      {{
        [
          cifmw_edpm_deploy_manifests_dir,
          cifmw_install_yamls_defaults['NAMESPACE'],
          'dataplane',
          'cr',
          (cifmw_install_yamls_defaults['DATAPLANE_CR'] | basename)
        ] | ansible.builtin.path_join
      }}
  environment:
    PATH: "{{ cifmw_path }}"
    KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
  block:
    - name: Find the OpenStack Dataplane NodeSet CR manifest
      ansible.builtin.find:
        paths: "{{ cifmw_edpm_deploy_manifests_dir }}/{{ cifmw_install_yamls_defaults['NAMESPACE'] }}/dataplane/cr"
        contains: "kind: OpenStackDataPlaneNodeSet"
        excludes: "kind: Kustomization"
        patterns: "*.yaml"
      register: cifmw_edpm_deploy_cr_manifest_paths

    - name: Ensure manifest exists
      ansible.builtin.assert:
        that: cifmw_edpm_deploy_cr_manifest_paths.matched == 1
        quiet: true
        msg: "Cannot determine OpenStackDataPlaneNodeSet deployment manifest"

    - name: Perform kustomizations to the OpenStackDataPlaneNodeSet CR
      vars:
        cifmw_edpm_kustomize_cr_path: "{{ cifmw_edpm_deploy_openstack_cr_path }}"
        cifmw_edpm_kustomize_content: "{{ cifmw_edpm_deploy_dataplane_cr_kustomization | default('{}') }}"
      ansible.builtin.include_role:
        name: edpm_kustomize

    - name: Apply the OpenStackDataPlaneNodeSet CR
      when: not cifmw_edpm_deploy_dryrun
      ci_script:
        output_dir: "{{ cifmw_edpm_deploy_basedir }}/artifacts"
        script: "oc apply -f {{ cifmw_edpm_deploy_openstack_cr_path }}"

    - name: Wait for OpenStackDataplaneNodeSet to be deployed
      ansible.builtin.command:
        cmd: >-
          oc wait OpenStackDataplaneNodeSet {{ cifmw_edpm_kustomize_last_cr_content.metadata.name }}
          --namespace={{ cifmw_install_yamls_defaults['NAMESPACE'] }}
          --for=condition=ready
          --timeout={{ cifmw_edpm_deploy_timeout }}m

- name: Validate EDPM
  when: cifmw_edpm_deploy_run_validation | bool
  vars:
    make_edpm_deploy_instance_env: "{{ cifmw_edpm_deploy_env }}"
  ansible.builtin.include_role:
    name: 'install_yamls_makes'
    tasks_from: 'make_edpm_deploy_instance'
