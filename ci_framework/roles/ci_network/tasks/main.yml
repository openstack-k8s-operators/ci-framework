---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Check if environment file exists
  register: env_file
  ansible.builtin.stat:
    path: "{{ cifmw_network_generated_layout }}"

- name: Load generated network if exists
  when:
    - env_file.stat.exists
  ansible.builtin.include_vars:
    file: "{{  cifmw_network_generated_layout }}"

- name: Validate network configuration
  vars:
    _net_layout: >-
      {{
        crc_ci_bootstrap_networks_out | default(cifmw_network_layout)
      }}
  ansible.builtin.import_tasks: validate.yml

- name: Configure NetworkManager service
  register: nm_config_update
  community.general.ini_file:
    path: "{{ cifmw_network_nm_config_file }}"
    state: "{{ nm_conf.state | default('present') }}"
    no_extra_spaces: true
    section: "{{ nm_conf.section }}"
    option: "{{ nm_conf.option }}"
    value: "{{ nm_conf.value }}"
  loop: "{{ cifmw_network_nm_config }}"
  loop_control:
    loop_var: nm_conf
    label: "{{ nm_conf.section }}-{{ nm_conf.option }}"

- name: Reload NetworkManager service if needed
  when:
    - nm_config_update is defined
    - nm_config_update is changed
  ansible.builtin.systemd:
    name: NetworkManager
    state: reloaded

- name: Clean all ethernet connection
  when:
    - cifmw_network_pre_cleanup | bool
  ansible.builtin.import_tasks: nm-cleanup.yml

- name: "Apply network configuration on {{ inventory_hostname }}"
  vars:
    _net_layout: >-
      {{
        crc_ci_bootstrap_networks_out | default(cifmw_network_layout)
      }}
  ansible.builtin.include_tasks: apply.yml
  loop: "{{ _net_layout[inventory_hostname] | dict2items }}"
  loop_control:
    loop_var: "network"
    label: "{{ network.key }}"
