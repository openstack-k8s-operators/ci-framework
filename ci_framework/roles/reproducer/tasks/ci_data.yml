---
- name: Run block only if we want to re-run a job
  when:
    - cifmw_job_uri is defined
  delegate_to: localhost
  block:
    - name: Extract job id for later reference
      vars:
        user_dir: "{{ lookup('env', 'HOME') }}"
        basedir: "{{ user_dir ~ '/ci-framework-data' }}"
        job_id: "{{ cifmw_job_uri | regex_replace('/$', '') | basename }}"
      ansible.builtin.set_fact:
        cacheable: true
        _reproducer_basedir: "{{ basedir }}/ci-reproducer/{{ job_id }}"
        data_baseurl: "{{ cifmw_job_uri }}/controller/ci-framework-data/artifacts/"
        job_id: "{{ job_id }}"

    - name: Create local directory for parameters
      ansible.builtin.file:
        path: "{{ _reproducer_basedir }}/parameters"
        state: directory

    - name: Fetch needed artifacts
      ansible.builtin.get_url:
        dest: "{{ _reproducer_basedir }}/{{ item }}"
        url: "{{ data_baseurl }}/{{ item }}"
        force: true
      loop:
        - parameters/custom-params.yml
        - parameters/install-yamls-params.yml
        - parameters/zuul-params.yml

    - name: Fetch zuul inventory
      ansible.builtin.get_url:
        dest: "{{ _reproducer_basedir }}/zuul_inventory.yml"
        url: "{{ cifmw_job_uri }}/zuul-info/inventory.yaml"
        force: true

    - name: Load parameters in current runtime
      ansible.builtin.include_vars:
        dir: "{{ _reproducer_basedir }}/parameters"

    - name: Extract compute count
      vars:
        zuul_inventory: >-
          {{
            lookup('file', _reproducer_basedir ~ '/zuul_inventory.yml') |
            from_yaml
           }}
        compute_count: >-
          {{
            zuul_inventory.all.hosts.keys() |
            select('match', '^compute.*') | length
           }}
      ansible.builtin.set_fact:
        cacheable: true
        ci_job_networking: "{{ zuul_inventory.all.hosts.crc.crc_ci_bootstrap_networking }}"
        use_content_provider: >-
          {{
            zuul_inventory.all.hosts.crc.content_provider_registry_ip is defined and
            zuul_inventory.all.hosts.crc.cifmw_operator_build_output is defined
          }}
        updated_layout:
          vms:
            compute:
              amount: "{{ compute_count | int }}"

    - name: Update layout
      ansible.builtin.set_fact:
        cacheable: true
        cifmw_libvirt_manager_configuration_gen: >-
          {{
            cifmw_libvirt_manager_configuration |
            combine(updated_layout, recursive=True)
          }}
