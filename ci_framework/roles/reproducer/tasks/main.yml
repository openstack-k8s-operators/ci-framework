---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Discover latest image for CS9
  tags:
    - bootstrap
    - bootstrap_layout
  ansible.builtin.import_role:
    name: discover_latest_image

- name: Ensure directories are present
  tags:
    - always
  ansible.builtin.file:
    path: "{{ cifmw_reproducer_basedir }}"
    state: directory
  loop:
    - artifacts
    - logs

- name: Load CI job environment
  when:
    - cifmw_job_uri is defined
  ansible.builtin.import_tasks: ci_data.yml

- name: Deploy layout on target host
  tags:
    - bootstrap
    - bootstrap_layout
  ansible.builtin.import_role:
    name: libvirt_manager
    tasks_from: deploy_layout

- name: Push generated inventory from hypervisor
  tags:
    - bootstrap
    - bootstrap_layout
  ansible.builtin.command:  # noqa: command-instead-of-module
    cmd: >-
      rsync -r {{ cifmw_reproducer_basedir }}/reproducer-inventory/
      zuul@controller-0:reproducer-inventory

- name: Slurp ssh key for CRC access
  tags:
    - bootstrap
    - bootstrap_layout
  register: crc_priv_key
  ansible.builtin.slurp:
    path: ".crc/machines/crc/id_ecdsa"

- name: Configure CRC services
  tags:
    - bootstrap
    - bootstrap_layout
  delegate_to: crc-0
  remote_user: root
  block:
    - name: Ensure crc-0 knows about its second NIC
      when:
        - cifmw_job_uri is undefined
      community.general.nmcli:
        autoconnect: true
        conn_name: private_net
        dns4: 127.0.0.1
        ifname: enp2s0
        type: ethernet
        ip4: "{{ cifmw_reproducer_crc_ip4 }}/24"
        gw4: "{{ cifmw_reproducer_crc_gw4 }}"
        state: present

    - name: Ensure crc-0 does not get "public" DNS
      community.general.nmcli:
        autoconnect: true
        conn_name: "Wired connection 1"
        dns4_ignore_auto: true
        state: present

    - name: Configure dns forwarders
      ansible.builtin.blockinfile:
        path: "/var/srv/dnsmasq.conf"
        block: |-
          server=1.1.1.1
          server=8.8.8.8

    - name: Configure local DNS for CRC pod
      register: last_modification
      ansible.builtin.replace:
        path: "/var/srv/dnsmasq.conf"
        regexp: "192.168.130.11"
        replace: "{{ cifmw_reproducer_crc_ip4 }}"

    - name: Reboot CRC node
      when:
        - last_modification is changed
        - cifmw_job_uri is undefined
      ansible.builtin.reboot:

- name: Get kubeconfig file from crc directory
  tags:
    - bootstrap
    - bootstrap_layout
  register: kubeconfig
  ansible.builtin.slurp:
    path: "{{ cifmw_reproducer_kubecfg }}"

- name: Configure controller-0
  tags:
    - bootstrap
    - bootstrap_layout
  delegate_to: controller-0
  remote_user: root
  block:
    - name: Ensure controller-0 has an IP in private network
      when:
        - cifmw_job_uri is undefined
      community.general.nmcli:
        autoconnect: true
        conn_name: private_net
        ifname: "{{ cifmw_reproducer_private_nic }}"
        type: ethernet
        ip4: "{{ cifmw_reproducer_ctl_ip4 }}/24"
        gw4: "{{ cifmw_reproducer_ctl_gw4 }}"
        state: present

    - name: Create kube directory
      ansible.builtin.file:
        path: "/home/zuul/.kube"
        state: directory
        owner: zuul
        group: zuul
        mode: "0755"

    - name: Inject kubeconfig content
      ansible.builtin.copy:
        dest: "/home/zuul/.kube/config"
        content: "{{ kubeconfig.content | b64decode }}"
        owner: zuul
        group: zuul
        mode: "0644"

    - name: Inject CRC ssh key
      ansible.builtin.copy:
        dest: "/home/zuul/.ssh/crc_key"
        content: "{{ crc_priv_key['content'] | b64decode }}"
        mode: "0400"
        owner: zuul
        group: zuul

    - name: Inject crc related host entry
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: >-
          {{ cifmw_reproducer_crc_ip4 }} api.crc.testing
          canary-openshift-ingress-canary.apps-crc.testing
          console-openshift-console.apps-crc.testing
          default-route-openshift-image-registry.apps-crc.testing
          downloads-openshift-console.apps-crc.testing
          oauth-openshift.apps-crc.testing

    - name: Install some tools
      ansible.builtin.package:
        name:
          - ansible-core
          - bash-completion
          - git-core
          - make
          - podman
          - python3-jmespath
          - python3-netaddr
          - python3-pip
          - tmux
          - vim
          - wget

    - name: Install ansible dependencies
      ansible.builtin.pip:
        requirements: https://raw.githubusercontent.com/openstack-k8s-operators/ci-framework/main/ansible-requirements.txt

- name: Sync known repositories to ansible controller
  when:
    - cifmw_job_uri is undefined
  delegate_to: localhost
  ansible.builtin.command:  # noqa: command-instead-of-module
    cmd: "rsync -ar {{ item.src }} zuul@controller-0:{{ item.dest }}"
  loop: "{{ cifmw_reproducer_repositories }}"
  loop_control:
    label: "{{ item.src | basename }}"

- name: Emulate CI job
  when:
    - cifmw_job_uri is defined
  ansible.builtin.import_tasks: ci_job.yml
