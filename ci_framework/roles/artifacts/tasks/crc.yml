---
- name: Create crc logs directory
  ignore_errors: true  # noqa: ignore-errors
  ansible.builtin.file:
    path: "{{ cifmw_artifacts_basedir }}/logs/crc"
    state: directory

- name: Ensure controller knows CRC ssh keys
  ignore_errors: true  # noqa: ignore-errors
  register: crc_host_key
  ansible.builtin.shell:
    cmd: >-
      ssh-keyscan {{ cifmw_artifacts_crc_host }} >> ~/.ssh/known_hosts

- name: Get CRC things only if we know it
  when:
    - crc_host_key is defined
    - crc_host_key.rc is defined
    - crc_host_key.rc == 0
  block:
    - name: Prepare root ssh accesses
      ignore_errors: true  # noqa: ignore-errors
      ci_script:
        output_dir: "{{ cifmw_artifacts_basedir }}/artifacts"
        script: |-
          ssh -i {{ cifmw_artifacts_crc_sshkey }} {{ cifmw_artifacts_crc_user }}@{{ cifmw_artifacts_crc_host }} <<EOF
          set -xe;
          test -d /etc/ssh/sshd_config.d/ && sudo sed -ri 's/PermitRootLogin no/PermitRootLogin prohibit-password/' /etc/ssh/sshd_config.d/* || true;
          sudo sed -i 's/PermitRootLogin no/PermitRootLogin prohibit-password/' /etc/ssh/sshd_config;
          sudo systemctl restart sshd;
          sudo cp -r .ssh /root/;
          sudo chown -R root: /root/.ssh;
          EOF

    - name: Copy logs from CRC VM
      ignore_errors: true  # noqa: ignore-errors
      ci_script:
        output_dir: "{{ cifmw_artifacts_basedir }}/artifacts"
        script: >-
          scp -v -r -i {{ cifmw_artifacts_crc_sshkey }}
          root@{{ cifmw_artifacts_crc_host }}:/ostree/deploy/rhcos/var/log/pods
          {{ cifmw_artifacts_basedir }}/logs/crc/

    - name: Collect pods status and cr files
      ignore_errors: true  # noqa: ignore-errors
      environment:
        KUBECONFIG: "{{ cifmw_openshift_kubeconfig }}"
        PATH: "{{ cifmw_path | default(ansible_env.PATH) }}"
      ci_script:
        output_dir: "{{ cifmw_artifacts_basedir }}/artifacts"
        script: |-
          for ns in openstack-operators openstack baremetal-operator-system; do
            oc get pods -n ${ns} > {{ cifmw_artifacts_basedir }}/logs/${ns}_pods.txt
          done
          pushd {{ cifmw_artifacts_basedir }}/logs/crc/
          mkdir crs
          pushd crs
          all_crds=$(oc get crd | awk '/openstack/ { print $1}' | awk -F '.' '{print $1}')
          for cr in ${all_crds}; do
            echo ${cr}
            oc get -o yaml ${cr} > ${cr}.yaml
          done
          popd
          popd
