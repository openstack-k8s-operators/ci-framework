---
# Base job defined for the architecture related jobs.
# Mostly, they are "linters", ensuring we're able to read
# and build content based on the automation file.
# You can refer to the ci/playbooks/architecture/validate-architecture.yml
# playbook for more information about the playbook capabilities.

- job:
    name: cifmw-architecture-validate-base
    parent: cifmw-base-minimal
    vars: &architecture_vars
      cifmw_architecture_repo: >-
        {{
          [ansible_user_dir,
           zuul.projects['github.com/openstack-k8s-operators/architecture'].src_dir]
           | path_join
        }}
      cifmw_networking_env_def_file_local: >-
        {{
          "" if not cifmw_networking_env_def_file else
          ([ cifmw_architecture_repo,
            cifmw_networking_env_def_file ] | path_join)
        }}
      cifmw_networking_mapper_networking_env_def_path: >-
        {{
          cifmw_networking_env_def_file_local |
          default([ansible_user_dir,
          zuul.projects['github.com/openstack-k8s-operators/ci-framework'].src_dir,
          'ci/playbooks/files/networking-env-definition.yml'] | path_join, true)
        }}
    run:
      - ci/playbooks/architecture/run.yml
    required-projects:
      - openstack-k8s-operators/architecture

- job:
    name: cifmw-architecture-validate-hci
    parent: cifmw-architecture-validate-base
    vars:
      cifmw_architecture_scenario: hci
    files:
      - zuul.d/architecture-jobs.yaml
      - ^roles/ci_gen_kustomize_values/(defaults|files|handlers|library|lookup_plugins|module_utils|tasks|templates|vars).*
      - ^roles/kustomize_deploy/(defaults|files|handlers|library|lookup_plugins|module_utils|tasks|templates|vars).*

- job:
    name: cifmw-architecture-crc-base
    parent: podified-multinode-edpm-deployment-crc-bootstrap
    nodeset: centos-9-medium-3x-centos-9-crc-extracted-2-39-0-3xl-vexxhost
    vars:
      <<: *architecture_vars
      cifmw_controller_name: controller
      cifmw_openshift_setup_skip_internal_registry_tls_verify: true
      cifmw_networking_env_def_file: "networking-env-definition.yml"
      cifmw_networking_mapper_networking_env_def_path: "/etc/ci/env/networking-environment-definition.yml"
      cifmw_run_tempest: true
      cifmw_run_test_role: test_operator
      cifmw_run_tests: true
      cifmw_test_operator_concurrency: 4
      cifmw_test_operator_timeout: 36000
      cifmw_architecture_user_kustomize_01_base_dns_override:
        stage_1:
          'network-values':
            data:
              dns-resolver:
                options:
                  - key: server
                    values:
                      - 192.168.122.10
      cifmw_crc_default_network: ctlplane
    extra-vars:
      cifmw_bootstrap_cloud_name: >-
        {%- if 'ibm-bm3' in nodepool.cloud -%}
        cifmw_ibm3
        {%- elif 'ibm-bm4' in nodepool.cloud -%}
        cifmw_ibm4
        {%- else -%}
        cifmw_vexxhost
        {%- endif -%}
      cifmw_networking_definition:
        networks:
          ctlplane:
            mtu: "{{ ('ibm' in nodepool.cloud) | ternary('1440', '1500') }}"
            router_net: "{{ ('ibm' in nodepool.cloud) | ternary('hostonly', 'public') }}"
            network: 192.168.122.0/24
            gateway: 192.168.122.1
          internalapi:
            mtu: "{{ ('ibm' in nodepool.cloud) | ternary('1436', '1496') }}"
            vlan: 20
            network: 172.17.0.0/24
          storage:
            mtu: "{{ ('ibm' in nodepool.cloud) | ternary('1436', '1496') }}"
            vlan: 21
            network: 172.18.0.0/24
          tenant:
            mtu: "{{ ('ibm' in nodepool.cloud) | ternary('1436', '1496') }}"
            vlan: 22
            network: 172.19.0.0/24
          storagemgmt:
            mtu: "{{ ('ibm' in nodepool.cloud) | ternary('1436', '1496') }}"
            vlan: 23
            network: 172.20.0.0/24
        routers:
          ci-router:
            external_network: public
            networks:
              - ctlplane
        instances:
          controller:
            networks:
              ctlplane:
                ip: 192.168.122.11
          crc:
            networks:
              ctlplane:
                ip: 192.168.122.10
                is-trunk-parent: true
              internalapi:
                ip: 172.17.0.10
                trunk-parent: ctlplane
                is-trunk-parent: false
                vlan_id: 20
              storage:
                ip: 172.18.0.10
                trunk-parent: ctlplane
                is-trunk-parent: false
                vlan_id: 21
              tenant:
                ip: 172.19.0.10
                trunk-parent: ctlplane
                is-trunk-parent: false
                vlan_id: 22
          compute-0:
            networks:
              ctlplane:
                ip: 192.168.122.100
              internalapi:
                ip: 172.17.0.100
                trunk-parent: ctlplane
                skip-nm-configuration: true
              storage:
                ip: 172.18.0.100
                trunk-parent: ctlplane
                skip-nm-configuration: true
              tenant:
                ip: 172.19.0.100
                trunk-parent: ctlplane
                skip-nm-configuration: true
              storagemgmt:
                ip: 172.20.0.100
                trunk-parent: ctlplane
                skip-nm-configuration: true
          compute-1:
            networks:
              ctlplane:
                ip: 192.168.122.101
              internalapi:
                ip: 172.17.0.101
                skip-nm-configuration: true
                trunk-parent: ctlplane
              storage:
                ip: 172.18.0.101
                trunk-parent: ctlplane
                skip-nm-configuration: true
              tenant:
                ip: 172.19.0.101
                trunk-parent: ctlplane
                skip-nm-configuration: true
              storagemgmt:
                ip: 172.20.0.101
                trunk-parent: ctlplane
                skip-nm-configuration: true
          compute-2:
            networks:
              ctlplane:
                ip: 192.168.122.102
              internalapi:
                ip: 172.17.0.102
                trunk-parent: ctlplane
                skip-nm-configuration: true
              storage:
                ip: 172.18.0.102
                trunk-parent: ctlplane
                skip-nm-configuration: true
              tenant:
                ip: 172.19.0.102
                trunk-parent: ctlplane
                skip-nm-configuration: true
              storagemgmt:
                ip: 172.20.0.102
                trunk-parent: ctlplane
                skip-nm-configuration: true
    run:
      - ci/playbooks/architecture_crc/run-architecture-crc.yml
    required-projects:
      - openstack-k8s-operators/architecture

- job:
    name: cifmw-architecture-crc-hci
    parent: cifmw-architecture-crc-base
    vars:
      cifmw_test_operator_tempest_include_list: |
        tempest.scenario.test_network_basic_ops.TestNetworkBasicOps
      # 12 pvs is not enough
      cifmw_cls_pv_count: 20
      cifmw_extras:
        - '@scenarios/reproducers/va-hci-reduced.yml'
        - 'cifmw_run_test_role=test_operator'
