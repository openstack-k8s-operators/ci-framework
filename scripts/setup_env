#!/usr/bin/env bash
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


## Shell Opts ----------------------------------------------------------------
set -o pipefail
set -xeuo

## Vars ----------------------------------------------------------------------
export PROJECT_DIR="$(dirname $(readlink -f ${BASH_SOURCE[0]}))/../"
# NOTE(cloudnull): Disable ansible compat check, caters to the case where
#                  system ansible may be installed.
export ANSIBLE_SKIP_CONFLICT_CHECK=1

USE_VENV=${USE_VENV:-'yes'}

## Main ----------------------------------------------------------------------
# Source distribution information
source /etc/os-release || source /usr/lib/os-release
RHT_PKG_MGR=$(command -v dnf || command -v yum)
PYTHON_EXEC=$(command -v python3 || command -v python)

# Install the requirements we need to run local tests
command -v gcc || sudo dnf -y install gcc

PIP='pip'
case ${USE_VENV} in
    'y|yes|true')
        PIP="${HOME}/test-python/bin/pip"
        USE_VENV='yes'
        ${PYTHON_EXEC} -m venv -h 2>&1>/dev/null || sudo "${RHT_PKG_MGR}" install -y python*-virtualenv
        echo
        echo ### USING VIRTUALENV
        echo
        ;;
    'n|no|false')
        PIP="pip"
        USE_VENV='no'
        echo
        echo ### NO VENV - may break your system!
        echo
        ;;
esac

# Kill all sudo in the current shell
sudo -k

function run_pip {
    "${PIP}" install \
             -c "${PROJECT_DIR}ansible-requirements.txt" \
             -r "${PROJECT_DIR}requirements.txt" \
             -r "${PROJECT_DIR}test-requirements.txt" \
             -r "${PROJECT_DIR}molecule-requirements.txt" ${@:-}
}

# Ensure the required ci file is presnet
mkdir -p ${HOME}/ci/yum.repos.d
cp /etc/ci/mirror_info.sh ${HOME}/ci || touch ${HOME}/ci/mirror_info.sh
cp -r /opt/yum.repos.d/* ${HOME}/ci/yum.repos.d || cp -r /etc/yum.repos.d/* ${HOME}/ci/yum.repos.d

if [ ${USE_VENV} == 'yes' ]; then
    # Create a virtual env
    "${PYTHON_EXEC}" -m venv --upgrade-deps "${HOME}/test-python"
    if [[ -d "${HOME}/.cache/pip/wheels" ]]; then
        rm -rf "${HOME}/.cache/pip/wheels"
    fi
fi

# Run bindep
"${PIP}" install pip setuptools bindep --upgrade
"${PROJECT_DIR}/scripts/bindep-install"

# Install local requirements
run_pip

# Display list of installed packages with versions (debugging failures)
"${PIP}" freeze
