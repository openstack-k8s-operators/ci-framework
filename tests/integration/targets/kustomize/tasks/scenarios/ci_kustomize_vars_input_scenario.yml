---
- name: Apply a single string based kustomization
  vars:
    kustomize_tc_idempotence: true
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-single-string-kustomization"
    kustomize_tc_target_manifest_path: "testing-deployment.yaml"
    kustomize_tc_kustomizations: |-
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      patches:
      -   patch: |-
            - op: replace
              path: /metadata/labels/cifmw-label-1
              value: "cifmw-label-1-value"
          target:
              kind: Deployment
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
    kustomize_tc_should_apply_kustomizations_count: 1
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply two different kustomizations on a single string targeting a directory
  vars:
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-two-string-dir-kustomizations"
    kustomize_tc_target_dir_paths:
      - "testing-deployment.yaml"
      - "testing-cm.yml"
    kustomize_tc_kustomizations: |-
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      patches:
      -   patch: |-
            - op: replace
              path: /metadata/labels/cifmw-label-1
              value: "cifmw-label-1-value"
          target:
              kind: Deployment
      ---
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      patches:
      -   patch: |-
            - op: replace
              path: /metadata/labels/cifmw-label-1
              value: "cifmw-label-1-value"
          target:
              kind: ConfigMap
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
      - apiVersion: v1
        kind: ConfigMap
        name: testing-cm
        labels:
          cifmw-label-1: "cifmw-label-1-value"
    kustomize_tc_should_apply_kustomizations_count: 2
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply two different kustomizations on a single string targeting a combined file
  vars:
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-two-string-combined-file-kustomizations"
    kustomize_tc_target_manifest_path: "testing-combined-manifests.yml"
    kustomize_tc_kustomizations: |-
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      patches:
      -   patch: |-
            - op: replace
              path: /metadata/labels/cifmw-label-1
              value: "cifmw-label-1-value"
          target:
              kind: Job
      ---
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      patches:
      -   patch: |-
            - op: replace
              path: /metadata/labels/cifmw-label-1
              value: "cifmw-label-1-value"
          target:
              kind: Secret
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: batch/v1
        kind: Jobs
        name: testing-job
        labels:
          cifmw-label-1: "cifmw-label-1-value"
      - apiVersion: v1
        kind: Secret
        name: testing-secret
        labels:
          cifmw-label-1: "cifmw-label-1-value"
    kustomize_tc_should_apply_kustomizations_count: 2
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply a string with multiple string kustomizations
  vars:
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-two-string-kustomizations"
    kustomize_tc_target_manifest_path: "testing-deployment.yaml"
    kustomize_tc_kustomizations: |-
      ---
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      patches:
      -   patch: |-
            - op: replace
              path: /metadata/labels/cifmw-label-1
              value: "cifmw-label-1-value"
          target:
              kind: Deployment
      ---
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      patches:
      -   patch: |-
            - op: replace
              path: /metadata/labels/cifmw-label-2
              value: "cifmw-label-2-value"
          target:
              kind: Deployment
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
          cifmw-label-2: "cifmw-label-2-value"
    kustomize_tc_should_apply_kustomizations_count: 2
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply a single dict based kustomization
  vars:
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-single-dict-kustomization"
    kustomize_tc_target_manifest_path: "testing-deployment.yaml"
    kustomize_tc_kustomizations:
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      patches:
        - patch: |-
            - op: add
              path: /metadata/labels/cifmw-label-1
              value: "cifmw-label-1-value"
          target:
            kind: Deployment
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
    kustomize_tc_should_apply_kustomizations_count: 1
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply a couple of mixed string/dict kustomizations
  vars:
    kustomize_tc_idempotence: true
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-mixed-string-dict-kustomizations"
    kustomize_tc_target_manifest_path: "testing-deployment.yaml"
    kustomize_tc_kustomizations:
      - apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        patches:
          - patch: |-
              - op: replace
                path: /metadata/labels/cifmw-label-1
                value: "cifmw-label-1-value"
            target:
              kind: Deployment
      - |-
        ---
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        patches:
        -   patch: |-
              - op: add
                path: /metadata/labels/cifmw-label-2
                value: "cifmw-label-2-value"
            target:
              kind: Deployment
        ---
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        patches:
        -   patch: |-
              - op: add
                path: /metadata/labels/cifmw-label-3
                value: "cifmw-label-3-value"
            target:
              kind: Deployment
        resources:
          - testing-deployment.yaml
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
          cifmw-label-2: "cifmw-label-2-value"
          cifmw-label-3: "cifmw-label-3-value"
    kustomize_tc_should_apply_kustomizations_count: 3
  ansible.builtin.include_tasks: run_test_case.yml
