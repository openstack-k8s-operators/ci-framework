---
- name: Apply the file based kustomizations to the CR
  vars:
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-files-single-file-kustomization"
    kustomize_tc_target_manifest_path: "testing-deployment.yaml"
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
          cifmw-label-2: "cifmw-label-2-value"
          cifmw-label-3: "cifmw-label-3-value"
    kustomize_tc_should_apply_kustomizations_count: 3
    # Define kustomization that needs to be copied to the TC temporal folder:
    kustomize_tc_copy_kustomization_files:
      - "kustomization.yml"
      - "kustomization.yaml"
      - "single-kustomization-file-1.yaml"
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply the file based kustomizations to a couple of CRs
  vars:
    kustomize_tc_idempotence: true
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-files-dir-target-kustomization"
    kustomize_tc_target_dir_paths:
      - "testing-deployment.yaml"
      - "testing-cm.yml"
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
          cifmw-label-4: "cifmw-label-4-value"
          cifmw-label-5: "cifmw-label-5-value"
      - apiVersion: v1
        kind: ConfigMap
        name: testing-cm
        labels:
          cifmw-label-1: "cifmw-label-1-value"
    kustomize_tc_should_apply_kustomizations_count: 5
    # Define kustomization that needs to be copied to the TC temporal folder:
    kustomize_tc_copy_kustomization_files:
      - "kustomization.yml"
      - "kustomization.yaml"
      - "multiple-kustomizations-in-one-file.yml"
      - "cm-kustomization-1.yml"
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply the files based kustomizations (with extras) to the CR
  vars:
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-files-single-file-extras-kustomization"
    kustomize_tc_target_manifest_path: "testing-deployment.yaml"
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
          cifmw-label-2: "cifmw-label-2-value"
          cifmw-label-3: "cifmw-label-3-value"
          cifmw-label-4: "cifmw-label-4-value"
          cifmw-label-5: "cifmw-label-5-value"
          cifmw-label-6: "cifmw-label-6-value"
    kustomize_tc_should_apply_kustomizations_count: 6
    # Define kustomization that needs to be copied to the TC temporal folder:
    kustomize_tc_copy_kustomization_files:
      - "kustomization.yml"
      - "kustomization.yaml"
      - "single-kustomization-file-1.yaml"
    kustomize_tc_copy_kustomization_paths:
      -
        - "single-kustomization-file-2.yaml"
      -
        - "multiple-kustomizations-in-one-file.yml"
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply the file based kustomizations to a couple of CRs (with extras)
  vars:
    kustomize_tc_idempotence: true
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-files-dir-target-extras-kustomization"
    kustomize_tc_target_dir_paths:
      - "testing-deployment.yaml"
      - "testing-cm.yml"
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
          cifmw-label-4: "cifmw-label-4-value"
          cifmw-label-5: "cifmw-label-5-value"
      - apiVersion: v1
        kind: ConfigMap
        name: testing-cm
        labels:
          cifmw-label-1: "cifmw-label-1-value"
          cifmw-label-2: "cifmw-label-2-value"
    kustomize_tc_should_apply_kustomizations_count: 6
    # Define kustomization that needs to be copied to the TC temporal folder:
    kustomize_tc_copy_kustomization_files:
      - "kustomization.yml"
      - "kustomization.yaml"
      - "cm-kustomization-1.yml"
    kustomize_tc_copy_kustomization_paths:
      # Non-list of list paths points ci_kustomize directly to a kustomization,
      # otherwise, the path to the dir containing the kustomizations is passed
      - "cm-kustomization-2.yml"
      -
        - "multiple-kustomizations-in-one-file.yml"
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply overlapping file based kustomizations to a CR (ascending)
  vars:
    kustomize_tc_idempotence: true
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-files-dir-sorting-asc-kustomization"
    kustomize_tc_sort_ascending: true
    kustomize_tc_target_manifest_path: "testing-deployment.yaml"
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value-override-b"
          cifmw-label-2: "cifmw-label-2-value-override-c"
          cifmw-label-3: "cifmw-label-3-value-override-c"
    kustomize_tc_should_apply_kustomizations_count: 3
    # Define kustomization that needs to be copied to the TC temporal folder:
    kustomize_tc_copy_kustomization_files:
      - "b-sorting-kustomization.yml"
    kustomize_tc_copy_kustomization_paths:
      -
        - "c-sorting-kustomization.yml"
      -
        - "a-sorting-kustomization.yml"
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply overlapping file based kustomizations to a CR (descending)
  vars:
    kustomize_tc_idempotence: true
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-files-dir-sorting-dsc-kustomization"
    kustomize_tc_sort_ascending: false
    kustomize_tc_target_manifest_path: "testing-deployment.yaml"
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-1: "cifmw-label-1-value"
          cifmw-label-2: "cifmw-label-2-value"
          cifmw-label-3: "cifmw-label-3-value"
    kustomize_tc_should_apply_kustomizations_count: 3
    # Define kustomization that needs to be copied to the TC temporal folder:
    kustomize_tc_copy_kustomization_files:
      - "a-sorting-kustomization.yml"
    kustomize_tc_copy_kustomization_paths:
      -
        - "c-sorting-kustomization.yml"
      -
        - "b-sorting-kustomization.yml"
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply the files based kustomizations to a filtered set of resources (skip regex)
  vars:
    kustomize_tc_idempotence: true
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-files-dir-target-extras-skip-regex-kustomization"
    kustomize_tc_target_dir_paths:
      - "testing-deployment.yaml"
      - "testing-cm.yml"
    kustomize_tc_skip_regexes:
      - "cm-kustomization-(.).yml$"
      - "testing-cm.yml$"
      - "kustomization.yaml$"
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: apps/v1
        kind: Deployment
        name: testing-deployment
        labels:
          cifmw-label-2: "cifmw-label-2-value"
          cifmw-label-4: "cifmw-label-4-value"
          cifmw-label-5: "cifmw-label-5-value"
    kustomize_tc_should_apply_kustomizations_count: 3
    kustomize_tc_should_output_count: 1
    # Define kustomization that needs to be copied to the TC temporal folder:
    kustomize_tc_copy_kustomization_files:
      - "kustomization.yml"
      - "kustomization.yaml"
      - "cm-kustomization-1.yml"
    kustomize_tc_copy_kustomization_paths:
      # Non-list of list paths points ci_kustomize directly to a kustomization,
      # otherwise, the path to the dir containing the kustomizations is passed
      - "cm-kustomization-2.yml"
      -
        - "multiple-kustomizations-in-one-file.yml"
  ansible.builtin.include_tasks: run_test_case.yml

- name: Apply the files based kustomizations to a filtered set of resources (include regex)
  vars:
    kustomize_tc_idempotence: true
    # Define the kustomization parameters
    kustomize_tc_extra_path: "{{ ci_kustomize_oc_bin_path }}"
    kustomize_tc_name: "tc-success-files-dir-target-extras-inc-regex-kustomization"
    kustomize_tc_target_dir_paths:
      - "testing-deployment.yaml"
      - "testing-cm.yml"
    kustomize_tc_include_regexes:
      - "cm-kustomization-1.yml$"
      - "testing-cm.yml$"
    # Define assertions
    kustomize_tc_should_fail: false
    kustomize_tc_should_change: true
    kustomize_tc_should_have_labels:
      - apiVersion: v1
        kind: ConfigMap
        name: testing-cm
        labels:
          cifmw-label-1: "cifmw-label-1-value"
    kustomize_tc_should_apply_kustomizations_count: 1
    kustomize_tc_should_output_count: 1
    # Define kustomization that needs to be copied to the TC temporal folder:
    kustomize_tc_copy_kustomization_files:
      - "kustomization.yml"
      - "kustomization.yaml"
      - "cm-kustomization-1.yml"
    kustomize_tc_copy_kustomization_paths:
      # Non-list of list paths points ci_kustomize directly to a kustomization,
      # otherwise, the path to the dir containing the kustomizations is passed
      - "cm-kustomization-2.yml"
      -
        - "multiple-kustomizations-in-one-file.yml"
  ansible.builtin.include_tasks: run_test_case.yml
