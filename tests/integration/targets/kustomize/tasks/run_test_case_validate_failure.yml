---
- name: "[{{ kustomize_tc_name }}] Assert that the error field is present and its content is the expected one" # noqa: name[template]
  ansible.builtin.assert:
    that:
      - "'error' in output"
      - "(kustomize_tc_should_contain_error | lower) in (output['error'] | lower)"
    quiet: true

- name: "[{{ kustomize_tc_name }}] Assert that the details field is present, if expected, and its content is the expected one" # noqa: name[template]
  when: kustomize_tc_should_contain_details is defined
  ansible.builtin.assert:
    that:
      - "'details' in output"
      - "(kustomize_tc_should_contain_details | lower) in (output['details'] | lower)"
    quiet: true

- name: "[{{ kustomize_tc_name }}] Assert that an argument validation error is properly formated if expected" # noqa: name[template]
  when: kustomize_tc_should_contain_invalid_argument is defined
  ansible.builtin.assert:
    that:
      - "'argument' in output"
      - "output['argument'] == kustomize_tc_should_contain_invalid_argument"
    quiet: true

- name: "[{{ kustomize_tc_name }}] Assert that the error kustomization fields are present, if expected, and its content is the expected one" # noqa: name[template]
  when: kustomize_tc_should_contain_invalid_kustomization_run | default(false)
  block:
    - name: "[{{ kustomize_tc_name }}] Assert that the expected fields that points and contains the kustomization are present" # noqa: name[template]
      ansible.builtin.assert:
        that:
          - "'kustomization' in output"
          - "'kustomization_path' in output"
        quiet: true

    - name: "[{{ kustomize_tc_name }}] Fetch kustomization pointed by kustomization_path" # noqa: name[template]
      ansible.builtin.stat:
        path: "{{ output['kustomization_path'] }}"
      register: _ci_kustomize_path_failed_stat

    - name: "[{{ kustomize_tc_name }}] Assert that the path exists" # noqa: name[template]
      ansible.builtin.assert:
        that: "_ci_kustomize_path_failed_stat.stat.exists | bool"
        quiet: true

    - name: "[{{ kustomize_tc_name }}] Fetch the kustomization_path file content" # noqa: name[template]
      ansible.builtin.slurp:
        src: "{{ output['kustomization_path'] }}"
      register: _ci_kustomize_path_failed_slurp

    - name: "[{{ kustomize_tc_name }}] Assert that the fetched content is the same as the provided by the plugin exists" # noqa: name[template]
      ansible.builtin.assert:
        that: "(_ci_kustomize_path_failed_slurp['content'] | b64decode | from_yaml) == output['kustomization']"
        quiet: true

- name: "[{{ kustomize_tc_name }}] Assert that the kustomization content is the expected one in case of validation failure" # noqa: name[template]
  when: kustomize_tc_should_contain_validation_error_content is defined
  ansible.builtin.assert:
    that:
      - "'kustomization' in output"
      - "kustomize_tc_should_contain_validation_error_content == output['kustomization']"
    quiet: true
