---
- name: "Create a directory to download each kustomization tool"
  ansible.builtin.tempfile:
    state: directory
    suffix: cifmw-ci-kustomize-bins-dir
  register: _ci_kustomize_temporal_bins_dir

- name: Set files dir as a fact
  vars:
    role_test_dir: "{{ ansible_env.HOME }}/.ansible/collections//ansible_collections/cifmw/general/tests/integration/targets/kustomize"
  ansible.builtin.set_fact:
    ci_kustomize_scenarios_dir_path: "{{ role_test_dir }}/tasks/scenarios"
    ci_kustomize_files_dir_path: "{{ role_test_dir }}/files"
    ci_kustomize_oc_bin_path: "{{ _ci_kustomize_temporal_bins_dir.path }}/oc"
    ci_kustomize_kustomize_bin_path: "{{ _ci_kustomize_temporal_bins_dir.path }}/kustomize"

- name: Create OC and kustomize binaries path
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ ci_kustomize_oc_bin_path }}"
    - "{{ ci_kustomize_kustomize_bin_path }}"

- name: Fetch kustomize tools
  vars:
    _arch: "{{ ansible_architecture | lower }}"
    _is_arm: "{{ _arch in ['aarch64', 'arm64'] }}"
    _is_macos: "{{ (ansible_distribution | lower) == 'macosx' }}"
  block:
    - name: Fetch oc from OCP mirror
      vars:
        _os_string: >-
          {{
            _is_macos | ternary('mac', 'linux')
          }}
        _arch_string: >-
          {{
            _is_arm | ternary('-arm64', '')
          }}
      ansible.builtin.unarchive:
        src: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-client-{{ _os_string }}{{ _arch_string }}.tar.gz
        dest: "{{ ci_kustomize_oc_bin_path }}"
        remote_src: true

    - name: Fetch kustomize from sigs Github
      vars:
        _os_string: >-
          {{
            _is_macos | ternary('darwin', 'linux')
          }}
        _arch_string: >-
          {{
            'amd64' if _arch == 'x86_64' else (_is_arm | ternary('arm64', _arch))
          }}
      ansible.builtin.unarchive:
        src: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.2/kustomize_v5.4.2_{{ _os_string }}_{{ _arch_string }}.tar.gz
        dest: "{{ ci_kustomize_kustomize_bin_path }}"
        remote_src: true

- name: Recursively find scenario files
  ansible.builtin.find:
    paths: "{{ ci_kustomize_scenarios_dir_path }}"
    patterns: '*.yml'
  register: ci_kustomize_scenarios_find

- name: Run scenario file
  ansible.builtin.include_tasks: "{{ scenario_path }}"
  loop: "{{ ci_kustomize_scenarios_find.files | map(attribute='path') }}"
  loop_control:
    label: "{{ scenario_path }}"
    loop_var: "scenario_path"

- name: "Delete the temporal bins directory"
  ansible.builtin.file:
    path: "{{ _ci_kustomize_temporal_bins_dir.path }}"
    state: absent
